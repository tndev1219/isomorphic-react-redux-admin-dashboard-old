{"version":3,"sources":["containers/Box/config.js","containers/Box/helperfunc.js","containers/Box/GridLayout.js"],"names":["layoutConfig","className","autoSize","verticalCompact","cols","lg","md","sm","xs","xxs","breakpoints","draggableHandle","isResizable","rowHeight","margin","gutter","indexOfBoxfunc","allBox","uid","boxIndex","forEach","box","index","toString","deleteBox","boxActions","saveBox","ResponsiveReactGridLayout","WidthProvider","Responsive","GridLayout","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onLayoutChange","bind","assertThisInitialized","breakPointChange","autoHeight","state","breakpoint","setState","nextProps","reload","layouts","_this2","layout","i","x","y","h","w","size","newBreakpoint","height","_ref","_this$state","self","map","singleBox","indexOfBox","Math","ceil","setTimeout","_this3","Layouts","mdLayouts","lgLayouts","smLayouts","xsLayouts","xxsLayouts","push","objectSpread","parseInt","generateLayoutfunc","boxSettings","onDragStop","onResizeStop","onBreakpointChange","react_default","a","createElement","key","lib","debounceTimeout","onResize","data","style","paddingRight","concat","paddingBottom","title","onClick","icon","type","content","reactComponent","Component","connect","Box"],"mappings":"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","file":"static/js/47.ad012b91.chunk.js","sourcesContent":["const layoutConfig = {\n  className: 'isoCardBoxLayout',\n  autoSize: true,\n  verticalCompact: true,\n  cols: { lg: 96, md: 96, sm: 96, xs: 96, xxs: 96 },\n  breakpoints: { lg: 1200, md: 996, sm: 768, xs: 480, xxs: 200 },\n  draggableHandle: '.isoDragBox',\n  isResizable: true,\n  rowHeight: 1,\n  margin: [0, 0],\n};\n\nconst gutter = {\n  gutterWidth: 10,\n  gutterHeight: 10,\n};\nexport { layoutConfig, gutter };\n","const generateLayoutfunc = allBox => {\n  const mdLayouts = [];\n  const lgLayouts = [];\n  const smLayouts = [];\n  const xsLayouts = [];\n  const xxsLayouts = [];\n  allBox.forEach(box => {\n    mdLayouts.push({\n      ...box,\n      x: parseInt(box.size.md.x, 10),\n      y: parseInt(box.size.md.y, 10),\n      h: parseInt(box.size.md.h, 10),\n      w: parseInt(box.size.md.w, 10),\n      i: box.size.md.i.toString(),\n    });\n    lgLayouts.push({\n      ...box,\n      x: parseInt(box.size.lg.x, 10),\n      y: parseInt(box.size.lg.y, 10),\n      h: parseInt(box.size.lg.h, 10),\n      w: parseInt(box.size.lg.w, 10),\n      i: box.size.lg.i.toString(),\n    });\n    smLayouts.push({\n      ...box,\n      x: parseInt(box.size.sm.x, 10),\n      y: parseInt(box.size.sm.y, 10),\n      h: parseInt(box.size.sm.h, 10),\n      w: parseInt(box.size.sm.w, 10),\n      i: box.size.sm.i.toString(),\n    });\n    xsLayouts.push({\n      ...box,\n      x: parseInt(box.size.xs.x, 10),\n      y: parseInt(box.size.xs.y, 10),\n      h: parseInt(box.size.xs.h, 10),\n      w: parseInt(box.size.xs.w, 10),\n      i: box.size.xs.i.toString(),\n    });\n    xxsLayouts.push({\n      ...box,\n      x: parseInt(box.size.xxs.x, 10),\n      y: parseInt(box.size.xxs.y, 10),\n      h: parseInt(box.size.xxs.h, 10),\n      w: parseInt(box.size.xxs.w, 10),\n      i: box.size.xxs.i.toString(),\n    });\n  });\n  return {\n    md: mdLayouts,\n    lg: lgLayouts,\n    sm: smLayouts,\n    xs: xsLayouts,\n    xxs: xxsLayouts,\n  };\n};\n\nconst indexOfBoxfunc = (allBox, uid) => {\n  let boxIndex = -1;\n  allBox.forEach((box, index) => {\n    if (box.uid.toString() === uid.toString()) {\n      boxIndex = index;\n    }\n  });\n  return boxIndex;\n};\n\nexport { generateLayoutfunc, indexOfBoxfunc };\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Responsive, WidthProvider } from 'react-grid-layout';\nimport { ReactElementResize } from 'react-element-resize';\nimport { Icon } from 'antd';\nimport boxActions from '../../redux/box/actions';\nimport { layoutConfig, gutter } from './config';\nimport { generateLayoutfunc, indexOfBoxfunc } from './helperfunc.js';\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\nimport './box.css';\n\nconst { deleteBox, saveBox } = boxActions;\nconst ResponsiveReactGridLayout = WidthProvider(Responsive);\n\nclass GridLayout extends Component {\n  constructor(props) {\n    super(props);\n    this.onLayoutChange = this.onLayoutChange.bind(this);\n    this.breakPointChange = this.breakPointChange.bind(this);\n    this.autoHeight = this.autoHeight.bind(this);\n    this.state = {\n      breakpoint: 'lg'\n    };\n  }\n  componentWillMount() {\n    this.setState({ allBox: this.props.allBox });\n  }\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.reload) {\n      this.setState({ allBox: nextProps.allBox });\n    }\n  }\n  onLayoutChange(layouts) {\n    const { allBox } = this.state;\n    layouts.forEach(layout => {\n      const boxIndex = indexOfBoxfunc(allBox, layout.i);\n      if (boxIndex !== -1) {\n        const { x, y, h, w, i } = layout;\n        allBox[boxIndex].size[this.state.breakpoint] = { x, y, h, w, i };\n      }\n    });\n    this.setState({ allBox });\n    this.props.saveBox(allBox);\n  }\n  breakPointChange(newBreakpoint) {\n    // this.breakpoint = newBreakpoint;\n    this.setState({ breakpoint: newBreakpoint });\n    // Device type can be accesssed from this.breakpoint variable\n  }\n  autoHeight(uid, { height }) {\n    const { allBox, breakpoint } = this.state;\n    const self = this;\n    if (height === 0) {\n      return;\n    }\n    allBox.map(singleBox => {\n      const indexOfBox = indexOfBoxfunc(allBox, uid);\n      if (\n        allBox[indexOfBox].size[breakpoint].h !==\n        Math.ceil(height / layoutConfig.rowHeight)\n      ) {\n        allBox[indexOfBox].size[breakpoint].h = Math.ceil(\n          height / layoutConfig.rowHeight\n        );\n      }\n      return null;\n    });\n    setTimeout(() => {\n      self.setState({ allBox });\n    }, 1);\n  }\n  render() {\n    const { allBox } = this.state;\n    const { deleteBox } = this.props;\n    const Layouts = generateLayoutfunc(allBox);\n    const renderBox = singleBox => {\n      return (\n        <div className=\"isomorphicSingleCardHolder\" key={singleBox.i}>\n          <ReactElementResize\n            debounceTimeout={200}\n            onResize={data => {\n              this.autoHeight(singleBox.i, data);\n            }}\n          >\n            {data => (\n              <div\n                className=\"isomorphicSingleCard\"\n                style={{\n                  paddingRight: `${Math.ceil(gutter.gutterWidth)}px`,\n                  paddingBottom: `${Math.ceil(gutter.gutterHeight)}px`\n                }}\n              >\n                <div className=\"isoCardBox\">\n                  <div className=\"isoCardBoxHeader\">\n                    <h3>{singleBox.title}</h3>\n\n                    <div className=\"isoCardControl\">\n                      <button\n                        className=\"isoDeleteBtn\"\n                        onClick={() => deleteBox(singleBox.i)}\n                      >\n                        <Icon type=\"delete\" />\n                      </button>\n                      <button className=\"isoDragBox\" type=\"button\">\n                        <Icon type=\"swap\" />\n                      </button>\n                    </div>\n                  </div>\n\n                  <div className=\"isoCardBoxBody\">\n                    <p>{singleBox.content}</p>\n                    {singleBox.reactComponent ? (\n                      <singleBox.reactComponent />\n                    ) : null}\n                  </div>\n                </div>\n              </div>\n            )}\n          </ReactElementResize>\n        </div>\n      );\n    };\n    const boxSettings = {\n      ...layoutConfig,\n      layouts: Layouts,\n      onDragStop: this.onLayoutChange,\n      onResizeStop: this.onLayoutChange,\n      onBreakpointChange: this.breakPointChange\n    };\n    return (\n      <div className=\"isoCardBoxContentWrapper\">\n        <ResponsiveReactGridLayout {...boxSettings}>\n          {Layouts.md.map(renderBox)}\n        </ResponsiveReactGridLayout>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    allBox: state.Box.allBox,\n    reload: state.Box.reload\n  };\n}\nexport default connect(mapStateToProps, {\n  saveBox,\n  deleteBox\n})(GridLayout);\n"],"sourceRoot":""}