{"version":3,"sources":["containers/Charts/reactChart2/components/randomizedLine/randomizedConfig.js","containers/Charts/reactChart2/components/randomizedLine/randomizedLine.js"],"names":["initialData","labels","datasets","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","data","Graph","this","setState","_this","setInterval","state","newData","newData2","x","length","push","Math","floor","random","react_default","a","createElement","es","Component","randomizedLine_Graph"],"mappings":"0KAAMA,EAAc,CAClBC,OAAQ,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,QACjEC,SAAU,CACR,CACEC,MAAO,mBACPC,MAAM,EACNC,YAAa,GACbC,gBAAiB,uBACjBC,YAAa,qBACbC,eAAgB,OAChBC,WAAY,GACZC,iBAAkB,EAClBC,gBAAiB,QACjBC,iBAAkB,qBAClBC,qBAAsB,OACtBC,iBAAkB,EAClBC,iBAAkB,EAClBC,0BAA2B,qBAC3BC,sBAAuB,sBACvBC,sBAAuB,EACvBC,YAAa,EACbC,eAAgB,GAChBC,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAEjC,CACElB,MAAO,oBACPC,MAAM,EACNC,YAAa,GACbC,gBAAiB,uBACjBC,YAAa,qBACbC,eAAgB,OAChBC,WAAY,GACZC,iBAAkB,EAClBC,gBAAiB,QACjBC,iBAAkB,qBAClBC,qBAAsB,OACtBC,iBAAkB,EAClBC,iBAAkB,EAClBC,0BAA2B,qBAC3BC,sBAAuB,sBACvBC,sBAAuB,EACvBC,YAAa,EACbC,eAAgB,GAChBC,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,iDCvC/BC,+LAEFC,KAAKC,SAASxB,+CAGd,IAAMyB,EAAQF,KACdG,YAAY,WAIV,IAJgB,IACRxB,EAAauB,EAAME,MAAnBzB,SACJ0B,EAAU,GACVC,EAAW,GACNC,EAAI,EAAGA,EAAIL,EAAME,MAAM1B,OAAO8B,OAAQD,IAC7CF,EAAQI,KAAKC,KAAKC,MAAsB,IAAhBD,KAAKE,WAC7BN,EAASG,KAAKC,KAAKC,MAAsB,IAAhBD,KAAKE,WAEhCjC,EAAS,GAAGmB,KAAOO,EACnB1B,EAAS,GAAGmB,KAAOQ,EACnBJ,EAAMD,SAAS,CAAEtB,cAChB,sCAGH,OAAOkC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMlB,KAAME,KAAKI,eApBRa,gMA0BhB,OAAOJ,EAAAC,EAAAC,cAACG,EAAD,aAFkBD","file":"static/js/ReactChart2-randomizedLine.347321dc.chunk.js","sourcesContent":["const initialData = {\n  labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n  datasets: [\n    {\n      label: 'My First dataset',\n      fill: false,\n      lineTension: 0.1,\n      backgroundColor: 'rgba(75,192,192,0.4)',\n      borderColor: 'rgba(75,192,192,1)',\n      borderCapStyle: 'butt',\n      borderDash: [],\n      borderDashOffset: 0.0,\n      borderJoinStyle: 'miter',\n      pointBorderColor: 'rgba(75,192,192,1)',\n      pointBackgroundColor: '#fff',\n      pointBorderWidth: 1,\n      pointHoverRadius: 5,\n      pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n      pointHoverBorderColor: 'rgba(220,220,220,1)',\n      pointHoverBorderWidth: 2,\n      pointRadius: 1,\n      pointHitRadius: 10,\n      data: [65, 59, 80, 81, 56, 55, 40]\n    },\n    {\n      label: 'My Second dataset',\n      fill: false,\n      lineTension: 0.1,\n      backgroundColor: 'rgba(72,166,242,0.4)',\n      borderColor: 'rgba(72,166,242,1)',\n      borderCapStyle: 'butt',\n      borderDash: [],\n      borderDashOffset: 0.0,\n      borderJoinStyle: 'miter',\n      pointBorderColor: 'rgba(72,166,242,1)',\n      pointBackgroundColor: '#fff',\n      pointBorderWidth: 1,\n      pointHoverRadius: 5,\n      pointHoverBackgroundColor: 'rgba(72,166,242,1)',\n      pointHoverBorderColor: 'rgba(220,220,220,1)',\n      pointHoverBorderWidth: 2,\n      pointRadius: 1,\n      pointHitRadius: 10,\n      data: [55, 49, 70, 71, 46, 45, 30]\n    },\n  ]\n};\n\n\nexport {\n  initialData,\n};\n","import React, { Component } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { initialData } from './randomizedConfig';\n\nclass Graph extends Component {\n  componentWillMount() {\n    this.setState(initialData);\n  }\n  componentDidMount() {\n    const _this = this;\n    setInterval(() => {\n      const { datasets } = _this.state;\n      let newData = [];\n      let newData2 = [];\n      for (let x = 0; x < _this.state.labels.length; x++) {\n        newData.push(Math.floor(Math.random() * 100));\n        newData2.push(Math.floor(Math.random() * 100));\n      }\n      datasets[0].data = newData;\n      datasets[1].data = newData2;\n      _this.setState({ datasets });\n    }, 3000);\n  }\n  render() {\n    return <Line data={this.state} />;\n  }\n}\n\nexport default class extends Component {\n  render() {\n    return <Graph />;\n  }\n}\n"],"sourceRoot":""}