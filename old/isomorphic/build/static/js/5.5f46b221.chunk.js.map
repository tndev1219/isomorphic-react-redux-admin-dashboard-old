{"version":3,"sources":["../node_modules/chart.js/src/helpers/index.js","../node_modules/chart.js/src/core/core.defaults.js","../node_modules/lodash/_setToArray.js","../node_modules/lodash/isEqual.js","../node_modules/lodash/find.js","../node_modules/react-chartjs-2/es/index.js","../node_modules/lodash/_baseEach.js","../node_modules/chart.js/src/core/core.element.js","../node_modules/chart.js/src/elements/index.js","../node_modules/lodash/_createBaseEach.js","../node_modules/lodash/_createFind.js","../node_modules/chart.js/src/core/core.layouts.js","../node_modules/chart.js/src/core/core.ticks.js","../node_modules/chart.js/src/helpers/helpers.core.js","../node_modules/chart.js/src/chart.js","../node_modules/chartjs-color/index.js","../node_modules/chart.js/src/core/core.interaction.js","../node_modules/chart.js/src/platforms/platform.js","../node_modules/chart.js/src/core/core.plugins.js","../node_modules/chart.js/src/core/core.js","../node_modules/chart.js/src/helpers/helpers.easing.js","../node_modules/chart.js/src/helpers/helpers.canvas.js","../node_modules/chart.js/src/helpers/helpers.options.js","../node_modules/chart.js/src/core/core.helpers.js","../node_modules/chartjs-color/node_modules/color-convert/index.js","../node_modules/chartjs-color/node_modules/color-convert/conversions.js","../node_modules/chartjs-color-string/color-string.js","../node_modules/color-name/index.js","../node_modules/chart.js/src/elements/element.arc.js","../node_modules/chart.js/src/elements/element.line.js","../node_modules/chart.js/src/elements/element.point.js","../node_modules/chart.js/src/elements/element.rectangle.js","../node_modules/chart.js/src/platforms/platform.basic.js","../node_modules/chart.js/src/platforms/platform.dom.js","../node_modules/chart.js/src/core/core.animation.js","../node_modules/chart.js/src/core/core.controller.js","../node_modules/chart.js/src/core/core.datasetController.js","../node_modules/chart.js/src/core/core.scaleService.js","../node_modules/chart.js/src/core/core.scale.js","../node_modules/chart.js/src/core/core.tooltip.js","../node_modules/chart.js/src/scales/scale.linearbase.js","../node_modules/chart.js/src/scales/scale.category.js","../node_modules/chart.js/src/scales/scale.linear.js","../node_modules/chart.js/src/scales/scale.logarithmic.js","../node_modules/chart.js/src/scales/scale.radialLinear.js","../node_modules/chart.js/src/scales/scale.time.js","../node_modules/chart.js/src/controllers/controller.bar.js","../node_modules/chart.js/src/controllers/controller.bubble.js","../node_modules/chart.js/src/controllers/controller.doughnut.js","../node_modules/chart.js/src/controllers/controller.line.js","../node_modules/chart.js/src/controllers/controller.polarArea.js","../node_modules/chart.js/src/controllers/controller.radar.js","../node_modules/chart.js/src/controllers/controller.scatter.js","../node_modules/chart.js/src/charts/Chart.Bar.js","../node_modules/chart.js/src/charts/Chart.Bubble.js","../node_modules/chart.js/src/charts/Chart.Doughnut.js","../node_modules/chart.js/src/charts/Chart.Line.js","../node_modules/chart.js/src/charts/Chart.PolarArea.js","../node_modules/chart.js/src/charts/Chart.Radar.js","../node_modules/chart.js/src/charts/Chart.Scatter.js","../node_modules/chart.js/src/plugins/index.js","../node_modules/chart.js/src/plugins/plugin.filler.js","../node_modules/chart.js/src/plugins/plugin.legend.js","../node_modules/chart.js/src/plugins/plugin.title.js","../node_modules/lodash/keyBy.js","../node_modules/lodash/_createAggregator.js","../node_modules/lodash/_arrayAggregator.js","../node_modules/lodash/_baseAggregator.js"],"names":["module","exports","__webpack_require__","easing","canvas","options","helpers","_set","scope","values","merge","this","set","index","result","Array","size","forEach","value","baseIsEqual","other","find","createFind","process","d","__webpack_exports__","Doughnut","Pie","Line","Bar","HorizontalBar","Radar","Polar","Bubble","_Users_tarex_redq_DASHBOARD_newdashapp_node_modules_babel_runtime_helpers_esm_typeof__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_1___default","n","prop_types__WEBPACK_IMPORTED_MODULE_2__","prop_types__WEBPACK_IMPORTED_MODULE_2___default","chart_js__WEBPACK_IMPORTED_MODULE_3__","chart_js__WEBPACK_IMPORTED_MODULE_3___default","lodash_isEqual__WEBPACK_IMPORTED_MODULE_4__","lodash_isEqual__WEBPACK_IMPORTED_MODULE_4___default","lodash_keyBy__WEBPACK_IMPORTED_MODULE_6__","lodash_keyBy__WEBPACK_IMPORTED_MODULE_6___default","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_objectWithoutProperties","obj","keys","indexOf","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","enumerable","writable","configurable","setPrototypeOf","__proto__","NODE_ENV","PUBLIC_URL","ChartComponent","_React$Component","_temp","_this","_len","args","_key","apply","concat","handleOnClick","event","chartInstance","_this$props","props","getDatasetAtEvent","getElementAtEvent","getElementsAtEvent","onElementsClick","ref","element","componentWillMount","undefined","componentDidMount","renderChart","componentDidUpdate","redraw","destroy","updateChart","shouldComponentUpdate","nextProps","_props","type","plugins","legend","height","width","nextData","transformDataProp","shadowDataProp","componentWillUnmount","data","memoizeDataProps","datasets","map","checkDatasets","isDev","usingCustomKeyProvider","datasetKeyProvider","getLabelAsKey","multipleDatasets","shouldWarn","dataset","label","console","error","_this2","a","configMerge","currentDatasets","config","nextDatasets","currentDatasetsIndexed","next","current","splice","point","pid","otherProps","rest","update","_props2","node","defaultProps","render","_props3","id","createElement","onClick","Component","propTypes","oneOfType","object","func","isRequired","number","arrayOf","bool","propName","componentName","controllers","Error","display","position","_React$Component2","_this4","_ref","_React$Component3","_this6","_ref2","_React$Component4","_this8","_ref3","_React$Component5","_this10","_ref4","_React$Component6","_this12","_ref5","_React$Component7","_this14","_ref6","_React$Component8","_this16","_ref7","_React$Component9","_this18","_ref8","_React$Component10","Scatter","_this20","_ref9","defaults","baseForOwn","baseEach","createBaseEach","_typeof","color","Element","configuration","extend","initialize","hidden","pivot","me","_view","clone","_model","_start","transition","ease","model","start","view","ilen","actual","origin","c0","c1","valid","mix","rgbString","isFinite","interpolate","tooltipPosition","x","y","hasValue","isNumber","inherits","Arc","Point","Rectangle","isArrayLike","eachFunc","fromRight","collection","iteratee","iterable","baseIteratee","findIndexFunc","predicate","fromIndex","filterByPosition","array","where","v","sortByWeight","reverse","_tmpIndex_","sort","b","v0","v1","weight","addBox","chart","item","boxes","fullWidth","push","removeBox","layoutItem","configure","prop","layoutOptions","layout","padding","toPadding","leftPadding","left","rightPadding","right","topPadding","top","bottomPadding","bottom","leftBoxes","rightBoxes","topBoxes","bottomBoxes","chartAreaBoxes","chartWidth","chartHeight","chartAreaHeight","verticalBoxWidth","horizontalBoxHeight","maxChartAreaWidth","maxChartAreaHeight","minBoxSizes","each","box","minSize","isHorizontal","horizontal","maxHorizontalLeftPadding","maxHorizontalRightPadding","maxVerticalTopPadding","maxVerticalBottomPadding","horizontalBox","getPadding","boxPadding","Math","max","verticalBox","totalLeftBoxesWidth","totalRightBoxesWidth","totalTopBoxesHeight","totalBottomBoxesHeight","fitBox","minBoxSize","findNextWhere","scaleMargin","leftPaddingAddition","topPaddingAddition","newMaxChartAreaHeight","newMaxChartAreaWidth","placeBox","chartArea","minBox","formatters","isArray","linear","tickValue","ticks","delta","abs","floor","logDelta","log10","tickString","numDecimal","min","toFixed","logarithmic","remain","pow","toExponential","noop","uid","isNullOrUndef","toString","isObject","valueOrDefault","defaultValue","valueAtIndexOrDefault","callback","fn","thisArg","loopable","len","arrayEquals","a0","a1","klen","k","_merger","tval","sval","_mergerIf","mergeIf","sources","merger","setFn","extensions","ChartElement","Surrogate","__super__","callCallback","getValueOrDefault","getValueAtIndexOrDefault","Chart","elements","Interaction","layouts","platform","Ticks","register","window","Legend","_element","Title","title","pluginService","PluginBase","canvasHelpers","layoutService","convert","string","Color","rgb","hsl","hsv","hwb","cmyk","alpha","vals","getRgba","setValues","getHsla","getHwb","r","red","l","lightness","w","whiteness","c","cyan","isValid","setSpace","rgbArray","hslArray","hsvArray","hwbArray","cmykArray","rgbaArray","hslaArray","val","setChannel","green","blue","hue","saturation","saturationv","blackness","magenta","yellow","black","hexString","rgbaString","percentString","hslString","hslaString","hwbString","keyword","rgbNumber","luminosity","lum","chan","contrast","color2","lum1","lum2","level","contrastRatio","dark","light","negate","lighten","ratio","darken","saturate","desaturate","whiten","blacken","greyscale","clearer","opaquer","rotate","degrees","mixinColor","p","w1","w2","toJSON","slice","spaces","maxes","getValues","space","charAt","capped","chans","round","sname","svalues","getRelativePosition","e","native","parseVisibleItems","handler","meta","j","jlen","isDatasetVisible","getDatasetMeta","skip","getIntersectItems","inRange","getNearestItems","intersect","distanceMetric","minDistance","Number","POSITIVE_INFINITY","nearestItems","center","getCenterPoint","distance","getDistanceMetricForAxis","axis","useX","useY","pt1","pt2","deltaX","deltaY","sqrt","indexMode","items","datasetIndex","_index","modes","single","_datasetIndex","x-axis","nearest","ret","getArea","intersectsItem","inXRange","inYRange","basic","dom","implementation","_enabled","acquireContext","releaseContext","addEventListener","removeEventListener","_plugins","_cacheId","plugin","unregister","idx","clear","count","getAll","notify","hook","descriptor","params","method","descriptors","cache","$plugins","opts","global","_invalidate","responsive","responsiveAnimationDuration","maintainAspectRatio","events","hover","onHover","mode","animationDuration","defaultColor","defaultFontColor","defaultFontFamily","defaultFontSize","defaultFontStyle","showLines","construct","effects","t","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","PI","easeOutSine","sin","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","s","asin","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","easingEffects","ctx","clearRect","roundedRect","radius","rx","ry","moveTo","lineTo","quadraticCurveTo","rect","drawPoint","style","edgeLength","xOffset","yOffset","isNaN","beginPath","arc","closePath","fill","SQRT2","fillRect","strokeRect","offset","leftX","topY","sideSize","stroke","drawImage","clipArea","area","save","clip","unclipArea","restore","previous","flip","steppedLine","tension","bezierCurveTo","controlPointPreviousX","controlPointNextX","controlPointPreviousY","controlPointNextY","drawRoundedRectangle","toLineHeight","matches","match","resolve","inputs","context","parseMaxStyle","styleValue","parentProperty","valueInPixels","parseInt","parentNode","isConstrainedValue","getConstraintDimension","domNode","maxStyle","percentageProperty","document","defaultView","constrainedNode","getComputedStyle","constrainedContainer","hasCNode","hasCContainer","infinity","scaleMerge","scaleService","getScaleDefaults","scale","slen","filterCallback","filter","filtered","findIndex","arrayToSearch","startIndex","currentItem","findPreviousWhere","parseFloat","almostEquals","epsilon","almostWhole","rounded","reduce","NEGATIVE_INFINITY","sign","exponent","log","LOG10E","powerOf10","toRadians","toDegrees","radians","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","atan2","distanceBetweenPoints","aliasPixel","pixelWidth","splineCurve","firstPoint","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","EPSILON","splineCurveMonotone","points","pointBefore","pointCurrent","pointAfter","alphaK","betaK","tauK","squaredMagnitude","pointsWithTangents","deltaK","mK","pointsLen","slopeDeltaX","nextItem","loop","previousItem","niceNum","range","fraction","requestAnimFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","evt","mouseX","mouseY","originalEvent","currentTarget","srcElement","boundingRect","getBoundingClientRect","touches","clientX","clientY","paddingLeft","getStyle","paddingTop","paddingRight","paddingBottom","currentDevicePixelRatio","getConstraintWidth","getConstraintHeight","getMaximumWidth","container","clientWidth","cw","getMaximumHeight","clientHeight","h","ch","el","property","currentStyle","getPropertyValue","retinaScale","forceRatio","pixelRatio","devicePixelRatio","fontString","pixelSize","fontStyle","fontFamily","longestText","font","arrayOfThings","gc","garbageCollect","longest","thing","measureText","nestedThing","gcLen","textWidth","numberOfLabelLines","numberOfLines","CanvasGradient","getHoverColor","colorValue","CanvasPattern","conversions","Converter","arg","pair","exec","from","to","convs","routeSpace","fspace","rgb2hsl","g","rgb2hsv","rgb2hwb","rgb2cmyk","rgb2keyword","reverseKeywords","JSON","stringify","rgb2xyz","rgb2lab","xyz","z","hsl2rgb","t1","t2","t3","hsv2rgb","hi","f","q","hwb2rgb","wh","bl","cmyk2rgb","m","xyz2rgb","xyz2lab","lab2xyz","lab","y2","lab2lch","lab2rgb","lch2lab","lch","hr","keyword2rgb","cssKeywords","rgb2lch","hsl2hsv","hsl2hwb","hsl2cmyk","hsl2keyword","hsv2hsl","sl","hsv2hwb","hsv2cmyk","hsv2keyword","hwb2hsl","hwb2hsv","hwb2cmyk","hwb2keyword","cmyk2hsl","cmyk2hsv","cmyk2hwb","cmyk2keyword","keyword2hsl","keyword2hsv","keyword2hwb","keyword2cmyk","keyword2lab","keyword2xyz","xyz2lch","lch2xyz","lch2rgb","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","blanchedalmond","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellowgreen","colorNames","rgba","percentaString","hsla","num","hexDouble","str","toUpperCase","getRgb","getHsl","getAlpha","reverseNames","name","backgroundColor","borderColor","borderWidth","inLabelRange","vm","hoverRadius","chartX","chartY","pointRelativePosition","startAngle","endAngle","betweenAngles","withinRadius","innerRadius","outerRadius","halfAngle","halfRadius","centreAngle","rangeFromCentre","draw","_chart","sA","eA","strokeStyle","lineWidth","fillStyle","lineJoin","globalDefaults","line","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","capBezierPoints","currentVM","spanGaps","_children","globalOptionLineElements","lastDrawnIndex","_loop","lineCap","setLineDash","lineDashOffset","xRange","hitRadius","pointStyle","hoverBorderWidth","isVertical","bar","getBarBounds","x1","x2","y1","halfWidth","base","halfHeight","rectangle","borderSkipped","signX","signY","barSize","halfStroke","borderLeft","borderRight","borderTop","borderBottom","corners","startCorner","cornerAt","corner","bounds","getContext","EXPANDO_KEY","CSS_PREFIX","CSS_RENDER_MONITOR","CSS_RENDER_ANIMATION","ANIMATION_START_EVENTS","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","readUsedSize","eventListenerOptions","supports","defineProperty","get","passive","_addEventListener","listener","_removeEventListener","createEvent","nativeEvent","addResizeListener","ticking","expando","resizer","cls","cssText","className","innerHTML","expand","childNodes","shrink","_reset","scrollLeft","scrollTop","onScroll","bind","createResizer","proxy","renderProxy","animationName","reflow","offsetParent","classList","add","watchForRender","insertBefore","firstChild","removeResizeListener","remove","unwatchForRender","removeChild","css","keyframes","_style","setAttribute","getElementsByTagName","appendChild","createTextNode","getElementById","renderHeight","getAttribute","renderWidth","initial","displayWidth","aspectRatio","displayHeight","initCanvas","removeAttribute","proxies","pos","fromNativeEvent","addEvent","removeEvent","animation","duration","onProgress","onComplete","Animation","currentStep","numSteps","onAnimationProgress","onAnimationComplete","animationService","frameDuration","animations","dropFrames","request","addAnimation","lazy","animating","cancelAnimation","startDigest","startTime","Date","now","framesToDrop","advance","endTime","positionIsHorizontal","types","instances","labels","initConfig","_bufferedRender","controller","bindEvents","resize","ensureScalesHaveIDs","buildOrUpdateScales","initToolTip","stop","silent","newWidth","newHeight","newSize","onResize","scalesOptions","scales","scaleOptions","xAxes","xAxisOptions","yAxes","yAxisOptions","updated","dtype","dposition","isDefault","scaleType","scaleClass","getScaleConstructor","mergeTicksOptions","hasUpdated","addScalesToLayout","buildOrUpdateControllers","newControllers","destroyDatasetMeta","updateIndex","linkScales","ControllerClass","resetElements","reset","tooltip","newOptions","_options","tooltips","_data","buildOrUpdateElements","updateLayout","updateDatasets","lastActive","_bufferedRequest","updateDataset","animationOptions","animationObject","easingFunction","stepDecimal","easingValue","drawDatasets","_drawTooltip","drawDataset","getElementsAtXAxis","getElementsAtEventForMode","_meta","xAxisID","yAxisID","getVisibleDatasetCount","generateLegend","legendCallback","unbindEvents","toBase64Image","toDataURL","Tooltip","_chartInstance","listeners","_listeners","eventHandler","updateHoverStyle","enabled","changed","handleEvent","bufferedRequest","hoverOptions","active","Controller","arrayEvents","unlistenArrayEvents","stub","_chartjs","DatasetController","datasetElementType","dataElementType","addElements","getMeta","getDataset","getScaleForId","scaleID","createMetaDataset","createMetaData","metaData","addElementAndReset","updateElement","res","resyncElements","removeHoverStyle","elementOpts","custom","setHoverStyle","hoverBackgroundColor","hoverBorderColor","numMeta","numData","insertElements","onDataPush","onDataPop","pop","onDataShift","shift","onDataSplice","onDataUnshift","constructors","registerScaleType","scaleConstructor","scaleDefaults","updateScaleDefaults","additions","labelsFromTicks","getLineValue","offsetGridLines","lineValue","getPixelForTick","gridLines","drawBorder","drawOnChartArea","drawTicks","tickMarkLength","zeroLineWidth","zeroLineColor","zeroLineBorderDash","zeroLineBorderDashOffset","scaleLabel","labelString","lineHeight","beginAtZero","minRotation","maxRotation","mirror","autoSkip","autoSkipPadding","labelOffset","minor","major","computeTextSize","tick","parseFontOptions","fontSize","family","parseLineHeight","Scale","getTicks","_ticks","beforeUpdate","maxWidth","maxHeight","margins","longestTextCache","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","beforeTickToLabelConversion","convertTicksToLabels","afterTickToLabelConversion","beforeCalculateTickRotation","calculateTickRotation","afterCalculateTickRotation","beforeFit","fit","afterFit","afterUpdate","tickOpts","userCallback","tickFont","labelRotation","cosRotation","originalLabelWidth","labelWidth","tickWidth","angleRadians","scaleLabelOpts","gridLineOpts","isFullWidth","deltaHeight","largestTextWidth","tallestLabelHeightInLines","lineSpace","tickPadding","longestLabelWidth","labelHeight","firstLabelWidth","lastLabelWidth","handleMargins","getRightValue","rawValue","NaN","getLabelForIndex","getPixelForValue","getValueForPixel","pixel","finalVal","innerHeight","getPixelForDecimal","decimal","valueOffset","getBasePixel","getBaseValue","_autoSkip","skipRatio","maxTicks","optionTicks","tickCount","labelRotationRadians","longestRotatedLabel","maxTicksLimit","optionMajorTicks","isRotated","tickFontColor","fontColor","majorTickFontColor","majorTickFont","tl","scaleLabelFontColor","scaleLabelFont","scaleLabelPadding","itemsToDraw","axisWidth","xTickStart","xTickEnd","yTickStart","yTickEnd","lineColor","tx1","ty1","tx2","ty2","labelX","labelY","zeroLineIndex","textAlign","textBaseline","labelYOffset","xLineValue","labelXOffset","isLeft","yLineValue","glWidth","glColor","glBorderDash","glBorderDashOffset","rotation","itemToDraw","translate","lineCount","fillText","scaleLabelX","scaleLabelY","halfLineHeight","titleFontStyle","titleSpacing","titleMarginBottom","titleFontColor","titleAlign","bodySpacing","bodyFontColor","bodyAlign","footerFontStyle","footerSpacing","footerMarginTop","footerFontColor","footerAlign","yPadding","xPadding","caretPadding","caretSize","cornerRadius","multiKeyBackground","displayColors","callbacks","beforeTitle","tooltipItems","labelCount","xLabel","afterTitle","beforeBody","beforeLabel","tooltipItem","yLabel","labelColor","labelTextColor","afterLabel","afterBody","beforeFooter","footer","afterFooter","mergeOpacity","colorString","opacity","pushOrConcat","toPush","getBaseModel","tooltipOpts","xAlign","yAlign","_bodyFontFamily","bodyFontFamily","_bodyFontStyle","bodyFontStyle","_bodyAlign","bodyFontSize","_titleFontFamily","titleFontFamily","_titleFontStyle","titleFontSize","_titleAlign","_footerFontFamily","footerFontFamily","_footerFontStyle","footerFontSize","_footerAlign","legendColorBackground","_lastActive","getTitle","lines","getBeforeBody","getBody","bodyItems","bodyItem","before","after","getAfterBody","getFooter","xScale","yScale","existingModel","_active","alignment","backgroundPoint","tooltipSize","caretX","caretY","labelColors","labelTextColors","positioners","_eventPosition","_xScale","_yScale","_scale","itemSort","body","dataPoints","combinedBodyLength","titleLineCount","footerLineCount","widthPadding","maxLineWidth","getTooltipSize","paddingAndSize","radiusAndPadding","getBackgroundPoint","lf","rf","olf","orf","yf","midX","midY","determineAlignment","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","tmp","drawTitle","pt","drawBody","xLinePadding","fillLineOfText","drawColorBoxes","textColor","drawFooter","drawBackground","hasTooltipContent","average","eventPosition","nearestElement","tp","LinearScaleBase","handleTickRangeOptions","minSign","maxSign","setMin","suggestedMin","setMax","suggestedMax","getTickLimit","handleDirectionalChanges","numericGeneratorOptions","stepSize","fixedStepSize","generationOptions","dataRange","spacing","niceRange","niceMin","niceMax","ceil","numSpaces","precision","generateTicks","end","ticksAsNumbers","DatasetScale","getLabels","xLabels","yLabels","minIndex","maxIndex","valueCategory","offsetAmt","valueWidth","widthOffset","valueHeight","heightOffset","horz","valueDimension","defaultConfig","LinearScale","IDMatches","hasStacks","stacked","stack","valuesPerStack","join","positiveValues","negativeValues","relativePoints","valuesForType","minVal","maxVal","tickFontSize","rightValue","innerDimension","LogarithmicScale","minNotZero","exp","significand","tickVal","endExp","endSignificand","lastTick","tickValues","_getFirstTickValue","firstTickValue","animate","angleLines","circular","showLabelBackdrop","backdropColor","backdropPaddingY","backdropPaddingX","pointLabels","getValueCount","getPointLabelFontOptions","pointLabelOptions","determineLimits","getTextAlignForAngle","text","adjustPointPositionForLabelHeight","textSize","numberOrZero","param","LinearRadialScale","xCenter","yCenter","drawingArea","largestPossibleRadius","pointPosition","plFont","furthestLimits","furthestAngles","_pointLabelSizes","valueCount","getPointPosition","getIndexAngle","hLimits","vLimits","setReductions","fitWithPointLabels","setCenterPoint","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","getDistanceFromCenterForValue","scalingFactor","distanceFromCenter","thisAngle","getPointPositionForValue","getBasePosition","tickFontStyle","tickFontFamily","tickLabelFont","yCenterOffset","drawRadiusLine","angleLineOpts","pointLabelOpts","outerDistance","outerPosition","pointLabelPosition","pointLabelFontColor","drawPointLabels","moment","MIN_INTEGER","MIN_SAFE_INTEGER","MAX_INTEGER","MAX_SAFE_INTEGER","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","arrayUnique","hash","out","table","skey","tkey","mid","i0","i1","lo","lookup","prev","span","momentify","parser","format","parse","input","time","startOf","valueOf","determineMajorUnit","unit","generate","capacity","timeOpts","minUnit","interval","factor","determineUnitForAutoTicks","unitStepSize","weekday","isoWeekday","majorTicksEnabled","first","last","milliseconds","determineStepSize","TimeScale","warn","timestamp","timestamps","endOf","_horizontal","_table","_timestamps","getLabelCapacity","_unit","diff","as","determineUnitForFormatting","_majorUnit","distribution","curr","buildLookupTable","_offsets","upper","lower","computeOffsets","_labelFormat","momentDate","hasTime","determineLabelFormat","majorUnit","ticksFromTimestamps","tooltipFormat","tickFormatFunction","formatOverride","formats","displayFormats","minorFormat","majorFormat","majorTime","majorTickOpts","formatter","getPixelForOffset","getLabelWidth","ticksOpts","tickLabelWidth","sinRotation","exampleTime","exampleLabel","innerWidth","displayFormat","categoryPercentage","barPercentage","rects","_ruler","getRuler","rectangleOptions","datasetLabel","updateElementGeometry","vscale","getValueScale","ruler","vpixels","calculateBarValuePixels","ipixels","calculateBarIndexPixels","head","getValueScaleId","getIndexScaleId","getIndexScale","_getStacks","stacks","getStackCount","getStackIndex","stackCount","pixels","barThickness","computeMinSampleSize","imeta","ivalue","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","maxBarThickness","Infinity","rectangleElementOptions","horizontalBar","dataPoint","bubble","_resolveElementOptions","dsIndex","dataIndex","animateRotate","animateScale","generateLabels","ds","arcOpts","legendItem","cutoutPercentage","circumference","dataLabel","doughnut","pie","getRingIndex","ringIndex","availableWidth","availableHeight","contains0","contains90","contains180","contains270","cutout","getMaxBorderWidth","radiusLength","offsetX","offsetY","total","calculateTotal","animationOpts","centerX","centerY","calculateCircumference","arcs","hoverWidth","lineEnabled","showLine","lineElementOptions","lineTension","stepped","cubicInterpolationMode","updateBezierControlPoints","getPointBackgroundColor","pointBackgroundColor","getPointBorderColor","pointBorderColor","getPointBorderWidth","pointBorderWidth","pointOptions","pointRadius","pointHitRadius","calculatePointY","dsMeta","sumPos","sumNeg","stackedRightValue","controlPoints","capControlPoint","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","polarArea","countVisibleElements","visibleCount","datasetStartAngle","resetRadius","radar","pointElementOptions","scatter","PolarArea","filler","propagate","mappers","boundary","decodeFill","computeBoundary","scaleBottom","scaleTop","scaleZero","resolveTarget","visited","visible","createMapper","isDrawable","drawArea","curve0","curve1","len0","len1","afterDatasetsUpdate","$filler","mapper","beforeDatasetDraw","p0","p1","d0","d1","doFill","getBoxWidth","labelOpts","usePointStyle","boxWidth","ci","lineDash","legendHitBoxes","doughnutMode","beforeBuildLabels","buildLabels","afterBuildLabels","legendItems","globalDefault","labelFont","hitboxes","lineWidths","totalHeight","vPadding","columnWidths","totalWidth","currentColWidth","currentColHeight","itemHeight","itemWidth","lineDefault","legendWidth","cursor","isLineWidthZero","offSet","drawLegendBox","halfFontSize","xLeft","yMiddle","lh","hitBox","createNewLegendAndAttach","legendOpts","beforeInit","afterEvent","titleX","titleY","titleFont","createNewTitleBlockAndAttach","titleOpts","titleBlock","baseAssignValue","keyBy","createAggregator","arrayAggregator","baseAggregator","setter","initializer","accumulator"],"mappings":"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","file":"static/js/5.5f46b221.chunk.js","sourcesContent":["'use strict';\n\nmodule.exports = require('./helpers.core');\nmodule.exports.easing = require('./helpers.easing');\nmodule.exports.canvas = require('./helpers.canvas');\nmodule.exports.options = require('./helpers.options');","'use strict';\n\nvar helpers = require('../helpers/index');\n\nmodule.exports = {\n  /**\n   * @private\n   */\n  _set: function _set(scope, values) {\n    return helpers.merge(this[scope] || (this[scope] = {}), values);\n  }\n};","/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n  set.forEach(function (value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nmodule.exports = setToArray;","var baseIsEqual = require('./_baseIsEqual');\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\n\n\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\nmodule.exports = isEqual;","var createFind = require('./_createFind'),\n    findIndex = require('./findIndex');\n/**\n * Iterates over elements of `collection`, returning the first element\n * `predicate` returns truthy for. The predicate is invoked with three\n * arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {*} Returns the matched element, else `undefined`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'age': 36, 'active': true },\n *   { 'user': 'fred',    'age': 40, 'active': false },\n *   { 'user': 'pebbles', 'age': 1,  'active': true }\n * ];\n *\n * _.find(users, function(o) { return o.age < 40; });\n * // => object for 'barney'\n *\n * // The `_.matches` iteratee shorthand.\n * _.find(users, { 'age': 1, 'active': true });\n * // => object for 'pebbles'\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.find(users, ['active', false]);\n * // => object for 'fred'\n *\n * // The `_.property` iteratee shorthand.\n * _.find(users, 'active');\n * // => object for 'barney'\n */\n\n\nvar find = createFind(findIndex);\nmodule.exports = find;","import _typeof from \"/Users/tarex/redq/DASHBOARD/newdashapp/node_modules/@babel/runtime/helpers/esm/typeof\";\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (_typeof(call) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + _typeof(superClass));\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Chart from 'chart.js';\nimport isEqual from 'lodash/isEqual';\nimport find from 'lodash/find';\nimport keyBy from 'lodash/keyBy';\nvar NODE_ENV = typeof process !== 'undefined' && process.env && process.env.NODE_ENV;\n\nvar ChartComponent = function (_React$Component) {\n  _inherits(ChartComponent, _React$Component);\n\n  function ChartComponent() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, ChartComponent);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.handleOnClick = function (event) {\n      var instance = _this.chartInstance;\n      var _this$props = _this.props,\n          getDatasetAtEvent = _this$props.getDatasetAtEvent,\n          getElementAtEvent = _this$props.getElementAtEvent,\n          getElementsAtEvent = _this$props.getElementsAtEvent,\n          onElementsClick = _this$props.onElementsClick;\n      getDatasetAtEvent && getDatasetAtEvent(instance.getDatasetAtEvent(event), event);\n      getElementAtEvent && getElementAtEvent(instance.getElementAtEvent(event), event);\n      getElementsAtEvent && getElementsAtEvent(instance.getElementsAtEvent(event), event);\n      onElementsClick && onElementsClick(instance.getElementsAtEvent(event), event); // Backward compatibility\n    }, _this.ref = function (element) {\n      _this.element = element;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  ChartComponent.prototype.componentWillMount = function componentWillMount() {\n    this.chartInstance = undefined;\n  };\n\n  ChartComponent.prototype.componentDidMount = function componentDidMount() {\n    this.renderChart();\n  };\n\n  ChartComponent.prototype.componentDidUpdate = function componentDidUpdate() {\n    if (this.props.redraw) {\n      this.chartInstance.destroy();\n      this.renderChart();\n      return;\n    }\n\n    this.updateChart();\n  };\n\n  ChartComponent.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\n    var _props = this.props,\n        redraw = _props.redraw,\n        type = _props.type,\n        options = _props.options,\n        plugins = _props.plugins,\n        legend = _props.legend,\n        height = _props.height,\n        width = _props.width;\n\n    if (nextProps.redraw === true) {\n      return true;\n    }\n\n    if (height !== nextProps.height || width !== nextProps.width) {\n      return true;\n    }\n\n    if (type !== nextProps.type) {\n      return true;\n    }\n\n    if (!isEqual(legend, nextProps.legend)) {\n      return true;\n    }\n\n    if (!isEqual(options, nextProps.options)) {\n      return true;\n    }\n\n    var nextData = this.transformDataProp(nextProps);\n\n    if (!isEqual(this.shadowDataProp, nextData)) {\n      return true;\n    }\n\n    return !isEqual(plugins, nextProps.plugins);\n  };\n\n  ChartComponent.prototype.componentWillUnmount = function componentWillUnmount() {\n    this.chartInstance.destroy();\n  };\n\n  ChartComponent.prototype.transformDataProp = function transformDataProp(props) {\n    var data = props.data;\n\n    if (typeof data == 'function') {\n      var node = this.element;\n      return data(node);\n    } else {\n      return data;\n    }\n  }; // Chart.js directly mutates the data.dataset objects by adding _meta proprerty\n  // this makes impossible to compare the current and next data changes\n  // therefore we memoize the data prop while sending a fake to Chart.js for mutation.\n  // see https://github.com/chartjs/Chart.js/blob/master/src/core/core.controller.js#L615-L617\n\n\n  ChartComponent.prototype.memoizeDataProps = function memoizeDataProps() {\n    if (!this.props.data) {\n      return;\n    }\n\n    var data = this.transformDataProp(this.props);\n    this.shadowDataProp = _extends({}, data, {\n      datasets: data.datasets && data.datasets.map(function (set) {\n        return _extends({}, set);\n      })\n    });\n    return data;\n  };\n\n  ChartComponent.prototype.checkDatasets = function checkDatasets(datasets) {\n    var isDev = NODE_ENV !== 'production' && NODE_ENV !== 'prod';\n    var usingCustomKeyProvider = this.props.datasetKeyProvider !== ChartComponent.getLabelAsKey;\n    var multipleDatasets = datasets.length > 1;\n\n    if (isDev && multipleDatasets && !usingCustomKeyProvider) {\n      var shouldWarn = false;\n      datasets.forEach(function (dataset) {\n        if (!dataset.label) {\n          shouldWarn = true;\n        }\n      });\n\n      if (shouldWarn) {\n        console.error('[react-chartjs-2] Warning: Each dataset needs a unique key. By default, the \"label\" property on each dataset is used. Alternatively, you may provide a \"datasetKeyProvider\" as a prop that returns a unique key.');\n      }\n    }\n  };\n\n  ChartComponent.prototype.updateChart = function updateChart() {\n    var _this2 = this;\n\n    var options = this.props.options;\n    var data = this.memoizeDataProps(this.props);\n    if (!this.chartInstance) return;\n\n    if (options) {\n      this.chartInstance.options = Chart.helpers.configMerge(this.chartInstance.options, options);\n    } // Pipe datasets to chart instance datasets enabling\n    // seamless transitions\n\n\n    var currentDatasets = this.chartInstance.config.data && this.chartInstance.config.data.datasets || [];\n    var nextDatasets = data.datasets || [];\n    this.checkDatasets(currentDatasets);\n    var currentDatasetsIndexed = keyBy(currentDatasets, this.props.datasetKeyProvider); // We can safely replace the dataset array, as long as we retain the _meta property\n    // on each dataset.\n\n    this.chartInstance.config.data.datasets = nextDatasets.map(function (next) {\n      var current = currentDatasetsIndexed[_this2.props.datasetKeyProvider(next)];\n\n      if (current && current.type === next.type) {\n        // The data array must be edited in place. As chart.js adds listeners to it.\n        current.data.splice(next.data.length);\n        next.data.forEach(function (point, pid) {\n          current.data[pid] = next.data[pid];\n        });\n\n        var _data = next.data,\n            otherProps = _objectWithoutProperties(next, ['data']); // Merge properties. Notice a weakness here. If a property is removed\n        // from next, it will be retained by current and never disappears.\n        // Workaround is to set value to null or undefined in next.\n\n\n        return _extends({}, current, otherProps);\n      } else {\n        return next;\n      }\n    });\n\n    var datasets = data.datasets,\n        rest = _objectWithoutProperties(data, ['datasets']);\n\n    this.chartInstance.config.data = _extends({}, this.chartInstance.config.data, rest);\n    this.chartInstance.update();\n  };\n\n  ChartComponent.prototype.renderChart = function renderChart() {\n    var _props2 = this.props,\n        options = _props2.options,\n        legend = _props2.legend,\n        type = _props2.type,\n        redraw = _props2.redraw,\n        plugins = _props2.plugins;\n    var node = this.element;\n    var data = this.memoizeDataProps();\n\n    if (typeof legend !== 'undefined' && !isEqual(ChartComponent.defaultProps.legend, legend)) {\n      options.legend = legend;\n    }\n\n    this.chartInstance = new Chart(node, {\n      type: type,\n      data: data,\n      options: options,\n      plugins: plugins\n    });\n  };\n\n  ChartComponent.prototype.render = function render() {\n    var _props3 = this.props,\n        height = _props3.height,\n        width = _props3.width,\n        onElementsClick = _props3.onElementsClick,\n        id = _props3.id;\n    return React.createElement('canvas', {\n      ref: this.ref,\n      height: height,\n      width: width,\n      id: id,\n      onClick: this.handleOnClick\n    });\n  };\n\n  return ChartComponent;\n}(React.Component);\n\nChartComponent.getLabelAsKey = function (d) {\n  return d.label;\n};\n\nChartComponent.propTypes = {\n  data: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired,\n  getDatasetAtEvent: PropTypes.func,\n  getElementAtEvent: PropTypes.func,\n  getElementsAtEvent: PropTypes.func,\n  height: PropTypes.number,\n  legend: PropTypes.object,\n  onElementsClick: PropTypes.func,\n  options: PropTypes.object,\n  plugins: PropTypes.arrayOf(PropTypes.object),\n  redraw: PropTypes.bool,\n  type: function type(props, propName, componentName) {\n    if (!Chart.controllers[props[propName]]) {\n      return new Error('Invalid chart type `' + props[propName] + '` supplied to' + ' `' + componentName + '`.');\n    }\n  },\n  width: PropTypes.number,\n  datasetKeyProvider: PropTypes.func\n};\nChartComponent.defaultProps = {\n  legend: {\n    display: true,\n    position: 'bottom'\n  },\n  type: 'doughnut',\n  height: 150,\n  width: 300,\n  redraw: false,\n  options: {},\n  datasetKeyProvider: ChartComponent.getLabelAsKey\n};\nexport default ChartComponent;\nexport var Doughnut = function (_React$Component2) {\n  _inherits(Doughnut, _React$Component2);\n\n  function Doughnut() {\n    _classCallCheck(this, Doughnut);\n\n    return _possibleConstructorReturn(this, _React$Component2.apply(this, arguments));\n  }\n\n  Doughnut.prototype.render = function render() {\n    var _this4 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref) {\n        return _this4.chartInstance = _ref && _ref.chartInstance;\n      },\n      type: 'doughnut'\n    }));\n  };\n\n  return Doughnut;\n}(React.Component);\nexport var Pie = function (_React$Component3) {\n  _inherits(Pie, _React$Component3);\n\n  function Pie() {\n    _classCallCheck(this, Pie);\n\n    return _possibleConstructorReturn(this, _React$Component3.apply(this, arguments));\n  }\n\n  Pie.prototype.render = function render() {\n    var _this6 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref2) {\n        return _this6.chartInstance = _ref2 && _ref2.chartInstance;\n      },\n      type: 'pie'\n    }));\n  };\n\n  return Pie;\n}(React.Component);\nexport var Line = function (_React$Component4) {\n  _inherits(Line, _React$Component4);\n\n  function Line() {\n    _classCallCheck(this, Line);\n\n    return _possibleConstructorReturn(this, _React$Component4.apply(this, arguments));\n  }\n\n  Line.prototype.render = function render() {\n    var _this8 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref3) {\n        return _this8.chartInstance = _ref3 && _ref3.chartInstance;\n      },\n      type: 'line'\n    }));\n  };\n\n  return Line;\n}(React.Component);\nexport var Bar = function (_React$Component5) {\n  _inherits(Bar, _React$Component5);\n\n  function Bar() {\n    _classCallCheck(this, Bar);\n\n    return _possibleConstructorReturn(this, _React$Component5.apply(this, arguments));\n  }\n\n  Bar.prototype.render = function render() {\n    var _this10 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref4) {\n        return _this10.chartInstance = _ref4 && _ref4.chartInstance;\n      },\n      type: 'bar'\n    }));\n  };\n\n  return Bar;\n}(React.Component);\nexport var HorizontalBar = function (_React$Component6) {\n  _inherits(HorizontalBar, _React$Component6);\n\n  function HorizontalBar() {\n    _classCallCheck(this, HorizontalBar);\n\n    return _possibleConstructorReturn(this, _React$Component6.apply(this, arguments));\n  }\n\n  HorizontalBar.prototype.render = function render() {\n    var _this12 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref5) {\n        return _this12.chartInstance = _ref5 && _ref5.chartInstance;\n      },\n      type: 'horizontalBar'\n    }));\n  };\n\n  return HorizontalBar;\n}(React.Component);\nexport var Radar = function (_React$Component7) {\n  _inherits(Radar, _React$Component7);\n\n  function Radar() {\n    _classCallCheck(this, Radar);\n\n    return _possibleConstructorReturn(this, _React$Component7.apply(this, arguments));\n  }\n\n  Radar.prototype.render = function render() {\n    var _this14 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref6) {\n        return _this14.chartInstance = _ref6 && _ref6.chartInstance;\n      },\n      type: 'radar'\n    }));\n  };\n\n  return Radar;\n}(React.Component);\nexport var Polar = function (_React$Component8) {\n  _inherits(Polar, _React$Component8);\n\n  function Polar() {\n    _classCallCheck(this, Polar);\n\n    return _possibleConstructorReturn(this, _React$Component8.apply(this, arguments));\n  }\n\n  Polar.prototype.render = function render() {\n    var _this16 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref7) {\n        return _this16.chartInstance = _ref7 && _ref7.chartInstance;\n      },\n      type: 'polarArea'\n    }));\n  };\n\n  return Polar;\n}(React.Component);\nexport var Bubble = function (_React$Component9) {\n  _inherits(Bubble, _React$Component9);\n\n  function Bubble() {\n    _classCallCheck(this, Bubble);\n\n    return _possibleConstructorReturn(this, _React$Component9.apply(this, arguments));\n  }\n\n  Bubble.prototype.render = function render() {\n    var _this18 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref8) {\n        return _this18.chartInstance = _ref8 && _ref8.chartInstance;\n      },\n      type: 'bubble'\n    }));\n  };\n\n  return Bubble;\n}(React.Component);\nexport var Scatter = function (_React$Component10) {\n  _inherits(Scatter, _React$Component10);\n\n  function Scatter() {\n    _classCallCheck(this, Scatter);\n\n    return _possibleConstructorReturn(this, _React$Component10.apply(this, arguments));\n  }\n\n  Scatter.prototype.render = function render() {\n    var _this20 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref9) {\n        return _this20.chartInstance = _ref9 && _ref9.chartInstance;\n      },\n      type: 'scatter'\n    }));\n  };\n\n  return Scatter;\n}(React.Component);\nexport var defaults = Chart.defaults;\nexport { Chart };","var baseForOwn = require('./_baseForOwn'),\n    createBaseEach = require('./_createBaseEach');\n/**\n * The base implementation of `_.forEach` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n */\n\n\nvar baseEach = createBaseEach(baseForOwn);\nmodule.exports = baseEach;","'use strict';\n\nvar _typeof = require(\"/Users/tarex/redq/DASHBOARD/newdashapp/node_modules/@babel/runtime/helpers/typeof\");\n\nvar color = require('chartjs-color');\n\nvar helpers = require('../helpers/index');\n\nfunction interpolate(start, view, model, ease) {\n  var keys = Object.keys(model);\n  var i, ilen, key, actual, origin, target, type, c0, c1;\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    target = model[key]; // if a value is added to the model after pivot() has been called, the view\n    // doesn't contain it, so let's initialize the view to the target value.\n\n    if (!view.hasOwnProperty(key)) {\n      view[key] = target;\n    }\n\n    actual = view[key];\n\n    if (actual === target || key[0] === '_') {\n      continue;\n    }\n\n    if (!start.hasOwnProperty(key)) {\n      start[key] = actual;\n    }\n\n    origin = start[key];\n    type = _typeof(target);\n\n    if (type === _typeof(origin)) {\n      if (type === 'string') {\n        c0 = color(origin);\n\n        if (c0.valid) {\n          c1 = color(target);\n\n          if (c1.valid) {\n            view[key] = c1.mix(c0, ease).rgbString();\n            continue;\n          }\n        }\n      } else if (type === 'number' && isFinite(origin) && isFinite(target)) {\n        view[key] = origin + (target - origin) * ease;\n        continue;\n      }\n    }\n\n    view[key] = target;\n  }\n}\n\nvar Element = function Element(configuration) {\n  helpers.extend(this, configuration);\n  this.initialize.apply(this, arguments);\n};\n\nhelpers.extend(Element.prototype, {\n  initialize: function initialize() {\n    this.hidden = false;\n  },\n  pivot: function pivot() {\n    var me = this;\n\n    if (!me._view) {\n      me._view = helpers.clone(me._model);\n    }\n\n    me._start = {};\n    return me;\n  },\n  transition: function transition(ease) {\n    var me = this;\n    var model = me._model;\n    var start = me._start;\n    var view = me._view; // No animation -> No Transition\n\n    if (!model || ease === 1) {\n      me._view = model;\n      me._start = null;\n      return me;\n    }\n\n    if (!view) {\n      view = me._view = {};\n    }\n\n    if (!start) {\n      start = me._start = {};\n    }\n\n    interpolate(start, view, model, ease);\n    return me;\n  },\n  tooltipPosition: function tooltipPosition() {\n    return {\n      x: this._model.x,\n      y: this._model.y\n    };\n  },\n  hasValue: function hasValue() {\n    return helpers.isNumber(this._model.x) && helpers.isNumber(this._model.y);\n  }\n});\nElement.extend = helpers.inherits;\nmodule.exports = Element;","'use strict';\n\nmodule.exports = {};\nmodule.exports.Arc = require('./element.arc');\nmodule.exports.Line = require('./element.line');\nmodule.exports.Point = require('./element.point');\nmodule.exports.Rectangle = require('./element.rectangle');","var isArrayLike = require('./isArrayLike');\n/**\n * Creates a `baseEach` or `baseEachRight` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\n\n\nfunction createBaseEach(eachFunc, fromRight) {\n  return function (collection, iteratee) {\n    if (collection == null) {\n      return collection;\n    }\n\n    if (!isArrayLike(collection)) {\n      return eachFunc(collection, iteratee);\n    }\n\n    var length = collection.length,\n        index = fromRight ? length : -1,\n        iterable = Object(collection);\n\n    while (fromRight ? index-- : ++index < length) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n\n    return collection;\n  };\n}\n\nmodule.exports = createBaseEach;","var baseIteratee = require('./_baseIteratee'),\n    isArrayLike = require('./isArrayLike'),\n    keys = require('./keys');\n/**\n * Creates a `_.find` or `_.findLast` function.\n *\n * @private\n * @param {Function} findIndexFunc The function to find the collection index.\n * @returns {Function} Returns the new find function.\n */\n\n\nfunction createFind(findIndexFunc) {\n  return function (collection, predicate, fromIndex) {\n    var iterable = Object(collection);\n\n    if (!isArrayLike(collection)) {\n      var iteratee = baseIteratee(predicate, 3);\n      collection = keys(collection);\n\n      predicate = function predicate(key) {\n        return iteratee(iterable[key], key, iterable);\n      };\n    }\n\n    var index = findIndexFunc(collection, predicate, fromIndex);\n    return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n  };\n}\n\nmodule.exports = createFind;","'use strict';\n\nvar helpers = require('../helpers/index');\n\nfunction filterByPosition(array, position) {\n  return helpers.where(array, function (v) {\n    return v.position === position;\n  });\n}\n\nfunction sortByWeight(array, reverse) {\n  array.forEach(function (v, i) {\n    v._tmpIndex_ = i;\n    return v;\n  });\n  array.sort(function (a, b) {\n    var v0 = reverse ? b : a;\n    var v1 = reverse ? a : b;\n    return v0.weight === v1.weight ? v0._tmpIndex_ - v1._tmpIndex_ : v0.weight - v1.weight;\n  });\n  array.forEach(function (v) {\n    delete v._tmpIndex_;\n  });\n}\n/**\n * @interface ILayoutItem\n * @prop {String} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {Number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {Boolean} fullWidth - if true, and the item is horizontal, then push vertical boxes down\n * @prop {Function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {Function} update - Takes two parameters: width and height. Returns size of item\n * @prop {Function} getPadding -  Returns an object with padding on the edges\n * @prop {Number} width - Width of item. Must be valid after update()\n * @prop {Number} height - Height of item. Must be valid after update()\n * @prop {Number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {Number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {Number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {Number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\n\n\nmodule.exports = {\n  defaults: {},\n\n  /**\n   * Register a box to a chart.\n   * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n   * @param {Chart} chart - the chart to use\n   * @param {ILayoutItem} item - the item to add to be layed out\n   */\n  addBox: function addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    } // initialize item with default values\n\n\n    item.fullWidth = item.fullWidth || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    chart.boxes.push(item);\n  },\n\n  /**\n   * Remove a layoutItem from a chart\n   * @param {Chart} chart - the chart to remove the box from\n   * @param {Object} layoutItem - the item to remove from the layout\n   */\n  removeBox: function removeBox(chart, layoutItem) {\n    var index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n\n  /**\n   * Sets (or updates) options on the given `item`.\n   * @param {Chart} chart - the chart in which the item lives (or will be added to)\n   * @param {Object} item - the item to configure with the given options\n   * @param {Object} options - the new item options.\n   */\n  configure: function configure(chart, item, options) {\n    var props = ['fullWidth', 'position', 'weight'];\n    var ilen = props.length;\n    var i = 0;\n    var prop;\n\n    for (; i < ilen; ++i) {\n      prop = props[i];\n\n      if (options.hasOwnProperty(prop)) {\n        item[prop] = options[prop];\n      }\n    }\n  },\n\n  /**\n   * Fits boxes of the given chart into the given size by having each box measure itself\n   * then running a fitting algorithm\n   * @param {Chart} chart - the chart\n   * @param {Number} width - the width to fit into\n   * @param {Number} height - the height to fit into\n   */\n  update: function update(chart, width, height) {\n    if (!chart) {\n      return;\n    }\n\n    var layoutOptions = chart.options.layout || {};\n    var padding = helpers.options.toPadding(layoutOptions.padding);\n    var leftPadding = padding.left;\n    var rightPadding = padding.right;\n    var topPadding = padding.top;\n    var bottomPadding = padding.bottom;\n    var leftBoxes = filterByPosition(chart.boxes, 'left');\n    var rightBoxes = filterByPosition(chart.boxes, 'right');\n    var topBoxes = filterByPosition(chart.boxes, 'top');\n    var bottomBoxes = filterByPosition(chart.boxes, 'bottom');\n    var chartAreaBoxes = filterByPosition(chart.boxes, 'chartArea'); // Sort boxes by weight. A higher weight is further away from the chart area\n\n    sortByWeight(leftBoxes, true);\n    sortByWeight(rightBoxes, false);\n    sortByWeight(topBoxes, true);\n    sortByWeight(bottomBoxes, false); // Essentially we now have any number of boxes on each of the 4 sides.\n    // Our canvas looks like the following.\n    // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n    // B1 is the bottom axis\n    // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n    // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n    // an error will be thrown.\n    //\n    // |----------------------------------------------------|\n    // |                  T1 (Full Width)                   |\n    // |----------------------------------------------------|\n    // |    |    |                 T2                  |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    | C1 |                           | C2 |    |\n    // |    |    |----|                           |----|    |\n    // |    |    |                                     |    |\n    // | L1 | L2 |           ChartArea (C0)            | R1 |\n    // |    |    |                                     |    |\n    // |    |    |----|                           |----|    |\n    // |    |    | C3 |                           | C4 |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    |                 B1                  |    |\n    // |----------------------------------------------------|\n    // |                  B2 (Full Width)                   |\n    // |----------------------------------------------------|\n    //\n    // What we do to find the best sizing, we do the following\n    // 1. Determine the minimum size of the chart area.\n    // 2. Split the remaining width equally between each vertical axis\n    // 3. Split the remaining height equally between each horizontal axis\n    // 4. Give each layout the maximum size it can be. The layout will return it's minimum size\n    // 5. Adjust the sizes of each axis based on it's minimum reported size.\n    // 6. Refit each axis\n    // 7. Position each axis in the final location\n    // 8. Tell the chart the final location of the chart area\n    // 9. Tell any axes that overlay the chart area the positions of the chart area\n    // Step 1\n\n    var chartWidth = width - leftPadding - rightPadding;\n    var chartHeight = height - topPadding - bottomPadding;\n    var chartAreaWidth = chartWidth / 2; // min 50%\n\n    var chartAreaHeight = chartHeight / 2; // min 50%\n    // Step 2\n\n    var verticalBoxWidth = (width - chartAreaWidth) / (leftBoxes.length + rightBoxes.length); // Step 3\n\n    var horizontalBoxHeight = (height - chartAreaHeight) / (topBoxes.length + bottomBoxes.length); // Step 4\n\n    var maxChartAreaWidth = chartWidth;\n    var maxChartAreaHeight = chartHeight;\n    var minBoxSizes = [];\n\n    function getMinimumBoxSize(box) {\n      var minSize;\n      var isHorizontal = box.isHorizontal();\n\n      if (isHorizontal) {\n        minSize = box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, horizontalBoxHeight);\n        maxChartAreaHeight -= minSize.height;\n      } else {\n        minSize = box.update(verticalBoxWidth, maxChartAreaHeight);\n        maxChartAreaWidth -= minSize.width;\n      }\n\n      minBoxSizes.push({\n        horizontal: isHorizontal,\n        minSize: minSize,\n        box: box\n      });\n    }\n\n    helpers.each(leftBoxes.concat(rightBoxes, topBoxes, bottomBoxes), getMinimumBoxSize); // If a horizontal box has padding, we move the left boxes over to avoid ugly charts (see issue #2478)\n\n    var maxHorizontalLeftPadding = 0;\n    var maxHorizontalRightPadding = 0;\n    var maxVerticalTopPadding = 0;\n    var maxVerticalBottomPadding = 0;\n    helpers.each(topBoxes.concat(bottomBoxes), function (horizontalBox) {\n      if (horizontalBox.getPadding) {\n        var boxPadding = horizontalBox.getPadding();\n        maxHorizontalLeftPadding = Math.max(maxHorizontalLeftPadding, boxPadding.left);\n        maxHorizontalRightPadding = Math.max(maxHorizontalRightPadding, boxPadding.right);\n      }\n    });\n    helpers.each(leftBoxes.concat(rightBoxes), function (verticalBox) {\n      if (verticalBox.getPadding) {\n        var boxPadding = verticalBox.getPadding();\n        maxVerticalTopPadding = Math.max(maxVerticalTopPadding, boxPadding.top);\n        maxVerticalBottomPadding = Math.max(maxVerticalBottomPadding, boxPadding.bottom);\n      }\n    }); // At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could\n    // be if the axes are drawn at their minimum sizes.\n    // Steps 5 & 6\n\n    var totalLeftBoxesWidth = leftPadding;\n    var totalRightBoxesWidth = rightPadding;\n    var totalTopBoxesHeight = topPadding;\n    var totalBottomBoxesHeight = bottomPadding; // Function to fit a box\n\n    function fitBox(box) {\n      var minBoxSize = helpers.findNextWhere(minBoxSizes, function (minBox) {\n        return minBox.box === box;\n      });\n\n      if (minBoxSize) {\n        if (box.isHorizontal()) {\n          var scaleMargin = {\n            left: Math.max(totalLeftBoxesWidth, maxHorizontalLeftPadding),\n            right: Math.max(totalRightBoxesWidth, maxHorizontalRightPadding),\n            top: 0,\n            bottom: 0\n          }; // Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends\n          // on the margin. Sometimes they need to increase in size slightly\n\n          box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\n        } else {\n          box.update(minBoxSize.minSize.width, maxChartAreaHeight);\n        }\n      }\n    } // Update, and calculate the left and right margins for the horizontal boxes\n\n\n    helpers.each(leftBoxes.concat(rightBoxes), fitBox);\n    helpers.each(leftBoxes, function (box) {\n      totalLeftBoxesWidth += box.width;\n    });\n    helpers.each(rightBoxes, function (box) {\n      totalRightBoxesWidth += box.width;\n    }); // Set the Left and Right margins for the horizontal boxes\n\n    helpers.each(topBoxes.concat(bottomBoxes), fitBox); // Figure out how much margin is on the top and bottom of the vertical boxes\n\n    helpers.each(topBoxes, function (box) {\n      totalTopBoxesHeight += box.height;\n    });\n    helpers.each(bottomBoxes, function (box) {\n      totalBottomBoxesHeight += box.height;\n    });\n\n    function finalFitVerticalBox(box) {\n      var minBoxSize = helpers.findNextWhere(minBoxSizes, function (minSize) {\n        return minSize.box === box;\n      });\n      var scaleMargin = {\n        left: 0,\n        right: 0,\n        top: totalTopBoxesHeight,\n        bottom: totalBottomBoxesHeight\n      };\n\n      if (minBoxSize) {\n        box.update(minBoxSize.minSize.width, maxChartAreaHeight, scaleMargin);\n      }\n    } // Let the left layout know the final margin\n\n\n    helpers.each(leftBoxes.concat(rightBoxes), finalFitVerticalBox); // Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)\n\n    totalLeftBoxesWidth = leftPadding;\n    totalRightBoxesWidth = rightPadding;\n    totalTopBoxesHeight = topPadding;\n    totalBottomBoxesHeight = bottomPadding;\n    helpers.each(leftBoxes, function (box) {\n      totalLeftBoxesWidth += box.width;\n    });\n    helpers.each(rightBoxes, function (box) {\n      totalRightBoxesWidth += box.width;\n    });\n    helpers.each(topBoxes, function (box) {\n      totalTopBoxesHeight += box.height;\n    });\n    helpers.each(bottomBoxes, function (box) {\n      totalBottomBoxesHeight += box.height;\n    }); // We may be adding some padding to account for rotated x axis labels\n\n    var leftPaddingAddition = Math.max(maxHorizontalLeftPadding - totalLeftBoxesWidth, 0);\n    totalLeftBoxesWidth += leftPaddingAddition;\n    totalRightBoxesWidth += Math.max(maxHorizontalRightPadding - totalRightBoxesWidth, 0);\n    var topPaddingAddition = Math.max(maxVerticalTopPadding - totalTopBoxesHeight, 0);\n    totalTopBoxesHeight += topPaddingAddition;\n    totalBottomBoxesHeight += Math.max(maxVerticalBottomPadding - totalBottomBoxesHeight, 0); // Figure out if our chart area changed. This would occur if the dataset layout label rotation\n    // changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do\n    // without calling `fit` again\n\n    var newMaxChartAreaHeight = height - totalTopBoxesHeight - totalBottomBoxesHeight;\n    var newMaxChartAreaWidth = width - totalLeftBoxesWidth - totalRightBoxesWidth;\n\n    if (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\n      helpers.each(leftBoxes, function (box) {\n        box.height = newMaxChartAreaHeight;\n      });\n      helpers.each(rightBoxes, function (box) {\n        box.height = newMaxChartAreaHeight;\n      });\n      helpers.each(topBoxes, function (box) {\n        if (!box.fullWidth) {\n          box.width = newMaxChartAreaWidth;\n        }\n      });\n      helpers.each(bottomBoxes, function (box) {\n        if (!box.fullWidth) {\n          box.width = newMaxChartAreaWidth;\n        }\n      });\n      maxChartAreaHeight = newMaxChartAreaHeight;\n      maxChartAreaWidth = newMaxChartAreaWidth;\n    } // Step 7 - Position the boxes\n\n\n    var left = leftPadding + leftPaddingAddition;\n    var top = topPadding + topPaddingAddition;\n\n    function placeBox(box) {\n      if (box.isHorizontal()) {\n        box.left = box.fullWidth ? leftPadding : totalLeftBoxesWidth;\n        box.right = box.fullWidth ? width - rightPadding : totalLeftBoxesWidth + maxChartAreaWidth;\n        box.top = top;\n        box.bottom = top + box.height; // Move to next point\n\n        top = box.bottom;\n      } else {\n        box.left = left;\n        box.right = left + box.width;\n        box.top = totalTopBoxesHeight;\n        box.bottom = totalTopBoxesHeight + maxChartAreaHeight; // Move to next point\n\n        left = box.right;\n      }\n    }\n\n    helpers.each(leftBoxes.concat(topBoxes), placeBox); // Account for chart width and height\n\n    left += maxChartAreaWidth;\n    top += maxChartAreaHeight;\n    helpers.each(rightBoxes, placeBox);\n    helpers.each(bottomBoxes, placeBox); // Step 8\n\n    chart.chartArea = {\n      left: totalLeftBoxesWidth,\n      top: totalTopBoxesHeight,\n      right: totalLeftBoxesWidth + maxChartAreaWidth,\n      bottom: totalTopBoxesHeight + maxChartAreaHeight\n    }; // Step 9\n\n    helpers.each(chartAreaBoxes, function (box) {\n      box.left = chart.chartArea.left;\n      box.top = chart.chartArea.top;\n      box.right = chart.chartArea.right;\n      box.bottom = chart.chartArea.bottom;\n      box.update(maxChartAreaWidth, maxChartAreaHeight);\n    });\n  }\n};","'use strict';\n\nvar helpers = require('../helpers/index');\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\n\n\nmodule.exports = {\n  /**\n   * Namespace to hold formatters for different types of ticks\n   * @namespace Chart.Ticks.formatters\n   */\n  formatters: {\n    /**\n     * Formatter for value labels\n     * @method Chart.Ticks.formatters.values\n     * @param value the value to display\n     * @return {String|Array} the label to display\n     */\n    values: function values(value) {\n      return helpers.isArray(value) ? value : '' + value;\n    },\n\n    /**\n     * Formatter for linear numeric ticks\n     * @method Chart.Ticks.formatters.linear\n     * @param tickValue {Number} the value to be formatted\n     * @param index {Number} the position of the tickValue parameter in the ticks array\n     * @param ticks {Array<Number>} the list of ticks being converted\n     * @return {String} string representation of the tickValue parameter\n     */\n    linear: function linear(tickValue, index, ticks) {\n      // If we have lots of ticks, don't use the ones\n      var delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0]; // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n\n      if (Math.abs(delta) > 1) {\n        if (tickValue !== Math.floor(tickValue)) {\n          // not an integer\n          delta = tickValue - Math.floor(tickValue);\n        }\n      }\n\n      var logDelta = helpers.log10(Math.abs(delta));\n      var tickString = '';\n\n      if (tickValue !== 0) {\n        var numDecimal = -1 * Math.floor(logDelta);\n        numDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\n\n        tickString = tickValue.toFixed(numDecimal);\n      } else {\n        tickString = '0'; // never show decimal places for 0\n      }\n\n      return tickString;\n    },\n    logarithmic: function logarithmic(tickValue, index, ticks) {\n      var remain = tickValue / Math.pow(10, Math.floor(helpers.log10(tickValue)));\n\n      if (tickValue === 0) {\n        return '0';\n      } else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {\n        return tickValue.toExponential();\n      }\n\n      return '';\n    }\n  }\n};","'use strict';\n/**\n * @namespace Chart.helpers\n */\n\nvar helpers = {\n  /**\n   * An empty function that can be used, for example, for optional callback.\n   */\n  noop: function noop() {},\n\n  /**\n   * Returns a unique id, sequentially generated from a global variable.\n   * @returns {Number}\n   * @function\n   */\n  uid: function () {\n    var id = 0;\n    return function () {\n      return id++;\n    };\n  }(),\n\n  /**\n   * Returns true if `value` is neither null nor undefined, else returns false.\n   * @param {*} value - The value to test.\n   * @returns {Boolean}\n   * @since 2.7.0\n   */\n  isNullOrUndef: function isNullOrUndef(value) {\n    return value === null || typeof value === 'undefined';\n  },\n\n  /**\n   * Returns true if `value` is an array, else returns false.\n   * @param {*} value - The value to test.\n   * @returns {Boolean}\n   * @function\n   */\n  isArray: Array.isArray ? Array.isArray : function (value) {\n    return Object.prototype.toString.call(value) === '[object Array]';\n  },\n\n  /**\n   * Returns true if `value` is an object (excluding null), else returns false.\n   * @param {*} value - The value to test.\n   * @returns {Boolean}\n   * @since 2.7.0\n   */\n  isObject: function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n  },\n\n  /**\n   * Returns `value` if defined, else returns `defaultValue`.\n   * @param {*} value - The value to return if defined.\n   * @param {*} defaultValue - The value to return if `value` is undefined.\n   * @returns {*}\n   */\n  valueOrDefault: function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n  },\n\n  /**\n   * Returns value at the given `index` in array if defined, else returns `defaultValue`.\n   * @param {Array} value - The array to lookup for value at `index`.\n   * @param {Number} index - The index in `value` to lookup for value.\n   * @param {*} defaultValue - The value to return if `value[index]` is undefined.\n   * @returns {*}\n   */\n  valueAtIndexOrDefault: function valueAtIndexOrDefault(value, index, defaultValue) {\n    return helpers.valueOrDefault(helpers.isArray(value) ? value[index] : value, defaultValue);\n  },\n\n  /**\n   * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n   * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n   * @param {Function} fn - The function to call.\n   * @param {Array|undefined|null} args - The arguments with which `fn` should be called.\n   * @param {Object} [thisArg] - The value of `this` provided for the call to `fn`.\n   * @returns {*}\n   */\n  callback: function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n      return fn.apply(thisArg, args);\n    }\n  },\n\n  /**\n   * Note(SB) for performance sake, this method should only be used when loopable type\n   * is unknown or in none intensive code (not called often and small loopable). Else\n   * it's preferable to use a regular for() loop and save extra function calls.\n   * @param {Object|Array} loopable - The object or array to be iterated.\n   * @param {Function} fn - The function to call for each item.\n   * @param {Object} [thisArg] - The value of `this` provided for the call to `fn`.\n   * @param {Boolean} [reverse] - If true, iterates backward on the loopable.\n   */\n  each: function each(loopable, fn, thisArg, reverse) {\n    var i, len, keys;\n\n    if (helpers.isArray(loopable)) {\n      len = loopable.length;\n\n      if (reverse) {\n        for (i = len - 1; i >= 0; i--) {\n          fn.call(thisArg, loopable[i], i);\n        }\n      } else {\n        for (i = 0; i < len; i++) {\n          fn.call(thisArg, loopable[i], i);\n        }\n      }\n    } else if (helpers.isObject(loopable)) {\n      keys = Object.keys(loopable);\n      len = keys.length;\n\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[keys[i]], keys[i]);\n      }\n    }\n  },\n\n  /**\n   * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n   * @see http://stackoverflow.com/a/14853974\n   * @param {Array} a0 - The array to compare\n   * @param {Array} a1 - The array to compare\n   * @returns {Boolean}\n   */\n  arrayEquals: function arrayEquals(a0, a1) {\n    var i, ilen, v0, v1;\n\n    if (!a0 || !a1 || a0.length !== a1.length) {\n      return false;\n    }\n\n    for (i = 0, ilen = a0.length; i < ilen; ++i) {\n      v0 = a0[i];\n      v1 = a1[i];\n\n      if (v0 instanceof Array && v1 instanceof Array) {\n        if (!helpers.arrayEquals(v0, v1)) {\n          return false;\n        }\n      } else if (v0 !== v1) {\n        // NOTE: two different object instances will never be equal: {x:20} != {x:20}\n        return false;\n      }\n    }\n\n    return true;\n  },\n\n  /**\n   * Returns a deep copy of `source` without keeping references on objects and arrays.\n   * @param {*} source - The value to clone.\n   * @returns {*}\n   */\n  clone: function clone(source) {\n    if (helpers.isArray(source)) {\n      return source.map(helpers.clone);\n    }\n\n    if (helpers.isObject(source)) {\n      var target = {};\n      var keys = Object.keys(source);\n      var klen = keys.length;\n      var k = 0;\n\n      for (; k < klen; ++k) {\n        target[keys[k]] = helpers.clone(source[keys[k]]);\n      }\n\n      return target;\n    }\n\n    return source;\n  },\n\n  /**\n   * The default merger when Chart.helpers.merge is called without merger option.\n   * Note(SB): this method is also used by configMerge and scaleMerge as fallback.\n   * @private\n   */\n  _merger: function _merger(key, target, source, options) {\n    var tval = target[key];\n    var sval = source[key];\n\n    if (helpers.isObject(tval) && helpers.isObject(sval)) {\n      helpers.merge(tval, sval, options);\n    } else {\n      target[key] = helpers.clone(sval);\n    }\n  },\n\n  /**\n   * Merges source[key] in target[key] only if target[key] is undefined.\n   * @private\n   */\n  _mergerIf: function _mergerIf(key, target, source) {\n    var tval = target[key];\n    var sval = source[key];\n\n    if (helpers.isObject(tval) && helpers.isObject(sval)) {\n      helpers.mergeIf(tval, sval);\n    } else if (!target.hasOwnProperty(key)) {\n      target[key] = helpers.clone(sval);\n    }\n  },\n\n  /**\n   * Recursively deep copies `source` properties into `target` with the given `options`.\n   * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n   * @param {Object} target - The target object in which all sources are merged into.\n   * @param {Object|Array(Object)} source - Object(s) to merge into `target`.\n   * @param {Object} [options] - Merging options:\n   * @param {Function} [options.merger] - The merge method (key, target, source, options)\n   * @returns {Object} The `target` object.\n   */\n  merge: function merge(target, source, options) {\n    var sources = helpers.isArray(source) ? source : [source];\n    var ilen = sources.length;\n    var merge, i, keys, klen, k;\n\n    if (!helpers.isObject(target)) {\n      return target;\n    }\n\n    options = options || {};\n    merge = options.merger || helpers._merger;\n\n    for (i = 0; i < ilen; ++i) {\n      source = sources[i];\n\n      if (!helpers.isObject(source)) {\n        continue;\n      }\n\n      keys = Object.keys(source);\n\n      for (k = 0, klen = keys.length; k < klen; ++k) {\n        merge(keys[k], target, source, options);\n      }\n    }\n\n    return target;\n  },\n\n  /**\n   * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n   * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n   * @param {Object} target - The target object in which all sources are merged into.\n   * @param {Object|Array(Object)} source - Object(s) to merge into `target`.\n   * @returns {Object} The `target` object.\n   */\n  mergeIf: function mergeIf(target, source) {\n    return helpers.merge(target, source, {\n      merger: helpers._mergerIf\n    });\n  },\n\n  /**\n   * Applies the contents of two or more objects together into the first object.\n   * @param {Object} target - The target object in which all objects are merged into.\n   * @param {Object} arg1 - Object containing additional properties to merge in target.\n   * @param {Object} argN - Additional objects containing properties to merge in target.\n   * @returns {Object} The `target` object.\n   */\n  extend: function extend(target) {\n    var setFn = function setFn(value, key) {\n      target[key] = value;\n    };\n\n    for (var i = 1, ilen = arguments.length; i < ilen; ++i) {\n      helpers.each(arguments[i], setFn);\n    }\n\n    return target;\n  },\n\n  /**\n   * Basic javascript inheritance based on the model created in Backbone.js\n   */\n  inherits: function inherits(extensions) {\n    var me = this;\n    var ChartElement = extensions && extensions.hasOwnProperty('constructor') ? extensions.constructor : function () {\n      return me.apply(this, arguments);\n    };\n\n    var Surrogate = function Surrogate() {\n      this.constructor = ChartElement;\n    };\n\n    Surrogate.prototype = me.prototype;\n    ChartElement.prototype = new Surrogate();\n    ChartElement.extend = helpers.inherits;\n\n    if (extensions) {\n      helpers.extend(ChartElement.prototype, extensions);\n    }\n\n    ChartElement.__super__ = me.prototype;\n    return ChartElement;\n  }\n};\nmodule.exports = helpers; // DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.callback instead.\n * @function Chart.helpers.callCallback\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.callCallback = helpers.callback;\n/**\n * Provided for backward compatibility, use Array.prototype.indexOf instead.\n * Array.prototype.indexOf compatibility: Chrome, Opera, Safari, FF1.5+, IE9+\n * @function Chart.helpers.indexOf\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.indexOf = function (array, item, fromIndex) {\n  return Array.prototype.indexOf.call(array, item, fromIndex);\n};\n/**\n * Provided for backward compatibility, use Chart.helpers.valueOrDefault instead.\n * @function Chart.helpers.getValueOrDefault\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\n\nhelpers.getValueOrDefault = helpers.valueOrDefault;\n/**\n * Provided for backward compatibility, use Chart.helpers.valueAtIndexOrDefault instead.\n * @function Chart.helpers.getValueAtIndexOrDefault\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.getValueAtIndexOrDefault = helpers.valueAtIndexOrDefault;","/**\n * @namespace Chart\n */\nvar Chart = require('./core/core')();\n\nChart.helpers = require('./helpers/index'); // @todo dispatch these helpers into appropriated helpers/helpers.* file and write unit tests!\n\nrequire('./core/core.helpers')(Chart);\n\nChart.defaults = require('./core/core.defaults');\nChart.Element = require('./core/core.element');\nChart.elements = require('./elements/index');\nChart.Interaction = require('./core/core.interaction');\nChart.layouts = require('./core/core.layouts');\nChart.platform = require('./platforms/platform');\nChart.plugins = require('./core/core.plugins');\nChart.Ticks = require('./core/core.ticks');\n\nrequire('./core/core.animation')(Chart);\n\nrequire('./core/core.controller')(Chart);\n\nrequire('./core/core.datasetController')(Chart);\n\nrequire('./core/core.scaleService')(Chart);\n\nrequire('./core/core.scale')(Chart);\n\nrequire('./core/core.tooltip')(Chart);\n\nrequire('./scales/scale.linearbase')(Chart);\n\nrequire('./scales/scale.category')(Chart);\n\nrequire('./scales/scale.linear')(Chart);\n\nrequire('./scales/scale.logarithmic')(Chart);\n\nrequire('./scales/scale.radialLinear')(Chart);\n\nrequire('./scales/scale.time')(Chart); // Controllers must be loaded after elements\n// See Chart.core.datasetController.dataElementType\n\n\nrequire('./controllers/controller.bar')(Chart);\n\nrequire('./controllers/controller.bubble')(Chart);\n\nrequire('./controllers/controller.doughnut')(Chart);\n\nrequire('./controllers/controller.line')(Chart);\n\nrequire('./controllers/controller.polarArea')(Chart);\n\nrequire('./controllers/controller.radar')(Chart);\n\nrequire('./controllers/controller.scatter')(Chart);\n\nrequire('./charts/Chart.Bar')(Chart);\n\nrequire('./charts/Chart.Bubble')(Chart);\n\nrequire('./charts/Chart.Doughnut')(Chart);\n\nrequire('./charts/Chart.Line')(Chart);\n\nrequire('./charts/Chart.PolarArea')(Chart);\n\nrequire('./charts/Chart.Radar')(Chart);\n\nrequire('./charts/Chart.Scatter')(Chart); // Loading built-it plugins\n\n\nvar plugins = require('./plugins');\n\nfor (var k in plugins) {\n  if (plugins.hasOwnProperty(k)) {\n    Chart.plugins.register(plugins[k]);\n  }\n}\n\nChart.platform.initialize();\nmodule.exports = Chart;\n\nif (typeof window !== 'undefined') {\n  window.Chart = Chart;\n} // DEPRECATIONS\n\n/**\n * Provided for backward compatibility, not available anymore\n * @namespace Chart.Legend\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\n\n\nChart.Legend = plugins.legend._element;\n/**\n * Provided for backward compatibility, not available anymore\n * @namespace Chart.Title\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\n\nChart.Title = plugins.title._element;\n/**\n * Provided for backward compatibility, use Chart.plugins instead\n * @namespace Chart.pluginService\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\n\nChart.pluginService = Chart.plugins;\n/**\n * Provided for backward compatibility, inheriting from Chart.PlugingBase has no\n * effect, instead simply create/register plugins via plain JavaScript objects.\n * @interface Chart.PluginBase\n * @deprecated since version 2.5.0\n * @todo remove at version 3\n * @private\n */\n\nChart.PluginBase = Chart.Element.extend({});\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas instead.\n * @namespace Chart.canvasHelpers\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n * @private\n */\n\nChart.canvasHelpers = Chart.helpers.canvas;\n/**\n * Provided for backward compatibility, use Chart.layouts instead.\n * @namespace Chart.layoutService\n * @deprecated since version 2.8.0\n * @todo remove at version 3\n * @private\n */\n\nChart.layoutService = Chart.layouts;","var _typeof = require(\"/Users/tarex/redq/DASHBOARD/newdashapp/node_modules/@babel/runtime/helpers/typeof\");\n\n/* MIT license */\nvar convert = require('color-convert');\n\nvar string = require('chartjs-color-string');\n\nvar Color = function Color(obj) {\n  if (obj instanceof Color) {\n    return obj;\n  }\n\n  if (!(this instanceof Color)) {\n    return new Color(obj);\n  }\n\n  this.valid = false;\n  this.values = {\n    rgb: [0, 0, 0],\n    hsl: [0, 0, 0],\n    hsv: [0, 0, 0],\n    hwb: [0, 0, 0],\n    cmyk: [0, 0, 0, 0],\n    alpha: 1\n  }; // parse Color() argument\n\n  var vals;\n\n  if (typeof obj === 'string') {\n    vals = string.getRgba(obj);\n\n    if (vals) {\n      this.setValues('rgb', vals);\n    } else if (vals = string.getHsla(obj)) {\n      this.setValues('hsl', vals);\n    } else if (vals = string.getHwb(obj)) {\n      this.setValues('hwb', vals);\n    }\n  } else if (_typeof(obj) === 'object') {\n    vals = obj;\n\n    if (vals.r !== undefined || vals.red !== undefined) {\n      this.setValues('rgb', vals);\n    } else if (vals.l !== undefined || vals.lightness !== undefined) {\n      this.setValues('hsl', vals);\n    } else if (vals.v !== undefined || vals.value !== undefined) {\n      this.setValues('hsv', vals);\n    } else if (vals.w !== undefined || vals.whiteness !== undefined) {\n      this.setValues('hwb', vals);\n    } else if (vals.c !== undefined || vals.cyan !== undefined) {\n      this.setValues('cmyk', vals);\n    }\n  }\n};\n\nColor.prototype = {\n  isValid: function isValid() {\n    return this.valid;\n  },\n  rgb: function rgb() {\n    return this.setSpace('rgb', arguments);\n  },\n  hsl: function hsl() {\n    return this.setSpace('hsl', arguments);\n  },\n  hsv: function hsv() {\n    return this.setSpace('hsv', arguments);\n  },\n  hwb: function hwb() {\n    return this.setSpace('hwb', arguments);\n  },\n  cmyk: function cmyk() {\n    return this.setSpace('cmyk', arguments);\n  },\n  rgbArray: function rgbArray() {\n    return this.values.rgb;\n  },\n  hslArray: function hslArray() {\n    return this.values.hsl;\n  },\n  hsvArray: function hsvArray() {\n    return this.values.hsv;\n  },\n  hwbArray: function hwbArray() {\n    var values = this.values;\n\n    if (values.alpha !== 1) {\n      return values.hwb.concat([values.alpha]);\n    }\n\n    return values.hwb;\n  },\n  cmykArray: function cmykArray() {\n    return this.values.cmyk;\n  },\n  rgbaArray: function rgbaArray() {\n    var values = this.values;\n    return values.rgb.concat([values.alpha]);\n  },\n  hslaArray: function hslaArray() {\n    var values = this.values;\n    return values.hsl.concat([values.alpha]);\n  },\n  alpha: function alpha(val) {\n    if (val === undefined) {\n      return this.values.alpha;\n    }\n\n    this.setValues('alpha', val);\n    return this;\n  },\n  red: function red(val) {\n    return this.setChannel('rgb', 0, val);\n  },\n  green: function green(val) {\n    return this.setChannel('rgb', 1, val);\n  },\n  blue: function blue(val) {\n    return this.setChannel('rgb', 2, val);\n  },\n  hue: function hue(val) {\n    if (val) {\n      val %= 360;\n      val = val < 0 ? 360 + val : val;\n    }\n\n    return this.setChannel('hsl', 0, val);\n  },\n  saturation: function saturation(val) {\n    return this.setChannel('hsl', 1, val);\n  },\n  lightness: function lightness(val) {\n    return this.setChannel('hsl', 2, val);\n  },\n  saturationv: function saturationv(val) {\n    return this.setChannel('hsv', 1, val);\n  },\n  whiteness: function whiteness(val) {\n    return this.setChannel('hwb', 1, val);\n  },\n  blackness: function blackness(val) {\n    return this.setChannel('hwb', 2, val);\n  },\n  value: function value(val) {\n    return this.setChannel('hsv', 2, val);\n  },\n  cyan: function cyan(val) {\n    return this.setChannel('cmyk', 0, val);\n  },\n  magenta: function magenta(val) {\n    return this.setChannel('cmyk', 1, val);\n  },\n  yellow: function yellow(val) {\n    return this.setChannel('cmyk', 2, val);\n  },\n  black: function black(val) {\n    return this.setChannel('cmyk', 3, val);\n  },\n  hexString: function hexString() {\n    return string.hexString(this.values.rgb);\n  },\n  rgbString: function rgbString() {\n    return string.rgbString(this.values.rgb, this.values.alpha);\n  },\n  rgbaString: function rgbaString() {\n    return string.rgbaString(this.values.rgb, this.values.alpha);\n  },\n  percentString: function percentString() {\n    return string.percentString(this.values.rgb, this.values.alpha);\n  },\n  hslString: function hslString() {\n    return string.hslString(this.values.hsl, this.values.alpha);\n  },\n  hslaString: function hslaString() {\n    return string.hslaString(this.values.hsl, this.values.alpha);\n  },\n  hwbString: function hwbString() {\n    return string.hwbString(this.values.hwb, this.values.alpha);\n  },\n  keyword: function keyword() {\n    return string.keyword(this.values.rgb, this.values.alpha);\n  },\n  rgbNumber: function rgbNumber() {\n    var rgb = this.values.rgb;\n    return rgb[0] << 16 | rgb[1] << 8 | rgb[2];\n  },\n  luminosity: function luminosity() {\n    // http://www.w3.org/TR/WCAG20/#relativeluminancedef\n    var rgb = this.values.rgb;\n    var lum = [];\n\n    for (var i = 0; i < rgb.length; i++) {\n      var chan = rgb[i] / 255;\n      lum[i] = chan <= 0.03928 ? chan / 12.92 : Math.pow((chan + 0.055) / 1.055, 2.4);\n    }\n\n    return 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n  },\n  contrast: function contrast(color2) {\n    // http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n    var lum1 = this.luminosity();\n    var lum2 = color2.luminosity();\n\n    if (lum1 > lum2) {\n      return (lum1 + 0.05) / (lum2 + 0.05);\n    }\n\n    return (lum2 + 0.05) / (lum1 + 0.05);\n  },\n  level: function level(color2) {\n    var contrastRatio = this.contrast(color2);\n\n    if (contrastRatio >= 7.1) {\n      return 'AAA';\n    }\n\n    return contrastRatio >= 4.5 ? 'AA' : '';\n  },\n  dark: function dark() {\n    // YIQ equation from http://24ways.org/2010/calculating-color-contrast\n    var rgb = this.values.rgb;\n    var yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n    return yiq < 128;\n  },\n  light: function light() {\n    return !this.dark();\n  },\n  negate: function negate() {\n    var rgb = [];\n\n    for (var i = 0; i < 3; i++) {\n      rgb[i] = 255 - this.values.rgb[i];\n    }\n\n    this.setValues('rgb', rgb);\n    return this;\n  },\n  lighten: function lighten(ratio) {\n    var hsl = this.values.hsl;\n    hsl[2] += hsl[2] * ratio;\n    this.setValues('hsl', hsl);\n    return this;\n  },\n  darken: function darken(ratio) {\n    var hsl = this.values.hsl;\n    hsl[2] -= hsl[2] * ratio;\n    this.setValues('hsl', hsl);\n    return this;\n  },\n  saturate: function saturate(ratio) {\n    var hsl = this.values.hsl;\n    hsl[1] += hsl[1] * ratio;\n    this.setValues('hsl', hsl);\n    return this;\n  },\n  desaturate: function desaturate(ratio) {\n    var hsl = this.values.hsl;\n    hsl[1] -= hsl[1] * ratio;\n    this.setValues('hsl', hsl);\n    return this;\n  },\n  whiten: function whiten(ratio) {\n    var hwb = this.values.hwb;\n    hwb[1] += hwb[1] * ratio;\n    this.setValues('hwb', hwb);\n    return this;\n  },\n  blacken: function blacken(ratio) {\n    var hwb = this.values.hwb;\n    hwb[2] += hwb[2] * ratio;\n    this.setValues('hwb', hwb);\n    return this;\n  },\n  greyscale: function greyscale() {\n    var rgb = this.values.rgb; // http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\n    var val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n    this.setValues('rgb', [val, val, val]);\n    return this;\n  },\n  clearer: function clearer(ratio) {\n    var alpha = this.values.alpha;\n    this.setValues('alpha', alpha - alpha * ratio);\n    return this;\n  },\n  opaquer: function opaquer(ratio) {\n    var alpha = this.values.alpha;\n    this.setValues('alpha', alpha + alpha * ratio);\n    return this;\n  },\n  rotate: function rotate(degrees) {\n    var hsl = this.values.hsl;\n    var hue = (hsl[0] + degrees) % 360;\n    hsl[0] = hue < 0 ? 360 + hue : hue;\n    this.setValues('hsl', hsl);\n    return this;\n  },\n\n  /**\n   * Ported from sass implementation in C\n   * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n   */\n  mix: function mix(mixinColor, weight) {\n    var color1 = this;\n    var color2 = mixinColor;\n    var p = weight === undefined ? 0.5 : weight;\n    var w = 2 * p - 1;\n    var a = color1.alpha() - color2.alpha();\n    var w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n    var w2 = 1 - w1;\n    return this.rgb(w1 * color1.red() + w2 * color2.red(), w1 * color1.green() + w2 * color2.green(), w1 * color1.blue() + w2 * color2.blue()).alpha(color1.alpha() * p + color2.alpha() * (1 - p));\n  },\n  toJSON: function toJSON() {\n    return this.rgb();\n  },\n  clone: function clone() {\n    // NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,\n    // making the final build way to big to embed in Chart.js. So let's do it manually,\n    // assuming that values to clone are 1 dimension arrays containing only numbers,\n    // except 'alpha' which is a number.\n    var result = new Color();\n    var source = this.values;\n    var target = result.values;\n    var value, type;\n\n    for (var prop in source) {\n      if (source.hasOwnProperty(prop)) {\n        value = source[prop];\n        type = {}.toString.call(value);\n\n        if (type === '[object Array]') {\n          target[prop] = value.slice(0);\n        } else if (type === '[object Number]') {\n          target[prop] = value;\n        } else {\n          console.error('unexpected color value:', value);\n        }\n      }\n    }\n\n    return result;\n  }\n};\nColor.prototype.spaces = {\n  rgb: ['red', 'green', 'blue'],\n  hsl: ['hue', 'saturation', 'lightness'],\n  hsv: ['hue', 'saturation', 'value'],\n  hwb: ['hue', 'whiteness', 'blackness'],\n  cmyk: ['cyan', 'magenta', 'yellow', 'black']\n};\nColor.prototype.maxes = {\n  rgb: [255, 255, 255],\n  hsl: [360, 100, 100],\n  hsv: [360, 100, 100],\n  hwb: [360, 100, 100],\n  cmyk: [100, 100, 100, 100]\n};\n\nColor.prototype.getValues = function (space) {\n  var values = this.values;\n  var vals = {};\n\n  for (var i = 0; i < space.length; i++) {\n    vals[space.charAt(i)] = values[space][i];\n  }\n\n  if (values.alpha !== 1) {\n    vals.a = values.alpha;\n  } // {r: 255, g: 255, b: 255, a: 0.4}\n\n\n  return vals;\n};\n\nColor.prototype.setValues = function (space, vals) {\n  var values = this.values;\n  var spaces = this.spaces;\n  var maxes = this.maxes;\n  var alpha = 1;\n  var i;\n  this.valid = true;\n\n  if (space === 'alpha') {\n    alpha = vals;\n  } else if (vals.length) {\n    // [10, 10, 10]\n    values[space] = vals.slice(0, space.length);\n    alpha = vals[space.length];\n  } else if (vals[space.charAt(0)] !== undefined) {\n    // {r: 10, g: 10, b: 10}\n    for (i = 0; i < space.length; i++) {\n      values[space][i] = vals[space.charAt(i)];\n    }\n\n    alpha = vals.a;\n  } else if (vals[spaces[space][0]] !== undefined) {\n    // {red: 10, green: 10, blue: 10}\n    var chans = spaces[space];\n\n    for (i = 0; i < space.length; i++) {\n      values[space][i] = vals[chans[i]];\n    }\n\n    alpha = vals.alpha;\n  }\n\n  values.alpha = Math.max(0, Math.min(1, alpha === undefined ? values.alpha : alpha));\n\n  if (space === 'alpha') {\n    return false;\n  }\n\n  var capped; // cap values of the space prior converting all values\n\n  for (i = 0; i < space.length; i++) {\n    capped = Math.max(0, Math.min(maxes[space][i], values[space][i]));\n    values[space][i] = Math.round(capped);\n  } // convert to all the other color spaces\n\n\n  for (var sname in spaces) {\n    if (sname !== space) {\n      values[sname] = convert[space][sname](values[space]);\n    }\n  }\n\n  return true;\n};\n\nColor.prototype.setSpace = function (space, args) {\n  var vals = args[0];\n\n  if (vals === undefined) {\n    // color.rgb()\n    return this.getValues(space);\n  } // color.rgb(10, 10, 10)\n\n\n  if (typeof vals === 'number') {\n    vals = Array.prototype.slice.call(args);\n  }\n\n  this.setValues(space, vals);\n  return this;\n};\n\nColor.prototype.setChannel = function (space, index, val) {\n  var svalues = this.values[space];\n\n  if (val === undefined) {\n    // color.red()\n    return svalues[index];\n  } else if (val === svalues[index]) {\n    // color.red(color.red())\n    return this;\n  } // color.red(100)\n\n\n  svalues[index] = val;\n  this.setValues(space, svalues);\n  return this;\n};\n\nif (typeof window !== 'undefined') {\n  window.Color = Color;\n}\n\nmodule.exports = Color;","'use strict';\n\nvar helpers = require('../helpers/index');\n/**\n * Helper function to get relative position for an event\n * @param {Event|IEvent} event - The event to get the position for\n * @param {Chart} chart - The chart\n * @returns {Point} the event position\n */\n\n\nfunction getRelativePosition(e, chart) {\n  if (e.native) {\n    return {\n      x: e.x,\n      y: e.y\n    };\n  }\n\n  return helpers.getRelativePosition(e, chart);\n}\n/**\n * Helper function to traverse all of the visible elements in the chart\n * @param chart {chart} the chart\n * @param handler {Function} the callback to execute for each visible item\n */\n\n\nfunction parseVisibleItems(chart, handler) {\n  var datasets = chart.data.datasets;\n  var meta, i, j, ilen, jlen;\n\n  for (i = 0, ilen = datasets.length; i < ilen; ++i) {\n    if (!chart.isDatasetVisible(i)) {\n      continue;\n    }\n\n    meta = chart.getDatasetMeta(i);\n\n    for (j = 0, jlen = meta.data.length; j < jlen; ++j) {\n      var element = meta.data[j];\n\n      if (!element._view.skip) {\n        handler(element);\n      }\n    }\n  }\n}\n/**\n * Helper function to get the items that intersect the event position\n * @param items {ChartElement[]} elements to filter\n * @param position {Point} the point to be nearest to\n * @return {ChartElement[]} the nearest items\n */\n\n\nfunction getIntersectItems(chart, position) {\n  var elements = [];\n  parseVisibleItems(chart, function (element) {\n    if (element.inRange(position.x, position.y)) {\n      elements.push(element);\n    }\n  });\n  return elements;\n}\n/**\n * Helper function to get the items nearest to the event position considering all visible items in teh chart\n * @param chart {Chart} the chart to look at elements from\n * @param position {Point} the point to be nearest to\n * @param intersect {Boolean} if true, only consider items that intersect the position\n * @param distanceMetric {Function} function to provide the distance between points\n * @return {ChartElement[]} the nearest items\n */\n\n\nfunction getNearestItems(chart, position, intersect, distanceMetric) {\n  var minDistance = Number.POSITIVE_INFINITY;\n  var nearestItems = [];\n  parseVisibleItems(chart, function (element) {\n    if (intersect && !element.inRange(position.x, position.y)) {\n      return;\n    }\n\n    var center = element.getCenterPoint();\n    var distance = distanceMetric(position, center);\n\n    if (distance < minDistance) {\n      nearestItems = [element];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      // Can have multiple items at the same distance in which case we sort by size\n      nearestItems.push(element);\n    }\n  });\n  return nearestItems;\n}\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {String} axis the axis mode. x|y|xy\n */\n\n\nfunction getDistanceMetricForAxis(axis) {\n  var useX = axis.indexOf('x') !== -1;\n  var useY = axis.indexOf('y') !== -1;\n  return function (pt1, pt2) {\n    var deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    var deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\nfunction indexMode(chart, e, options) {\n  var position = getRelativePosition(e, chart); // Default axis for index mode is 'x' to match old behaviour\n\n  options.axis = options.axis || 'x';\n  var distanceMetric = getDistanceMetricForAxis(options.axis);\n  var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n  var elements = [];\n\n  if (!items.length) {\n    return [];\n  }\n\n  chart.data.datasets.forEach(function (dataset, datasetIndex) {\n    if (chart.isDatasetVisible(datasetIndex)) {\n      var meta = chart.getDatasetMeta(datasetIndex);\n      var element = meta.data[items[0]._index]; // don't count items that are skipped (null data)\n\n      if (element && !element._view.skip) {\n        elements.push(element);\n      }\n    }\n  });\n  return elements;\n}\n/**\n * @interface IInteractionOptions\n */\n\n/**\n * If true, only consider items that intersect the point\n * @name IInterfaceOptions#boolean\n * @type Boolean\n */\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\n\n\nmodule.exports = {\n  // Helper function for different modes\n  modes: {\n    single: function single(chart, e) {\n      var position = getRelativePosition(e, chart);\n      var elements = [];\n      parseVisibleItems(chart, function (element) {\n        if (element.inRange(position.x, position.y)) {\n          elements.push(element);\n          return elements;\n        }\n      });\n      return elements.slice(0, 1);\n    },\n\n    /**\n     * @function Chart.Interaction.modes.label\n     * @deprecated since version 2.4.0\n     * @todo remove at version 3\n     * @private\n     */\n    label: indexMode,\n\n    /**\n     * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n     * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n     * @function Chart.Interaction.modes.index\n     * @since v2.4.0\n     * @param chart {chart} the chart we are returning items from\n     * @param e {Event} the event we are find things at\n     * @param options {IInteractionOptions} options to use during interaction\n     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n     */\n    index: indexMode,\n\n    /**\n     * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n     * If the options.intersect is false, we find the nearest item and return the items in that dataset\n     * @function Chart.Interaction.modes.dataset\n     * @param chart {chart} the chart we are returning items from\n     * @param e {Event} the event we are find things at\n     * @param options {IInteractionOptions} options to use during interaction\n     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n     */\n    dataset: function dataset(chart, e, options) {\n      var position = getRelativePosition(e, chart);\n      options.axis = options.axis || 'xy';\n      var distanceMetric = getDistanceMetricForAxis(options.axis);\n      var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\n      if (items.length > 0) {\n        items = chart.getDatasetMeta(items[0]._datasetIndex).data;\n      }\n\n      return items;\n    },\n\n    /**\n     * @function Chart.Interaction.modes.x-axis\n     * @deprecated since version 2.4.0. Use index mode and intersect == true\n     * @todo remove at version 3\n     * @private\n     */\n    'x-axis': function xAxis(chart, e) {\n      return indexMode(chart, e, {\n        intersect: false\n      });\n    },\n\n    /**\n     * Point mode returns all elements that hit test based on the event position\n     * of the event\n     * @function Chart.Interaction.modes.intersect\n     * @param chart {chart} the chart we are returning items from\n     * @param e {Event} the event we are find things at\n     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n     */\n    point: function point(chart, e) {\n      var position = getRelativePosition(e, chart);\n      return getIntersectItems(chart, position);\n    },\n\n    /**\n     * nearest mode returns the element closest to the point\n     * @function Chart.Interaction.modes.intersect\n     * @param chart {chart} the chart we are returning items from\n     * @param e {Event} the event we are find things at\n     * @param options {IInteractionOptions} options to use\n     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n     */\n    nearest: function nearest(chart, e, options) {\n      var position = getRelativePosition(e, chart);\n      options.axis = options.axis || 'xy';\n      var distanceMetric = getDistanceMetricForAxis(options.axis);\n      var nearestItems = getNearestItems(chart, position, options.intersect, distanceMetric); // We have multiple items at the same distance from the event. Now sort by smallest\n\n      if (nearestItems.length > 1) {\n        nearestItems.sort(function (a, b) {\n          var sizeA = a.getArea();\n          var sizeB = b.getArea();\n          var ret = sizeA - sizeB;\n\n          if (ret === 0) {\n            // if equal sort by dataset index\n            ret = a._datasetIndex - b._datasetIndex;\n          }\n\n          return ret;\n        });\n      } // Return only 1 item\n\n\n      return nearestItems.slice(0, 1);\n    },\n\n    /**\n     * x mode returns the elements that hit-test at the current x coordinate\n     * @function Chart.Interaction.modes.x\n     * @param chart {chart} the chart we are returning items from\n     * @param e {Event} the event we are find things at\n     * @param options {IInteractionOptions} options to use\n     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n     */\n    x: function x(chart, e, options) {\n      var position = getRelativePosition(e, chart);\n      var items = [];\n      var intersectsItem = false;\n      parseVisibleItems(chart, function (element) {\n        if (element.inXRange(position.x)) {\n          items.push(element);\n        }\n\n        if (element.inRange(position.x, position.y)) {\n          intersectsItem = true;\n        }\n      }); // If we want to trigger on an intersect and we don't have any items\n      // that intersect the position, return nothing\n\n      if (options.intersect && !intersectsItem) {\n        items = [];\n      }\n\n      return items;\n    },\n\n    /**\n     * y mode returns the elements that hit-test at the current y coordinate\n     * @function Chart.Interaction.modes.y\n     * @param chart {chart} the chart we are returning items from\n     * @param e {Event} the event we are find things at\n     * @param options {IInteractionOptions} options to use\n     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n     */\n    y: function y(chart, e, options) {\n      var position = getRelativePosition(e, chart);\n      var items = [];\n      var intersectsItem = false;\n      parseVisibleItems(chart, function (element) {\n        if (element.inYRange(position.y)) {\n          items.push(element);\n        }\n\n        if (element.inRange(position.x, position.y)) {\n          intersectsItem = true;\n        }\n      }); // If we want to trigger on an intersect and we don't have any items\n      // that intersect the position, return nothing\n\n      if (options.intersect && !intersectsItem) {\n        items = [];\n      }\n\n      return items;\n    }\n  }\n};","'use strict';\n\nvar helpers = require('../helpers/index');\n\nvar basic = require('./platform.basic');\n\nvar dom = require('./platform.dom'); // @TODO Make possible to select another platform at build time.\n\n\nvar implementation = dom._enabled ? dom : basic;\n/**\n * @namespace Chart.platform\n * @see https://chartjs.gitbooks.io/proposals/content/Platform.html\n * @since 2.4.0\n */\n\nmodule.exports = helpers.extend({\n  /**\n   * @since 2.7.0\n   */\n  initialize: function initialize() {},\n\n  /**\n   * Called at chart construction time, returns a context2d instance implementing\n   * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n   * @param {*} item - The native item from which to acquire context (platform specific)\n   * @param {Object} options - The chart options\n   * @returns {CanvasRenderingContext2D} context2d instance\n   */\n  acquireContext: function acquireContext() {},\n\n  /**\n   * Called at chart destruction time, releases any resources associated to the context\n   * previously returned by the acquireContext() method.\n   * @param {CanvasRenderingContext2D} context - The context2d instance\n   * @returns {Boolean} true if the method succeeded, else false\n   */\n  releaseContext: function releaseContext() {},\n\n  /**\n   * Registers the specified listener on the given chart.\n   * @param {Chart} chart - Chart from which to listen for event\n   * @param {String} type - The ({@link IEvent}) type to listen for\n   * @param {Function} listener - Receives a notification (an object that implements\n   * the {@link IEvent} interface) when an event of the specified type occurs.\n   */\n  addEventListener: function addEventListener() {},\n\n  /**\n   * Removes the specified listener previously registered with addEventListener.\n   * @param {Chart} chart -Chart from which to remove the listener\n   * @param {String} type - The ({@link IEvent}) type to remove\n   * @param {Function} listener - The listener function to remove from the event target.\n   */\n  removeEventListener: function removeEventListener() {}\n}, implementation);\n/**\n * @interface IPlatform\n * Allows abstracting platform dependencies away from the chart\n * @borrows Chart.platform.acquireContext as acquireContext\n * @borrows Chart.platform.releaseContext as releaseContext\n * @borrows Chart.platform.addEventListener as addEventListener\n * @borrows Chart.platform.removeEventListener as removeEventListener\n */\n\n/**\n * @interface IEvent\n * @prop {String} type - The event type name, possible values are:\n * 'contextmenu', 'mouseenter', 'mousedown', 'mousemove', 'mouseup', 'mouseout',\n * 'click', 'dblclick', 'keydown', 'keypress', 'keyup' and 'resize'\n * @prop {*} native - The original native event (null for emulated events, e.g. 'resize')\n * @prop {Number} x - The mouse x position, relative to the canvas (null for incompatible events)\n * @prop {Number} y - The mouse y position, relative to the canvas (null for incompatible events)\n */","'use strict';\n\nvar defaults = require('./core.defaults');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n  plugins: {}\n});\n/**\n * The plugin service singleton\n * @namespace Chart.plugins\n * @since 2.1.0\n */\n\n\nmodule.exports = {\n  /**\n   * Globally registered plugins.\n   * @private\n   */\n  _plugins: [],\n\n  /**\n   * This identifier is used to invalidate the descriptors cache attached to each chart\n   * when a global plugin is registered or unregistered. In this case, the cache ID is\n   * incremented and descriptors are regenerated during following API calls.\n   * @private\n   */\n  _cacheId: 0,\n\n  /**\n   * Registers the given plugin(s) if not already registered.\n   * @param {Array|Object} plugins plugin instance(s).\n   */\n  register: function register(plugins) {\n    var p = this._plugins;\n    [].concat(plugins).forEach(function (plugin) {\n      if (p.indexOf(plugin) === -1) {\n        p.push(plugin);\n      }\n    });\n    this._cacheId++;\n  },\n\n  /**\n   * Unregisters the given plugin(s) only if registered.\n   * @param {Array|Object} plugins plugin instance(s).\n   */\n  unregister: function unregister(plugins) {\n    var p = this._plugins;\n    [].concat(plugins).forEach(function (plugin) {\n      var idx = p.indexOf(plugin);\n\n      if (idx !== -1) {\n        p.splice(idx, 1);\n      }\n    });\n    this._cacheId++;\n  },\n\n  /**\n   * Remove all registered plugins.\n   * @since 2.1.5\n   */\n  clear: function clear() {\n    this._plugins = [];\n    this._cacheId++;\n  },\n\n  /**\n   * Returns the number of registered plugins?\n   * @returns {Number}\n   * @since 2.1.5\n   */\n  count: function count() {\n    return this._plugins.length;\n  },\n\n  /**\n   * Returns all registered plugin instances.\n   * @returns {Array} array of plugin objects.\n   * @since 2.1.5\n   */\n  getAll: function getAll() {\n    return this._plugins;\n  },\n\n  /**\n   * Calls enabled plugins for `chart` on the specified hook and with the given args.\n   * This method immediately returns as soon as a plugin explicitly returns false. The\n   * returned value can be used, for instance, to interrupt the current action.\n   * @param {Object} chart - The chart instance for which plugins should be called.\n   * @param {String} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n   * @param {Array} [args] - Extra arguments to apply to the hook call.\n   * @returns {Boolean} false if any of the plugins return false, else returns true.\n   */\n  notify: function notify(chart, hook, args) {\n    var descriptors = this.descriptors(chart);\n    var ilen = descriptors.length;\n    var i, descriptor, plugin, params, method;\n\n    for (i = 0; i < ilen; ++i) {\n      descriptor = descriptors[i];\n      plugin = descriptor.plugin;\n      method = plugin[hook];\n\n      if (typeof method === 'function') {\n        params = [chart].concat(args || []);\n        params.push(descriptor.options);\n\n        if (method.apply(plugin, params) === false) {\n          return false;\n        }\n      }\n    }\n\n    return true;\n  },\n\n  /**\n   * Returns descriptors of enabled plugins for the given chart.\n   * @returns {Array} [{ plugin, options }]\n   * @private\n   */\n  descriptors: function descriptors(chart) {\n    var cache = chart.$plugins || (chart.$plugins = {});\n\n    if (cache.id === this._cacheId) {\n      return cache.descriptors;\n    }\n\n    var plugins = [];\n    var descriptors = [];\n    var config = chart && chart.config || {};\n    var options = config.options && config.options.plugins || {};\n\n    this._plugins.concat(config.plugins || []).forEach(function (plugin) {\n      var idx = plugins.indexOf(plugin);\n\n      if (idx !== -1) {\n        return;\n      }\n\n      var id = plugin.id;\n      var opts = options[id];\n\n      if (opts === false) {\n        return;\n      }\n\n      if (opts === true) {\n        opts = helpers.clone(defaults.global.plugins[id]);\n      }\n\n      plugins.push(plugin);\n      descriptors.push({\n        plugin: plugin,\n        options: opts || {}\n      });\n    });\n\n    cache.descriptors = descriptors;\n    cache.id = this._cacheId;\n    return descriptors;\n  },\n\n  /**\n   * Invalidates cache for the given chart: descriptors hold a reference on plugin option,\n   * but in some cases, this reference can be changed by the user when updating options.\n   * https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n   * @private\n   */\n  _invalidate: function _invalidate(chart) {\n    delete chart.$plugins;\n  }\n};\n/**\n * Plugin extension hooks.\n * @interface IPlugin\n * @since 2.1.0\n */\n\n/**\n * @method IPlugin#beforeInit\n * @desc Called before initializing `chart`.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#afterInit\n * @desc Called after `chart` has been initialized and before the first update.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeUpdate\n * @desc Called before updating `chart`. If any plugin returns `false`, the update\n * is cancelled (and thus subsequent render(s)) until another `update` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart update.\n */\n\n/**\n * @method IPlugin#afterUpdate\n * @desc Called after `chart` has been updated and before rendering. Note that this\n * hook will not be called if the chart update has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeDatasetsUpdate\n * @desc Called before updating the `chart` datasets. If any plugin returns `false`,\n * the datasets update is cancelled until another `update` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} false to cancel the datasets update.\n * @since version 2.1.5\n*/\n\n/**\n * @method IPlugin#afterDatasetsUpdate\n * @desc Called after the `chart` datasets have been updated. Note that this hook\n * will not be called if the datasets update has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @since version 2.1.5\n */\n\n/**\n * @method IPlugin#beforeDatasetUpdate\n * @desc Called before updating the `chart` dataset at the given `args.index`. If any plugin\n * returns `false`, the datasets update is cancelled until another `update` is triggered.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart datasets drawing.\n */\n\n/**\n * @method IPlugin#afterDatasetUpdate\n * @desc Called after the `chart` datasets at the given `args.index` has been updated. Note\n * that this hook will not be called if the datasets update has been previously cancelled.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeLayout\n * @desc Called before laying out `chart`. If any plugin returns `false`,\n * the layout update is cancelled until another `update` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart layout.\n */\n\n/**\n * @method IPlugin#afterLayout\n * @desc Called after the `chart` has been layed out. Note that this hook will not\n * be called if the layout update has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeRender\n * @desc Called before rendering `chart`. If any plugin returns `false`,\n * the rendering is cancelled until another `render` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart rendering.\n */\n\n/**\n * @method IPlugin#afterRender\n * @desc Called after the `chart` has been fully rendered (and animation completed). Note\n * that this hook will not be called if the rendering has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeDraw\n * @desc Called before drawing `chart` at every animation frame specified by the given\n * easing value. If any plugin returns `false`, the frame drawing is cancelled until\n * another `render` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart drawing.\n */\n\n/**\n * @method IPlugin#afterDraw\n * @desc Called after the `chart` has been drawn for the specific easing value. Note\n * that this hook will not be called if the drawing has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeDatasetsDraw\n * @desc Called before drawing the `chart` datasets. If any plugin returns `false`,\n * the datasets drawing is cancelled until another `render` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart datasets drawing.\n */\n\n/**\n * @method IPlugin#afterDatasetsDraw\n * @desc Called after the `chart` datasets have been drawn. Note that this hook\n * will not be called if the datasets drawing has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeDatasetDraw\n * @desc Called before drawing the `chart` dataset at the given `args.index` (datasets\n * are drawn in the reverse order). If any plugin returns `false`, the datasets drawing\n * is cancelled until another `render` is triggered.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart datasets drawing.\n */\n\n/**\n * @method IPlugin#afterDatasetDraw\n * @desc Called after the `chart` datasets at the given `args.index` have been drawn\n * (datasets are drawn in the reverse order). Note that this hook will not be called\n * if the datasets drawing has been previously cancelled.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeTooltipDraw\n * @desc Called before drawing the `tooltip`. If any plugin returns `false`,\n * the tooltip drawing is cancelled until another `render` is triggered.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Object} args.tooltip - The tooltip.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart tooltip drawing.\n */\n\n/**\n * @method IPlugin#afterTooltipDraw\n * @desc Called after drawing the `tooltip`. Note that this hook will not\n * be called if the tooltip drawing has been previously cancelled.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Object} args.tooltip - The tooltip.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeEvent\n * @desc Called before processing the specified `event`. If any plugin returns `false`,\n * the event will be discarded.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {IEvent} event - The event object.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#afterEvent\n * @desc Called after the `event` has been consumed. Note that this hook\n * will not be called if the `event` has been previously discarded.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {IEvent} event - The event object.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#resize\n * @desc Called after the chart as been resized.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} size - The new canvas display size (eq. canvas.style width & height).\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#destroy\n * @desc Called after the chart as been destroyed.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */","'use strict';\n\nvar defaults = require('./core.defaults');\n\ndefaults._set('global', {\n  responsive: true,\n  responsiveAnimationDuration: 0,\n  maintainAspectRatio: true,\n  events: ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'],\n  hover: {\n    onHover: null,\n    mode: 'nearest',\n    intersect: true,\n    animationDuration: 400\n  },\n  onClick: null,\n  defaultColor: 'rgba(0,0,0,0.1)',\n  defaultFontColor: '#666',\n  defaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n  defaultFontSize: 12,\n  defaultFontStyle: 'normal',\n  showLines: true,\n  // Element defaults defined in element extensions\n  elements: {},\n  // Layout options such as padding\n  layout: {\n    padding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  }\n});\n\nmodule.exports = function () {\n  // Occupy the global variable of Chart, and create a simple base class\n  var Chart = function Chart(item, config) {\n    this.construct(item, config);\n    return this;\n  };\n\n  Chart.Chart = Chart;\n  return Chart;\n};","'use strict';\n\nvar helpers = require('./helpers.core');\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easingEffects\n * @see http://www.robertpenner.com/easing/\n */\n\n\nvar effects = {\n  linear: function linear(t) {\n    return t;\n  },\n  easeInQuad: function easeInQuad(t) {\n    return t * t;\n  },\n  easeOutQuad: function easeOutQuad(t) {\n    return -t * (t - 2);\n  },\n  easeInOutQuad: function easeInOutQuad(t) {\n    if ((t /= 0.5) < 1) {\n      return 0.5 * t * t;\n    }\n\n    return -0.5 * (--t * (t - 2) - 1);\n  },\n  easeInCubic: function easeInCubic(t) {\n    return t * t * t;\n  },\n  easeOutCubic: function easeOutCubic(t) {\n    return (t = t - 1) * t * t + 1;\n  },\n  easeInOutCubic: function easeInOutCubic(t) {\n    if ((t /= 0.5) < 1) {\n      return 0.5 * t * t * t;\n    }\n\n    return 0.5 * ((t -= 2) * t * t + 2);\n  },\n  easeInQuart: function easeInQuart(t) {\n    return t * t * t * t;\n  },\n  easeOutQuart: function easeOutQuart(t) {\n    return -((t = t - 1) * t * t * t - 1);\n  },\n  easeInOutQuart: function easeInOutQuart(t) {\n    if ((t /= 0.5) < 1) {\n      return 0.5 * t * t * t * t;\n    }\n\n    return -0.5 * ((t -= 2) * t * t * t - 2);\n  },\n  easeInQuint: function easeInQuint(t) {\n    return t * t * t * t * t;\n  },\n  easeOutQuint: function easeOutQuint(t) {\n    return (t = t - 1) * t * t * t * t + 1;\n  },\n  easeInOutQuint: function easeInOutQuint(t) {\n    if ((t /= 0.5) < 1) {\n      return 0.5 * t * t * t * t * t;\n    }\n\n    return 0.5 * ((t -= 2) * t * t * t * t + 2);\n  },\n  easeInSine: function easeInSine(t) {\n    return -Math.cos(t * (Math.PI / 2)) + 1;\n  },\n  easeOutSine: function easeOutSine(t) {\n    return Math.sin(t * (Math.PI / 2));\n  },\n  easeInOutSine: function easeInOutSine(t) {\n    return -0.5 * (Math.cos(Math.PI * t) - 1);\n  },\n  easeInExpo: function easeInExpo(t) {\n    return t === 0 ? 0 : Math.pow(2, 10 * (t - 1));\n  },\n  easeOutExpo: function easeOutExpo(t) {\n    return t === 1 ? 1 : -Math.pow(2, -10 * t) + 1;\n  },\n  easeInOutExpo: function easeInOutExpo(t) {\n    if (t === 0) {\n      return 0;\n    }\n\n    if (t === 1) {\n      return 1;\n    }\n\n    if ((t /= 0.5) < 1) {\n      return 0.5 * Math.pow(2, 10 * (t - 1));\n    }\n\n    return 0.5 * (-Math.pow(2, -10 * --t) + 2);\n  },\n  easeInCirc: function easeInCirc(t) {\n    if (t >= 1) {\n      return t;\n    }\n\n    return -(Math.sqrt(1 - t * t) - 1);\n  },\n  easeOutCirc: function easeOutCirc(t) {\n    return Math.sqrt(1 - (t = t - 1) * t);\n  },\n  easeInOutCirc: function easeInOutCirc(t) {\n    if ((t /= 0.5) < 1) {\n      return -0.5 * (Math.sqrt(1 - t * t) - 1);\n    }\n\n    return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n  },\n  easeInElastic: function easeInElastic(t) {\n    var s = 1.70158;\n    var p = 0;\n    var a = 1;\n\n    if (t === 0) {\n      return 0;\n    }\n\n    if (t === 1) {\n      return 1;\n    }\n\n    if (!p) {\n      p = 0.3;\n    }\n\n    if (a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p / (2 * Math.PI) * Math.asin(1 / a);\n    }\n\n    return -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n  },\n  easeOutElastic: function easeOutElastic(t) {\n    var s = 1.70158;\n    var p = 0;\n    var a = 1;\n\n    if (t === 0) {\n      return 0;\n    }\n\n    if (t === 1) {\n      return 1;\n    }\n\n    if (!p) {\n      p = 0.3;\n    }\n\n    if (a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p / (2 * Math.PI) * Math.asin(1 / a);\n    }\n\n    return a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;\n  },\n  easeInOutElastic: function easeInOutElastic(t) {\n    var s = 1.70158;\n    var p = 0;\n    var a = 1;\n\n    if (t === 0) {\n      return 0;\n    }\n\n    if ((t /= 0.5) === 2) {\n      return 1;\n    }\n\n    if (!p) {\n      p = 0.45;\n    }\n\n    if (a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p / (2 * Math.PI) * Math.asin(1 / a);\n    }\n\n    if (t < 1) {\n      return -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n    }\n\n    return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;\n  },\n  easeInBack: function easeInBack(t) {\n    var s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n  easeOutBack: function easeOutBack(t) {\n    var s = 1.70158;\n    return (t = t - 1) * t * ((s + 1) * t + s) + 1;\n  },\n  easeInOutBack: function easeInOutBack(t) {\n    var s = 1.70158;\n\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n    }\n\n    return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n  },\n  easeInBounce: function easeInBounce(t) {\n    return 1 - effects.easeOutBounce(1 - t);\n  },\n  easeOutBounce: function easeOutBounce(t) {\n    if (t < 1 / 2.75) {\n      return 7.5625 * t * t;\n    }\n\n    if (t < 2 / 2.75) {\n      return 7.5625 * (t -= 1.5 / 2.75) * t + 0.75;\n    }\n\n    if (t < 2.5 / 2.75) {\n      return 7.5625 * (t -= 2.25 / 2.75) * t + 0.9375;\n    }\n\n    return 7.5625 * (t -= 2.625 / 2.75) * t + 0.984375;\n  },\n  easeInOutBounce: function easeInOutBounce(t) {\n    if (t < 0.5) {\n      return effects.easeInBounce(t * 2) * 0.5;\n    }\n\n    return effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\n  }\n};\nmodule.exports = {\n  effects: effects\n}; // DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.easing.effects instead.\n * @function Chart.helpers.easingEffects\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.easingEffects = effects;","'use strict';\n\nvar _typeof = require(\"/Users/tarex/redq/DASHBOARD/newdashapp/node_modules/@babel/runtime/helpers/typeof\");\n\nvar helpers = require('./helpers.core');\n/**\n * @namespace Chart.helpers.canvas\n */\n\n\nvar exports = module.exports = {\n  /**\n   * Clears the entire canvas associated to the given `chart`.\n   * @param {Chart} chart - The chart for which to clear the canvas.\n   */\n  clear: function clear(chart) {\n    chart.ctx.clearRect(0, 0, chart.width, chart.height);\n  },\n\n  /**\n   * Creates a \"path\" for a rectangle with rounded corners at position (x, y) with a\n   * given size (width, height) and the same `radius` for all corners.\n   * @param {CanvasRenderingContext2D} ctx - The canvas 2D Context.\n   * @param {Number} x - The x axis of the coordinate for the rectangle starting point.\n   * @param {Number} y - The y axis of the coordinate for the rectangle starting point.\n   * @param {Number} width - The rectangle's width.\n   * @param {Number} height - The rectangle's height.\n   * @param {Number} radius - The rounded amount (in pixels) for the four corners.\n   * @todo handle `radius` as top-left, top-right, bottom-right, bottom-left array/object?\n   */\n  roundedRect: function roundedRect(ctx, x, y, width, height, radius) {\n    if (radius) {\n      var rx = Math.min(radius, width / 2);\n      var ry = Math.min(radius, height / 2);\n      ctx.moveTo(x + rx, y);\n      ctx.lineTo(x + width - rx, y);\n      ctx.quadraticCurveTo(x + width, y, x + width, y + ry);\n      ctx.lineTo(x + width, y + height - ry);\n      ctx.quadraticCurveTo(x + width, y + height, x + width - rx, y + height);\n      ctx.lineTo(x + rx, y + height);\n      ctx.quadraticCurveTo(x, y + height, x, y + height - ry);\n      ctx.lineTo(x, y + ry);\n      ctx.quadraticCurveTo(x, y, x + rx, y);\n    } else {\n      ctx.rect(x, y, width, height);\n    }\n  },\n  drawPoint: function drawPoint(ctx, style, radius, x, y) {\n    var type, edgeLength, xOffset, yOffset, height, size;\n\n    if (style && _typeof(style) === 'object') {\n      type = style.toString();\n\n      if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n        ctx.drawImage(style, x - style.width / 2, y - style.height / 2, style.width, style.height);\n        return;\n      }\n    }\n\n    if (isNaN(radius) || radius <= 0) {\n      return;\n    }\n\n    switch (style) {\n      // Default includes circle\n      default:\n        ctx.beginPath();\n        ctx.arc(x, y, radius, 0, Math.PI * 2);\n        ctx.closePath();\n        ctx.fill();\n        break;\n\n      case 'triangle':\n        ctx.beginPath();\n        edgeLength = 3 * radius / Math.sqrt(3);\n        height = edgeLength * Math.sqrt(3) / 2;\n        ctx.moveTo(x - edgeLength / 2, y + height / 3);\n        ctx.lineTo(x + edgeLength / 2, y + height / 3);\n        ctx.lineTo(x, y - 2 * height / 3);\n        ctx.closePath();\n        ctx.fill();\n        break;\n\n      case 'rect':\n        size = 1 / Math.SQRT2 * radius;\n        ctx.beginPath();\n        ctx.fillRect(x - size, y - size, 2 * size, 2 * size);\n        ctx.strokeRect(x - size, y - size, 2 * size, 2 * size);\n        break;\n\n      case 'rectRounded':\n        var offset = radius / Math.SQRT2;\n        var leftX = x - offset;\n        var topY = y - offset;\n        var sideSize = Math.SQRT2 * radius;\n        ctx.beginPath();\n        this.roundedRect(ctx, leftX, topY, sideSize, sideSize, radius / 2);\n        ctx.closePath();\n        ctx.fill();\n        break;\n\n      case 'rectRot':\n        size = 1 / Math.SQRT2 * radius;\n        ctx.beginPath();\n        ctx.moveTo(x - size, y);\n        ctx.lineTo(x, y + size);\n        ctx.lineTo(x + size, y);\n        ctx.lineTo(x, y - size);\n        ctx.closePath();\n        ctx.fill();\n        break;\n\n      case 'cross':\n        ctx.beginPath();\n        ctx.moveTo(x, y + radius);\n        ctx.lineTo(x, y - radius);\n        ctx.moveTo(x - radius, y);\n        ctx.lineTo(x + radius, y);\n        ctx.closePath();\n        break;\n\n      case 'crossRot':\n        ctx.beginPath();\n        xOffset = Math.cos(Math.PI / 4) * radius;\n        yOffset = Math.sin(Math.PI / 4) * radius;\n        ctx.moveTo(x - xOffset, y - yOffset);\n        ctx.lineTo(x + xOffset, y + yOffset);\n        ctx.moveTo(x - xOffset, y + yOffset);\n        ctx.lineTo(x + xOffset, y - yOffset);\n        ctx.closePath();\n        break;\n\n      case 'star':\n        ctx.beginPath();\n        ctx.moveTo(x, y + radius);\n        ctx.lineTo(x, y - radius);\n        ctx.moveTo(x - radius, y);\n        ctx.lineTo(x + radius, y);\n        xOffset = Math.cos(Math.PI / 4) * radius;\n        yOffset = Math.sin(Math.PI / 4) * radius;\n        ctx.moveTo(x - xOffset, y - yOffset);\n        ctx.lineTo(x + xOffset, y + yOffset);\n        ctx.moveTo(x - xOffset, y + yOffset);\n        ctx.lineTo(x + xOffset, y - yOffset);\n        ctx.closePath();\n        break;\n\n      case 'line':\n        ctx.beginPath();\n        ctx.moveTo(x - radius, y);\n        ctx.lineTo(x + radius, y);\n        ctx.closePath();\n        break;\n\n      case 'dash':\n        ctx.beginPath();\n        ctx.moveTo(x, y);\n        ctx.lineTo(x + radius, y);\n        ctx.closePath();\n        break;\n    }\n\n    ctx.stroke();\n  },\n  clipArea: function clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n  },\n  unclipArea: function unclipArea(ctx) {\n    ctx.restore();\n  },\n  lineTo: function lineTo(ctx, previous, target, flip) {\n    if (target.steppedLine) {\n      if (target.steppedLine === 'after' && !flip || target.steppedLine !== 'after' && flip) {\n        ctx.lineTo(previous.x, target.y);\n      } else {\n        ctx.lineTo(target.x, previous.y);\n      }\n\n      ctx.lineTo(target.x, target.y);\n      return;\n    }\n\n    if (!target.tension) {\n      ctx.lineTo(target.x, target.y);\n      return;\n    }\n\n    ctx.bezierCurveTo(flip ? previous.controlPointPreviousX : previous.controlPointNextX, flip ? previous.controlPointPreviousY : previous.controlPointNextY, flip ? target.controlPointNextX : target.controlPointPreviousX, flip ? target.controlPointNextY : target.controlPointPreviousY, target.x, target.y);\n  }\n}; // DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas.clear instead.\n * @namespace Chart.helpers.clear\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.clear = exports.clear;\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas.roundedRect instead.\n * @namespace Chart.helpers.drawRoundedRectangle\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.drawRoundedRectangle = function (ctx) {\n  ctx.beginPath();\n  exports.roundedRect.apply(exports, arguments);\n  ctx.closePath();\n};","'use strict';\n\nvar helpers = require('./helpers.core');\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\n\n\nmodule.exports = {\n  /**\n   * Converts the given line height `value` in pixels for a specific font `size`.\n   * @param {Number|String} value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n   * @param {Number} size - The font size (in pixels) used to resolve relative `value`.\n   * @returns {Number} The effective line height in pixels (size * 1.2 if value is invalid).\n   * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n   * @since 2.7.0\n   */\n  toLineHeight: function toLineHeight(value, size) {\n    var matches = ('' + value).match(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\n\n    if (!matches || matches[1] === 'normal') {\n      return size * 1.2;\n    }\n\n    value = +matches[2];\n\n    switch (matches[3]) {\n      case 'px':\n        return value;\n\n      case '%':\n        value /= 100;\n        break;\n\n      default:\n        break;\n    }\n\n    return size * value;\n  },\n\n  /**\n   * Converts the given value into a padding object with pre-computed width/height.\n   * @param {Number|Object} value - If a number, set the value to all TRBL component,\n   *  else, if and object, use defined properties and sets undefined ones to 0.\n   * @returns {Object} The padding values (top, right, bottom, left, width, height)\n   * @since 2.7.0\n   */\n  toPadding: function toPadding(value) {\n    var t, r, b, l;\n\n    if (helpers.isObject(value)) {\n      t = +value.top || 0;\n      r = +value.right || 0;\n      b = +value.bottom || 0;\n      l = +value.left || 0;\n    } else {\n      t = r = b = l = +value || 0;\n    }\n\n    return {\n      top: t,\n      right: r,\n      bottom: b,\n      left: l,\n      height: t + b,\n      width: l + r\n    };\n  },\n\n  /**\n   * Evaluates the given `inputs` sequentially and returns the first defined value.\n   * @param {Array[]} inputs - An array of values, falling back to the last value.\n   * @param {Object} [context] - If defined and the current value is a function, the value\n   * is called with `context` as first argument and the result becomes the new input.\n   * @param {Number} [index] - If defined and the current value is an array, the value\n   * at `index` become the new input.\n   * @since 2.7.0\n   */\n  resolve: function resolve(inputs, context, index) {\n    var i, ilen, value;\n\n    for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n      value = inputs[i];\n\n      if (value === undefined) {\n        continue;\n      }\n\n      if (context !== undefined && typeof value === 'function') {\n        value = value(context);\n      }\n\n      if (index !== undefined && helpers.isArray(value)) {\n        value = value[index];\n      }\n\n      if (value !== undefined) {\n        return value;\n      }\n    }\n  }\n};","/* global window: false */\n\n/* global document: false */\n'use strict';\n\nvar color = require('chartjs-color');\n\nvar defaults = require('./core.defaults');\n\nvar helpers = require('../helpers/index');\n\nmodule.exports = function (Chart) {\n  // -- Basic js utility methods\n  helpers.configMerge = function ()\n  /* objects ... */\n  {\n    return helpers.merge(helpers.clone(arguments[0]), [].slice.call(arguments, 1), {\n      merger: function merger(key, target, source, options) {\n        var tval = target[key] || {};\n        var sval = source[key];\n\n        if (key === 'scales') {\n          // scale config merging is complex. Add our own function here for that\n          target[key] = helpers.scaleMerge(tval, sval);\n        } else if (key === 'scale') {\n          // used in polar area & radar charts since there is only one scale\n          target[key] = helpers.merge(tval, [Chart.scaleService.getScaleDefaults(sval.type), sval]);\n        } else {\n          helpers._merger(key, target, source, options);\n        }\n      }\n    });\n  };\n\n  helpers.scaleMerge = function ()\n  /* objects ... */\n  {\n    return helpers.merge(helpers.clone(arguments[0]), [].slice.call(arguments, 1), {\n      merger: function merger(key, target, source, options) {\n        if (key === 'xAxes' || key === 'yAxes') {\n          var slen = source[key].length;\n          var i, type, scale;\n\n          if (!target[key]) {\n            target[key] = [];\n          }\n\n          for (i = 0; i < slen; ++i) {\n            scale = source[key][i];\n            type = helpers.valueOrDefault(scale.type, key === 'xAxes' ? 'category' : 'linear');\n\n            if (i >= target[key].length) {\n              target[key].push({});\n            }\n\n            if (!target[key][i].type || scale.type && scale.type !== target[key][i].type) {\n              // new/untyped scale or type changed: let's apply the new defaults\n              // then merge source scale to correctly overwrite the defaults.\n              helpers.merge(target[key][i], [Chart.scaleService.getScaleDefaults(type), scale]);\n            } else {\n              // scales type are the same\n              helpers.merge(target[key][i], scale);\n            }\n          }\n        } else {\n          helpers._merger(key, target, source, options);\n        }\n      }\n    });\n  };\n\n  helpers.where = function (collection, filterCallback) {\n    if (helpers.isArray(collection) && Array.prototype.filter) {\n      return collection.filter(filterCallback);\n    }\n\n    var filtered = [];\n    helpers.each(collection, function (item) {\n      if (filterCallback(item)) {\n        filtered.push(item);\n      }\n    });\n    return filtered;\n  };\n\n  helpers.findIndex = Array.prototype.findIndex ? function (array, callback, scope) {\n    return array.findIndex(callback, scope);\n  } : function (array, callback, scope) {\n    scope = scope === undefined ? array : scope;\n\n    for (var i = 0, ilen = array.length; i < ilen; ++i) {\n      if (callback.call(scope, array[i], i, array)) {\n        return i;\n      }\n    }\n\n    return -1;\n  };\n\n  helpers.findNextWhere = function (arrayToSearch, filterCallback, startIndex) {\n    // Default to start of the array\n    if (helpers.isNullOrUndef(startIndex)) {\n      startIndex = -1;\n    }\n\n    for (var i = startIndex + 1; i < arrayToSearch.length; i++) {\n      var currentItem = arrayToSearch[i];\n\n      if (filterCallback(currentItem)) {\n        return currentItem;\n      }\n    }\n  };\n\n  helpers.findPreviousWhere = function (arrayToSearch, filterCallback, startIndex) {\n    // Default to end of the array\n    if (helpers.isNullOrUndef(startIndex)) {\n      startIndex = arrayToSearch.length;\n    }\n\n    for (var i = startIndex - 1; i >= 0; i--) {\n      var currentItem = arrayToSearch[i];\n\n      if (filterCallback(currentItem)) {\n        return currentItem;\n      }\n    }\n  }; // -- Math methods\n\n\n  helpers.isNumber = function (n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n  };\n\n  helpers.almostEquals = function (x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n  };\n\n  helpers.almostWhole = function (x, epsilon) {\n    var rounded = Math.round(x);\n    return rounded - epsilon < x && rounded + epsilon > x;\n  };\n\n  helpers.max = function (array) {\n    return array.reduce(function (max, value) {\n      if (!isNaN(value)) {\n        return Math.max(max, value);\n      }\n\n      return max;\n    }, Number.NEGATIVE_INFINITY);\n  };\n\n  helpers.min = function (array) {\n    return array.reduce(function (min, value) {\n      if (!isNaN(value)) {\n        return Math.min(min, value);\n      }\n\n      return min;\n    }, Number.POSITIVE_INFINITY);\n  };\n\n  helpers.sign = Math.sign ? function (x) {\n    return Math.sign(x);\n  } : function (x) {\n    x = +x; // convert to a number\n\n    if (x === 0 || isNaN(x)) {\n      return x;\n    }\n\n    return x > 0 ? 1 : -1;\n  };\n  helpers.log10 = Math.log10 ? function (x) {\n    return Math.log10(x);\n  } : function (x) {\n    var exponent = Math.log(x) * Math.LOG10E; // Math.LOG10E = 1 / Math.LN10.\n    // Check for whole powers of 10,\n    // which due to floating point rounding error should be corrected.\n\n    var powerOf10 = Math.round(exponent);\n    var isPowerOf10 = x === Math.pow(10, powerOf10);\n    return isPowerOf10 ? powerOf10 : exponent;\n  };\n\n  helpers.toRadians = function (degrees) {\n    return degrees * (Math.PI / 180);\n  };\n\n  helpers.toDegrees = function (radians) {\n    return radians * (180 / Math.PI);\n  }; // Gets the angle from vertical upright to the point about a centre.\n\n\n  helpers.getAngleFromPoint = function (centrePoint, anglePoint) {\n    var distanceFromXCenter = anglePoint.x - centrePoint.x;\n    var distanceFromYCenter = anglePoint.y - centrePoint.y;\n    var radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    var angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n    if (angle < -0.5 * Math.PI) {\n      angle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n    }\n\n    return {\n      angle: angle,\n      distance: radialDistanceFromCenter\n    };\n  };\n\n  helpers.distanceBetweenPoints = function (pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n  };\n\n  helpers.aliasPixel = function (pixelWidth) {\n    return pixelWidth % 2 === 0 ? 0 : 0.5;\n  };\n\n  helpers.splineCurve = function (firstPoint, middlePoint, afterPoint, t) {\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    // This function must also respect \"skipped\" points\n    var previous = firstPoint.skip ? middlePoint : firstPoint;\n    var current = middlePoint;\n    var next = afterPoint.skip ? middlePoint : afterPoint;\n    var d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\n    var d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\n    var s01 = d01 / (d01 + d12);\n    var s12 = d12 / (d01 + d12); // If all points are the same, s01 & s02 will be inf\n\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    var fa = t * s01; // scaling factor for triangle Ta\n\n    var fb = t * s12;\n    return {\n      previous: {\n        x: current.x - fa * (next.x - previous.x),\n        y: current.y - fa * (next.y - previous.y)\n      },\n      next: {\n        x: current.x + fb * (next.x - previous.x),\n        y: current.y + fb * (next.y - previous.y)\n      }\n    };\n  };\n\n  helpers.EPSILON = Number.EPSILON || 1e-14;\n\n  helpers.splineCurveMonotone = function (points) {\n    // This function calculates Bézier control points in a similar way than |splineCurve|,\n    // but preserves monotonicity of the provided data and ensures no local extremums are added\n    // between the dataset discrete points due to the interpolation.\n    // See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n    var pointsWithTangents = (points || []).map(function (point) {\n      return {\n        model: point._model,\n        deltaK: 0,\n        mK: 0\n      };\n    }); // Calculate slopes (deltaK) and initialize tangents (mK)\n\n    var pointsLen = pointsWithTangents.length;\n    var i, pointBefore, pointCurrent, pointAfter;\n\n    for (i = 0; i < pointsLen; ++i) {\n      pointCurrent = pointsWithTangents[i];\n\n      if (pointCurrent.model.skip) {\n        continue;\n      }\n\n      pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n      pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\n      if (pointAfter && !pointAfter.model.skip) {\n        var slopeDeltaX = pointAfter.model.x - pointCurrent.model.x; // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n\n        pointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0;\n      }\n\n      if (!pointBefore || pointBefore.model.skip) {\n        pointCurrent.mK = pointCurrent.deltaK;\n      } else if (!pointAfter || pointAfter.model.skip) {\n        pointCurrent.mK = pointBefore.deltaK;\n      } else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {\n        pointCurrent.mK = 0;\n      } else {\n        pointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;\n      }\n    } // Adjust tangents to ensure monotonic properties\n\n\n    var alphaK, betaK, tauK, squaredMagnitude;\n\n    for (i = 0; i < pointsLen - 1; ++i) {\n      pointCurrent = pointsWithTangents[i];\n      pointAfter = pointsWithTangents[i + 1];\n\n      if (pointCurrent.model.skip || pointAfter.model.skip) {\n        continue;\n      }\n\n      if (helpers.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {\n        pointCurrent.mK = pointAfter.mK = 0;\n        continue;\n      }\n\n      alphaK = pointCurrent.mK / pointCurrent.deltaK;\n      betaK = pointAfter.mK / pointCurrent.deltaK;\n      squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n\n      if (squaredMagnitude <= 9) {\n        continue;\n      }\n\n      tauK = 3 / Math.sqrt(squaredMagnitude);\n      pointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;\n      pointAfter.mK = betaK * tauK * pointCurrent.deltaK;\n    } // Compute control points\n\n\n    var deltaX;\n\n    for (i = 0; i < pointsLen; ++i) {\n      pointCurrent = pointsWithTangents[i];\n\n      if (pointCurrent.model.skip) {\n        continue;\n      }\n\n      pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n      pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\n      if (pointBefore && !pointBefore.model.skip) {\n        deltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;\n        pointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;\n        pointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;\n      }\n\n      if (pointAfter && !pointAfter.model.skip) {\n        deltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;\n        pointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;\n        pointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;\n      }\n    }\n  };\n\n  helpers.nextItem = function (collection, index, loop) {\n    if (loop) {\n      return index >= collection.length - 1 ? collection[0] : collection[index + 1];\n    }\n\n    return index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];\n  };\n\n  helpers.previousItem = function (collection, index, loop) {\n    if (loop) {\n      return index <= 0 ? collection[collection.length - 1] : collection[index - 1];\n    }\n\n    return index <= 0 ? collection[0] : collection[index - 1];\n  }; // Implementation of the nice number algorithm used in determining where axis labels will go\n\n\n  helpers.niceNum = function (range, round) {\n    var exponent = Math.floor(helpers.log10(range));\n    var fraction = range / Math.pow(10, exponent);\n    var niceFraction;\n\n    if (round) {\n      if (fraction < 1.5) {\n        niceFraction = 1;\n      } else if (fraction < 3) {\n        niceFraction = 2;\n      } else if (fraction < 7) {\n        niceFraction = 5;\n      } else {\n        niceFraction = 10;\n      }\n    } else if (fraction <= 1.0) {\n      niceFraction = 1;\n    } else if (fraction <= 2) {\n      niceFraction = 2;\n    } else if (fraction <= 5) {\n      niceFraction = 5;\n    } else {\n      niceFraction = 10;\n    }\n\n    return niceFraction * Math.pow(10, exponent);\n  }; // Request animation polyfill - http://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\n\n\n  helpers.requestAnimFrame = function () {\n    if (typeof window === 'undefined') {\n      return function (callback) {\n        callback();\n      };\n    }\n\n    return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (callback) {\n      return window.setTimeout(callback, 1000 / 60);\n    };\n  }(); // -- DOM methods\n\n\n  helpers.getRelativePosition = function (evt, chart) {\n    var mouseX, mouseY;\n    var e = evt.originalEvent || evt;\n    var canvas = evt.currentTarget || evt.srcElement;\n    var boundingRect = canvas.getBoundingClientRect();\n    var touches = e.touches;\n\n    if (touches && touches.length > 0) {\n      mouseX = touches[0].clientX;\n      mouseY = touches[0].clientY;\n    } else {\n      mouseX = e.clientX;\n      mouseY = e.clientY;\n    } // Scale mouse coordinates into canvas coordinates\n    // by following the pattern laid out by 'jerryj' in the comments of\n    // http://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/\n\n\n    var paddingLeft = parseFloat(helpers.getStyle(canvas, 'padding-left'));\n    var paddingTop = parseFloat(helpers.getStyle(canvas, 'padding-top'));\n    var paddingRight = parseFloat(helpers.getStyle(canvas, 'padding-right'));\n    var paddingBottom = parseFloat(helpers.getStyle(canvas, 'padding-bottom'));\n    var width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;\n    var height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom; // We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However\n    // the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here\n\n    mouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / width * canvas.width / chart.currentDevicePixelRatio);\n    mouseY = Math.round((mouseY - boundingRect.top - paddingTop) / height * canvas.height / chart.currentDevicePixelRatio);\n    return {\n      x: mouseX,\n      y: mouseY\n    };\n  }; // Private helper function to convert max-width/max-height values that may be percentages into a number\n\n\n  function parseMaxStyle(styleValue, node, parentProperty) {\n    var valueInPixels;\n\n    if (typeof styleValue === 'string') {\n      valueInPixels = parseInt(styleValue, 10);\n\n      if (styleValue.indexOf('%') !== -1) {\n        // percentage * size in dimension\n        valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n      }\n    } else {\n      valueInPixels = styleValue;\n    }\n\n    return valueInPixels;\n  }\n  /**\n   * Returns if the given value contains an effective constraint.\n   * @private\n   */\n\n\n  function isConstrainedValue(value) {\n    return value !== undefined && value !== null && value !== 'none';\n  } // Private helper to get a constraint dimension\n  // @param domNode : the node to check the constraint on\n  // @param maxStyle : the style that defines the maximum for the direction we are using (maxWidth / maxHeight)\n  // @param percentageProperty : property of parent to use when calculating width as a percentage\n  // @see http://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser\n\n\n  function getConstraintDimension(domNode, maxStyle, percentageProperty) {\n    var view = document.defaultView;\n    var parentNode = domNode.parentNode;\n    var constrainedNode = view.getComputedStyle(domNode)[maxStyle];\n    var constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];\n    var hasCNode = isConstrainedValue(constrainedNode);\n    var hasCContainer = isConstrainedValue(constrainedContainer);\n    var infinity = Number.POSITIVE_INFINITY;\n\n    if (hasCNode || hasCContainer) {\n      return Math.min(hasCNode ? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity, hasCContainer ? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);\n    }\n\n    return 'none';\n  } // returns Number or undefined if no constraint\n\n\n  helpers.getConstraintWidth = function (domNode) {\n    return getConstraintDimension(domNode, 'max-width', 'clientWidth');\n  }; // returns Number or undefined if no constraint\n\n\n  helpers.getConstraintHeight = function (domNode) {\n    return getConstraintDimension(domNode, 'max-height', 'clientHeight');\n  };\n\n  helpers.getMaximumWidth = function (domNode) {\n    var container = domNode.parentNode;\n\n    if (!container) {\n      return domNode.clientWidth;\n    }\n\n    var paddingLeft = parseInt(helpers.getStyle(container, 'padding-left'), 10);\n    var paddingRight = parseInt(helpers.getStyle(container, 'padding-right'), 10);\n    var w = container.clientWidth - paddingLeft - paddingRight;\n    var cw = helpers.getConstraintWidth(domNode);\n    return isNaN(cw) ? w : Math.min(w, cw);\n  };\n\n  helpers.getMaximumHeight = function (domNode) {\n    var container = domNode.parentNode;\n\n    if (!container) {\n      return domNode.clientHeight;\n    }\n\n    var paddingTop = parseInt(helpers.getStyle(container, 'padding-top'), 10);\n    var paddingBottom = parseInt(helpers.getStyle(container, 'padding-bottom'), 10);\n    var h = container.clientHeight - paddingTop - paddingBottom;\n    var ch = helpers.getConstraintHeight(domNode);\n    return isNaN(ch) ? h : Math.min(h, ch);\n  };\n\n  helpers.getStyle = function (el, property) {\n    return el.currentStyle ? el.currentStyle[property] : document.defaultView.getComputedStyle(el, null).getPropertyValue(property);\n  };\n\n  helpers.retinaScale = function (chart, forceRatio) {\n    var pixelRatio = chart.currentDevicePixelRatio = forceRatio || window.devicePixelRatio || 1;\n\n    if (pixelRatio === 1) {\n      return;\n    }\n\n    var canvas = chart.canvas;\n    var height = chart.height;\n    var width = chart.width;\n    canvas.height = height * pixelRatio;\n    canvas.width = width * pixelRatio;\n    chart.ctx.scale(pixelRatio, pixelRatio); // If no style has been set on the canvas, the render size is used as display size,\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n    // See https://github.com/chartjs/Chart.js/issues/3575\n\n    if (!canvas.style.height && !canvas.style.width) {\n      canvas.style.height = height + 'px';\n      canvas.style.width = width + 'px';\n    }\n  }; // -- Canvas methods\n\n\n  helpers.fontString = function (pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n  };\n\n  helpers.longestText = function (ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    var data = cache.data = cache.data || {};\n    var gc = cache.garbageCollect = cache.garbageCollect || [];\n\n    if (cache.font !== font) {\n      data = cache.data = {};\n      gc = cache.garbageCollect = [];\n      cache.font = font;\n    }\n\n    ctx.font = font;\n    var longest = 0;\n    helpers.each(arrayOfThings, function (thing) {\n      // Undefined strings and arrays should not be measured\n      if (thing !== undefined && thing !== null && helpers.isArray(thing) !== true) {\n        longest = helpers.measureText(ctx, data, gc, longest, thing);\n      } else if (helpers.isArray(thing)) {\n        // if it is an array lets measure each element\n        // to do maybe simplify this function a bit so we can do this more recursively?\n        helpers.each(thing, function (nestedThing) {\n          // Undefined strings and arrays should not be measured\n          if (nestedThing !== undefined && nestedThing !== null && !helpers.isArray(nestedThing)) {\n            longest = helpers.measureText(ctx, data, gc, longest, nestedThing);\n          }\n        });\n      }\n    });\n    var gcLen = gc.length / 2;\n\n    if (gcLen > arrayOfThings.length) {\n      for (var i = 0; i < gcLen; i++) {\n        delete data[gc[i]];\n      }\n\n      gc.splice(0, gcLen);\n    }\n\n    return longest;\n  };\n\n  helpers.measureText = function (ctx, data, gc, longest, string) {\n    var textWidth = data[string];\n\n    if (!textWidth) {\n      textWidth = data[string] = ctx.measureText(string).width;\n      gc.push(string);\n    }\n\n    if (textWidth > longest) {\n      longest = textWidth;\n    }\n\n    return longest;\n  };\n\n  helpers.numberOfLabelLines = function (arrayOfThings) {\n    var numberOfLines = 1;\n    helpers.each(arrayOfThings, function (thing) {\n      if (helpers.isArray(thing)) {\n        if (thing.length > numberOfLines) {\n          numberOfLines = thing.length;\n        }\n      }\n    });\n    return numberOfLines;\n  };\n\n  helpers.color = !color ? function (value) {\n    console.error('Color.js not found!');\n    return value;\n  } : function (value) {\n    /* global CanvasGradient */\n    if (value instanceof CanvasGradient) {\n      value = defaults.global.defaultColor;\n    }\n\n    return color(value);\n  };\n\n  helpers.getHoverColor = function (colorValue) {\n    /* global CanvasPattern */\n    return colorValue instanceof CanvasPattern ? colorValue : helpers.color(colorValue).saturate(0.5).darken(0.1).rgbString();\n  };\n};","var conversions = require(\"./conversions\");\n\nvar convert = function convert() {\n  return new Converter();\n};\n\nfor (var func in conversions) {\n  // export Raw versions\n  convert[func + \"Raw\"] = function (func) {\n    // accept array or plain args\n    return function (arg) {\n      if (typeof arg == \"number\") arg = Array.prototype.slice.call(arguments);\n      return conversions[func](arg);\n    };\n  }(func);\n\n  var pair = /(\\w+)2(\\w+)/.exec(func),\n      from = pair[1],\n      to = pair[2]; // export rgb2hsl and [\"rgb\"][\"hsl\"]\n\n  convert[from] = convert[from] || {};\n\n  convert[from][to] = convert[func] = function (func) {\n    return function (arg) {\n      if (typeof arg == \"number\") arg = Array.prototype.slice.call(arguments);\n      var val = conversions[func](arg);\n      if (typeof val == \"string\" || val === undefined) return val; // keyword\n\n      for (var i = 0; i < val.length; i++) {\n        val[i] = Math.round(val[i]);\n      }\n\n      return val;\n    };\n  }(func);\n}\n/* Converter does lazy conversion and caching */\n\n\nvar Converter = function Converter() {\n  this.convs = {};\n};\n/* Either get the values for a space or\n  set the values for a space, depending on args */\n\n\nConverter.prototype.routeSpace = function (space, args) {\n  var values = args[0];\n\n  if (values === undefined) {\n    // color.rgb()\n    return this.getValues(space);\n  } // color.rgb(10, 10, 10)\n\n\n  if (typeof values == \"number\") {\n    values = Array.prototype.slice.call(args);\n  }\n\n  return this.setValues(space, values);\n};\n/* Set the values for a space, invalidating cache */\n\n\nConverter.prototype.setValues = function (space, values) {\n  this.space = space;\n  this.convs = {};\n  this.convs[space] = values;\n  return this;\n};\n/* Get the values for a space. If there's already\n  a conversion for the space, fetch it, otherwise\n  compute it */\n\n\nConverter.prototype.getValues = function (space) {\n  var vals = this.convs[space];\n\n  if (!vals) {\n    var fspace = this.space,\n        from = this.convs[fspace];\n    vals = convert[fspace][space](from);\n    this.convs[space] = vals;\n  }\n\n  return vals;\n};\n\n[\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function (space) {\n  Converter.prototype[space] = function (vals) {\n    return this.routeSpace(space, arguments);\n  };\n});\nmodule.exports = convert;","/* MIT license */\nmodule.exports = {\n  rgb2hsl: rgb2hsl,\n  rgb2hsv: rgb2hsv,\n  rgb2hwb: rgb2hwb,\n  rgb2cmyk: rgb2cmyk,\n  rgb2keyword: rgb2keyword,\n  rgb2xyz: rgb2xyz,\n  rgb2lab: rgb2lab,\n  rgb2lch: rgb2lch,\n  hsl2rgb: hsl2rgb,\n  hsl2hsv: hsl2hsv,\n  hsl2hwb: hsl2hwb,\n  hsl2cmyk: hsl2cmyk,\n  hsl2keyword: hsl2keyword,\n  hsv2rgb: hsv2rgb,\n  hsv2hsl: hsv2hsl,\n  hsv2hwb: hsv2hwb,\n  hsv2cmyk: hsv2cmyk,\n  hsv2keyword: hsv2keyword,\n  hwb2rgb: hwb2rgb,\n  hwb2hsl: hwb2hsl,\n  hwb2hsv: hwb2hsv,\n  hwb2cmyk: hwb2cmyk,\n  hwb2keyword: hwb2keyword,\n  cmyk2rgb: cmyk2rgb,\n  cmyk2hsl: cmyk2hsl,\n  cmyk2hsv: cmyk2hsv,\n  cmyk2hwb: cmyk2hwb,\n  cmyk2keyword: cmyk2keyword,\n  keyword2rgb: keyword2rgb,\n  keyword2hsl: keyword2hsl,\n  keyword2hsv: keyword2hsv,\n  keyword2hwb: keyword2hwb,\n  keyword2cmyk: keyword2cmyk,\n  keyword2lab: keyword2lab,\n  keyword2xyz: keyword2xyz,\n  xyz2rgb: xyz2rgb,\n  xyz2lab: xyz2lab,\n  xyz2lch: xyz2lch,\n  lab2xyz: lab2xyz,\n  lab2rgb: lab2rgb,\n  lab2lch: lab2lch,\n  lch2lab: lch2lab,\n  lch2xyz: lch2xyz,\n  lch2rgb: lch2rgb\n};\n\nfunction rgb2hsl(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h,\n      s,\n      l;\n  if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;\n  h = Math.min(h * 60, 360);\n  if (h < 0) h += 360;\n  l = (min + max) / 2;\n  if (max == min) s = 0;else if (l <= 0.5) s = delta / (max + min);else s = delta / (2 - max - min);\n  return [h, s * 100, l * 100];\n}\n\nfunction rgb2hsv(rgb) {\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h,\n      s,\n      v;\n  if (max == 0) s = 0;else s = delta / max * 1000 / 10;\n  if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;\n  h = Math.min(h * 60, 360);\n  if (h < 0) h += 360;\n  v = max / 255 * 1000 / 10;\n  return [h, s, v];\n}\n\nfunction rgb2hwb(rgb) {\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      h = rgb2hsl(rgb)[0],\n      w = 1 / 255 * Math.min(r, Math.min(g, b)),\n      b = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n  return [h, w * 100, b * 100];\n}\n\nfunction rgb2cmyk(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255,\n      c,\n      m,\n      y,\n      k;\n  k = Math.min(1 - r, 1 - g, 1 - b);\n  c = (1 - r - k) / (1 - k) || 0;\n  m = (1 - g - k) / (1 - k) || 0;\n  y = (1 - b - k) / (1 - k) || 0;\n  return [c * 100, m * 100, y * 100, k * 100];\n}\n\nfunction rgb2keyword(rgb) {\n  return reverseKeywords[JSON.stringify(rgb)];\n}\n\nfunction rgb2xyz(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255; // assume sRGB\n\n  r = r > 0.04045 ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92;\n  g = g > 0.04045 ? Math.pow((g + 0.055) / 1.055, 2.4) : g / 12.92;\n  b = b > 0.04045 ? Math.pow((b + 0.055) / 1.055, 2.4) : b / 12.92;\n  var x = r * 0.4124 + g * 0.3576 + b * 0.1805;\n  var y = r * 0.2126 + g * 0.7152 + b * 0.0722;\n  var z = r * 0.0193 + g * 0.1192 + b * 0.9505;\n  return [x * 100, y * 100, z * 100];\n}\n\nfunction rgb2lab(rgb) {\n  var xyz = rgb2xyz(rgb),\n      x = xyz[0],\n      y = xyz[1],\n      z = xyz[2],\n      l,\n      a,\n      b;\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n  x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n  y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n  z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n  l = 116 * y - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n  return [l, a, b];\n}\n\nfunction rgb2lch(args) {\n  return lab2lch(rgb2lab(args));\n}\n\nfunction hsl2rgb(hsl) {\n  var h = hsl[0] / 360,\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      t1,\n      t2,\n      t3,\n      rgb,\n      val;\n\n  if (s == 0) {\n    val = l * 255;\n    return [val, val, val];\n  }\n\n  if (l < 0.5) t2 = l * (1 + s);else t2 = l + s - l * s;\n  t1 = 2 * l - t2;\n  rgb = [0, 0, 0];\n\n  for (var i = 0; i < 3; i++) {\n    t3 = h + 1 / 3 * -(i - 1);\n    t3 < 0 && t3++;\n    t3 > 1 && t3--;\n    if (6 * t3 < 1) val = t1 + (t2 - t1) * 6 * t3;else if (2 * t3 < 1) val = t2;else if (3 * t3 < 2) val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;else val = t1;\n    rgb[i] = val * 255;\n  }\n\n  return rgb;\n}\n\nfunction hsl2hsv(hsl) {\n  var h = hsl[0],\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      sv,\n      v;\n\n  if (l === 0) {\n    // no need to do calc on black\n    // also avoids divide by 0 error\n    return [0, 0, 0];\n  }\n\n  l *= 2;\n  s *= l <= 1 ? l : 2 - l;\n  v = (l + s) / 2;\n  sv = 2 * s / (l + s);\n  return [h, sv * 100, v * 100];\n}\n\nfunction hsl2hwb(args) {\n  return rgb2hwb(hsl2rgb(args));\n}\n\nfunction hsl2cmyk(args) {\n  return rgb2cmyk(hsl2rgb(args));\n}\n\nfunction hsl2keyword(args) {\n  return rgb2keyword(hsl2rgb(args));\n}\n\nfunction hsv2rgb(hsv) {\n  var h = hsv[0] / 60,\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      hi = Math.floor(h) % 6;\n  var f = h - Math.floor(h),\n      p = 255 * v * (1 - s),\n      q = 255 * v * (1 - s * f),\n      t = 255 * v * (1 - s * (1 - f)),\n      v = 255 * v;\n\n  switch (hi) {\n    case 0:\n      return [v, t, p];\n\n    case 1:\n      return [q, v, p];\n\n    case 2:\n      return [p, v, t];\n\n    case 3:\n      return [p, q, v];\n\n    case 4:\n      return [t, p, v];\n\n    case 5:\n      return [v, p, q];\n  }\n}\n\nfunction hsv2hsl(hsv) {\n  var h = hsv[0],\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      sl,\n      l;\n  l = (2 - s) * v;\n  sl = s * v;\n  sl /= l <= 1 ? l : 2 - l;\n  sl = sl || 0;\n  l /= 2;\n  return [h, sl * 100, l * 100];\n}\n\nfunction hsv2hwb(args) {\n  return rgb2hwb(hsv2rgb(args));\n}\n\nfunction hsv2cmyk(args) {\n  return rgb2cmyk(hsv2rgb(args));\n}\n\nfunction hsv2keyword(args) {\n  return rgb2keyword(hsv2rgb(args));\n} // http://dev.w3.org/csswg/css-color/#hwb-to-rgb\n\n\nfunction hwb2rgb(hwb) {\n  var h = hwb[0] / 360,\n      wh = hwb[1] / 100,\n      bl = hwb[2] / 100,\n      ratio = wh + bl,\n      i,\n      v,\n      f,\n      n; // wh + bl cant be > 1\n\n  if (ratio > 1) {\n    wh /= ratio;\n    bl /= ratio;\n  }\n\n  i = Math.floor(6 * h);\n  v = 1 - bl;\n  f = 6 * h - i;\n\n  if ((i & 0x01) != 0) {\n    f = 1 - f;\n  }\n\n  n = wh + f * (v - wh); // linear interpolation\n\n  switch (i) {\n    default:\n    case 6:\n    case 0:\n      r = v;\n      g = n;\n      b = wh;\n      break;\n\n    case 1:\n      r = n;\n      g = v;\n      b = wh;\n      break;\n\n    case 2:\n      r = wh;\n      g = v;\n      b = n;\n      break;\n\n    case 3:\n      r = wh;\n      g = n;\n      b = v;\n      break;\n\n    case 4:\n      r = n;\n      g = wh;\n      b = v;\n      break;\n\n    case 5:\n      r = v;\n      g = wh;\n      b = n;\n      break;\n  }\n\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction hwb2hsl(args) {\n  return rgb2hsl(hwb2rgb(args));\n}\n\nfunction hwb2hsv(args) {\n  return rgb2hsv(hwb2rgb(args));\n}\n\nfunction hwb2cmyk(args) {\n  return rgb2cmyk(hwb2rgb(args));\n}\n\nfunction hwb2keyword(args) {\n  return rgb2keyword(hwb2rgb(args));\n}\n\nfunction cmyk2rgb(cmyk) {\n  var c = cmyk[0] / 100,\n      m = cmyk[1] / 100,\n      y = cmyk[2] / 100,\n      k = cmyk[3] / 100,\n      r,\n      g,\n      b;\n  r = 1 - Math.min(1, c * (1 - k) + k);\n  g = 1 - Math.min(1, m * (1 - k) + k);\n  b = 1 - Math.min(1, y * (1 - k) + k);\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction cmyk2hsl(args) {\n  return rgb2hsl(cmyk2rgb(args));\n}\n\nfunction cmyk2hsv(args) {\n  return rgb2hsv(cmyk2rgb(args));\n}\n\nfunction cmyk2hwb(args) {\n  return rgb2hwb(cmyk2rgb(args));\n}\n\nfunction cmyk2keyword(args) {\n  return rgb2keyword(cmyk2rgb(args));\n}\n\nfunction xyz2rgb(xyz) {\n  var x = xyz[0] / 100,\n      y = xyz[1] / 100,\n      z = xyz[2] / 100,\n      r,\n      g,\n      b;\n  r = x * 3.2406 + y * -1.5372 + z * -0.4986;\n  g = x * -0.9689 + y * 1.8758 + z * 0.0415;\n  b = x * 0.0557 + y * -0.2040 + z * 1.0570; // assume sRGB\n\n  r = r > 0.0031308 ? 1.055 * Math.pow(r, 1.0 / 2.4) - 0.055 : r = r * 12.92;\n  g = g > 0.0031308 ? 1.055 * Math.pow(g, 1.0 / 2.4) - 0.055 : g = g * 12.92;\n  b = b > 0.0031308 ? 1.055 * Math.pow(b, 1.0 / 2.4) - 0.055 : b = b * 12.92;\n  r = Math.min(Math.max(0, r), 1);\n  g = Math.min(Math.max(0, g), 1);\n  b = Math.min(Math.max(0, b), 1);\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction xyz2lab(xyz) {\n  var x = xyz[0],\n      y = xyz[1],\n      z = xyz[2],\n      l,\n      a,\n      b;\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n  x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n  y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n  z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n  l = 116 * y - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n  return [l, a, b];\n}\n\nfunction xyz2lch(args) {\n  return lab2lch(xyz2lab(args));\n}\n\nfunction lab2xyz(lab) {\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      x,\n      y,\n      z,\n      y2;\n\n  if (l <= 8) {\n    y = l * 100 / 903.3;\n    y2 = 7.787 * (y / 100) + 16 / 116;\n  } else {\n    y = 100 * Math.pow((l + 16) / 116, 3);\n    y2 = Math.pow(y / 100, 1 / 3);\n  }\n\n  x = x / 95.047 <= 0.008856 ? x = 95.047 * (a / 500 + y2 - 16 / 116) / 7.787 : 95.047 * Math.pow(a / 500 + y2, 3);\n  z = z / 108.883 <= 0.008859 ? z = 108.883 * (y2 - b / 200 - 16 / 116) / 7.787 : 108.883 * Math.pow(y2 - b / 200, 3);\n  return [x, y, z];\n}\n\nfunction lab2lch(lab) {\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      hr,\n      h,\n      c;\n  hr = Math.atan2(b, a);\n  h = hr * 360 / 2 / Math.PI;\n\n  if (h < 0) {\n    h += 360;\n  }\n\n  c = Math.sqrt(a * a + b * b);\n  return [l, c, h];\n}\n\nfunction lab2rgb(args) {\n  return xyz2rgb(lab2xyz(args));\n}\n\nfunction lch2lab(lch) {\n  var l = lch[0],\n      c = lch[1],\n      h = lch[2],\n      a,\n      b,\n      hr;\n  hr = h / 360 * 2 * Math.PI;\n  a = c * Math.cos(hr);\n  b = c * Math.sin(hr);\n  return [l, a, b];\n}\n\nfunction lch2xyz(args) {\n  return lab2xyz(lch2lab(args));\n}\n\nfunction lch2rgb(args) {\n  return lab2rgb(lch2lab(args));\n}\n\nfunction keyword2rgb(keyword) {\n  return cssKeywords[keyword];\n}\n\nfunction keyword2hsl(args) {\n  return rgb2hsl(keyword2rgb(args));\n}\n\nfunction keyword2hsv(args) {\n  return rgb2hsv(keyword2rgb(args));\n}\n\nfunction keyword2hwb(args) {\n  return rgb2hwb(keyword2rgb(args));\n}\n\nfunction keyword2cmyk(args) {\n  return rgb2cmyk(keyword2rgb(args));\n}\n\nfunction keyword2lab(args) {\n  return rgb2lab(keyword2rgb(args));\n}\n\nfunction keyword2xyz(args) {\n  return rgb2xyz(keyword2rgb(args));\n}\n\nvar cssKeywords = {\n  aliceblue: [240, 248, 255],\n  antiquewhite: [250, 235, 215],\n  aqua: [0, 255, 255],\n  aquamarine: [127, 255, 212],\n  azure: [240, 255, 255],\n  beige: [245, 245, 220],\n  bisque: [255, 228, 196],\n  black: [0, 0, 0],\n  blanchedalmond: [255, 235, 205],\n  blue: [0, 0, 255],\n  blueviolet: [138, 43, 226],\n  brown: [165, 42, 42],\n  burlywood: [222, 184, 135],\n  cadetblue: [95, 158, 160],\n  chartreuse: [127, 255, 0],\n  chocolate: [210, 105, 30],\n  coral: [255, 127, 80],\n  cornflowerblue: [100, 149, 237],\n  cornsilk: [255, 248, 220],\n  crimson: [220, 20, 60],\n  cyan: [0, 255, 255],\n  darkblue: [0, 0, 139],\n  darkcyan: [0, 139, 139],\n  darkgoldenrod: [184, 134, 11],\n  darkgray: [169, 169, 169],\n  darkgreen: [0, 100, 0],\n  darkgrey: [169, 169, 169],\n  darkkhaki: [189, 183, 107],\n  darkmagenta: [139, 0, 139],\n  darkolivegreen: [85, 107, 47],\n  darkorange: [255, 140, 0],\n  darkorchid: [153, 50, 204],\n  darkred: [139, 0, 0],\n  darksalmon: [233, 150, 122],\n  darkseagreen: [143, 188, 143],\n  darkslateblue: [72, 61, 139],\n  darkslategray: [47, 79, 79],\n  darkslategrey: [47, 79, 79],\n  darkturquoise: [0, 206, 209],\n  darkviolet: [148, 0, 211],\n  deeppink: [255, 20, 147],\n  deepskyblue: [0, 191, 255],\n  dimgray: [105, 105, 105],\n  dimgrey: [105, 105, 105],\n  dodgerblue: [30, 144, 255],\n  firebrick: [178, 34, 34],\n  floralwhite: [255, 250, 240],\n  forestgreen: [34, 139, 34],\n  fuchsia: [255, 0, 255],\n  gainsboro: [220, 220, 220],\n  ghostwhite: [248, 248, 255],\n  gold: [255, 215, 0],\n  goldenrod: [218, 165, 32],\n  gray: [128, 128, 128],\n  green: [0, 128, 0],\n  greenyellow: [173, 255, 47],\n  grey: [128, 128, 128],\n  honeydew: [240, 255, 240],\n  hotpink: [255, 105, 180],\n  indianred: [205, 92, 92],\n  indigo: [75, 0, 130],\n  ivory: [255, 255, 240],\n  khaki: [240, 230, 140],\n  lavender: [230, 230, 250],\n  lavenderblush: [255, 240, 245],\n  lawngreen: [124, 252, 0],\n  lemonchiffon: [255, 250, 205],\n  lightblue: [173, 216, 230],\n  lightcoral: [240, 128, 128],\n  lightcyan: [224, 255, 255],\n  lightgoldenrodyellow: [250, 250, 210],\n  lightgray: [211, 211, 211],\n  lightgreen: [144, 238, 144],\n  lightgrey: [211, 211, 211],\n  lightpink: [255, 182, 193],\n  lightsalmon: [255, 160, 122],\n  lightseagreen: [32, 178, 170],\n  lightskyblue: [135, 206, 250],\n  lightslategray: [119, 136, 153],\n  lightslategrey: [119, 136, 153],\n  lightsteelblue: [176, 196, 222],\n  lightyellow: [255, 255, 224],\n  lime: [0, 255, 0],\n  limegreen: [50, 205, 50],\n  linen: [250, 240, 230],\n  magenta: [255, 0, 255],\n  maroon: [128, 0, 0],\n  mediumaquamarine: [102, 205, 170],\n  mediumblue: [0, 0, 205],\n  mediumorchid: [186, 85, 211],\n  mediumpurple: [147, 112, 219],\n  mediumseagreen: [60, 179, 113],\n  mediumslateblue: [123, 104, 238],\n  mediumspringgreen: [0, 250, 154],\n  mediumturquoise: [72, 209, 204],\n  mediumvioletred: [199, 21, 133],\n  midnightblue: [25, 25, 112],\n  mintcream: [245, 255, 250],\n  mistyrose: [255, 228, 225],\n  moccasin: [255, 228, 181],\n  navajowhite: [255, 222, 173],\n  navy: [0, 0, 128],\n  oldlace: [253, 245, 230],\n  olive: [128, 128, 0],\n  olivedrab: [107, 142, 35],\n  orange: [255, 165, 0],\n  orangered: [255, 69, 0],\n  orchid: [218, 112, 214],\n  palegoldenrod: [238, 232, 170],\n  palegreen: [152, 251, 152],\n  paleturquoise: [175, 238, 238],\n  palevioletred: [219, 112, 147],\n  papayawhip: [255, 239, 213],\n  peachpuff: [255, 218, 185],\n  peru: [205, 133, 63],\n  pink: [255, 192, 203],\n  plum: [221, 160, 221],\n  powderblue: [176, 224, 230],\n  purple: [128, 0, 128],\n  rebeccapurple: [102, 51, 153],\n  red: [255, 0, 0],\n  rosybrown: [188, 143, 143],\n  royalblue: [65, 105, 225],\n  saddlebrown: [139, 69, 19],\n  salmon: [250, 128, 114],\n  sandybrown: [244, 164, 96],\n  seagreen: [46, 139, 87],\n  seashell: [255, 245, 238],\n  sienna: [160, 82, 45],\n  silver: [192, 192, 192],\n  skyblue: [135, 206, 235],\n  slateblue: [106, 90, 205],\n  slategray: [112, 128, 144],\n  slategrey: [112, 128, 144],\n  snow: [255, 250, 250],\n  springgreen: [0, 255, 127],\n  steelblue: [70, 130, 180],\n  tan: [210, 180, 140],\n  teal: [0, 128, 128],\n  thistle: [216, 191, 216],\n  tomato: [255, 99, 71],\n  turquoise: [64, 224, 208],\n  violet: [238, 130, 238],\n  wheat: [245, 222, 179],\n  white: [255, 255, 255],\n  whitesmoke: [245, 245, 245],\n  yellow: [255, 255, 0],\n  yellowgreen: [154, 205, 50]\n};\nvar reverseKeywords = {};\n\nfor (var key in cssKeywords) {\n  reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\n}","/* MIT license */\nvar colorNames = require('color-name');\n\nmodule.exports = {\n  getRgba: getRgba,\n  getHsla: getHsla,\n  getRgb: getRgb,\n  getHsl: getHsl,\n  getHwb: getHwb,\n  getAlpha: getAlpha,\n  hexString: hexString,\n  rgbString: rgbString,\n  rgbaString: rgbaString,\n  percentString: percentString,\n  percentaString: percentaString,\n  hslString: hslString,\n  hslaString: hslaString,\n  hwbString: hwbString,\n  keyword: keyword\n};\n\nfunction getRgba(string) {\n  if (!string) {\n    return;\n  }\n\n  var abbr = /^#([a-fA-F0-9]{3})$/i,\n      hex = /^#([a-fA-F0-9]{6})$/i,\n      rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n      per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n      keyword = /(\\w+)/;\n  var rgb = [0, 0, 0],\n      a = 1,\n      match = string.match(abbr);\n\n  if (match) {\n    match = match[1];\n\n    for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = parseInt(match[i] + match[i], 16);\n    }\n  } else if (match = string.match(hex)) {\n    match = match[1];\n\n    for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\n    }\n  } else if (match = string.match(rgba)) {\n    for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = parseInt(match[i + 1]);\n    }\n\n    a = parseFloat(match[4]);\n  } else if (match = string.match(per)) {\n    for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n    }\n\n    a = parseFloat(match[4]);\n  } else if (match = string.match(keyword)) {\n    if (match[1] == \"transparent\") {\n      return [0, 0, 0, 0];\n    }\n\n    rgb = colorNames[match[1]];\n\n    if (!rgb) {\n      return;\n    }\n  }\n\n  for (var i = 0; i < rgb.length; i++) {\n    rgb[i] = scale(rgb[i], 0, 255);\n  }\n\n  if (!a && a != 0) {\n    a = 1;\n  } else {\n    a = scale(a, 0, 1);\n  }\n\n  rgb[3] = a;\n  return rgb;\n}\n\nfunction getHsla(string) {\n  if (!string) {\n    return;\n  }\n\n  var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n  var match = string.match(hsl);\n\n  if (match) {\n    var alpha = parseFloat(match[4]);\n    var h = scale(parseInt(match[1]), 0, 360),\n        s = scale(parseFloat(match[2]), 0, 100),\n        l = scale(parseFloat(match[3]), 0, 100),\n        a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n    return [h, s, l, a];\n  }\n}\n\nfunction getHwb(string) {\n  if (!string) {\n    return;\n  }\n\n  var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n  var match = string.match(hwb);\n\n  if (match) {\n    var alpha = parseFloat(match[4]);\n    var h = scale(parseInt(match[1]), 0, 360),\n        w = scale(parseFloat(match[2]), 0, 100),\n        b = scale(parseFloat(match[3]), 0, 100),\n        a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n    return [h, w, b, a];\n  }\n}\n\nfunction getRgb(string) {\n  var rgba = getRgba(string);\n  return rgba && rgba.slice(0, 3);\n}\n\nfunction getHsl(string) {\n  var hsla = getHsla(string);\n  return hsla && hsla.slice(0, 3);\n}\n\nfunction getAlpha(string) {\n  var vals = getRgba(string);\n\n  if (vals) {\n    return vals[3];\n  } else if (vals = getHsla(string)) {\n    return vals[3];\n  } else if (vals = getHwb(string)) {\n    return vals[3];\n  }\n} // generators\n\n\nfunction hexString(rgb) {\n  return \"#\" + hexDouble(rgb[0]) + hexDouble(rgb[1]) + hexDouble(rgb[2]);\n}\n\nfunction rgbString(rgba, alpha) {\n  if (alpha < 1 || rgba[3] && rgba[3] < 1) {\n    return rgbaString(rgba, alpha);\n  }\n\n  return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\n}\n\nfunction rgbaString(rgba, alpha) {\n  if (alpha === undefined) {\n    alpha = rgba[3] !== undefined ? rgba[3] : 1;\n  }\n\n  return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \", \" + alpha + \")\";\n}\n\nfunction percentString(rgba, alpha) {\n  if (alpha < 1 || rgba[3] && rgba[3] < 1) {\n    return percentaString(rgba, alpha);\n  }\n\n  var r = Math.round(rgba[0] / 255 * 100),\n      g = Math.round(rgba[1] / 255 * 100),\n      b = Math.round(rgba[2] / 255 * 100);\n  return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\n}\n\nfunction percentaString(rgba, alpha) {\n  var r = Math.round(rgba[0] / 255 * 100),\n      g = Math.round(rgba[1] / 255 * 100),\n      b = Math.round(rgba[2] / 255 * 100);\n  return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\n}\n\nfunction hslString(hsla, alpha) {\n  if (alpha < 1 || hsla[3] && hsla[3] < 1) {\n    return hslaString(hsla, alpha);\n  }\n\n  return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\n}\n\nfunction hslaString(hsla, alpha) {\n  if (alpha === undefined) {\n    alpha = hsla[3] !== undefined ? hsla[3] : 1;\n  }\n\n  return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \" + alpha + \")\";\n} // hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n// (hwb have alpha optional & 1 is default value)\n\n\nfunction hwbString(hwb, alpha) {\n  if (alpha === undefined) {\n    alpha = hwb[3] !== undefined ? hwb[3] : 1;\n  }\n\n  return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\" + (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\n}\n\nfunction keyword(rgb) {\n  return reverseNames[rgb.slice(0, 3)];\n} // helpers\n\n\nfunction scale(num, min, max) {\n  return Math.min(Math.max(min, num), max);\n}\n\nfunction hexDouble(num) {\n  var str = num.toString(16).toUpperCase();\n  return str.length < 2 ? \"0\" + str : str;\n} //create a list of reverse color names\n\n\nvar reverseNames = {};\n\nfor (var name in colorNames) {\n  reverseNames[colorNames[name]] = name;\n}","'use strict';\n\nmodule.exports = {\n  \"aliceblue\": [240, 248, 255],\n  \"antiquewhite\": [250, 235, 215],\n  \"aqua\": [0, 255, 255],\n  \"aquamarine\": [127, 255, 212],\n  \"azure\": [240, 255, 255],\n  \"beige\": [245, 245, 220],\n  \"bisque\": [255, 228, 196],\n  \"black\": [0, 0, 0],\n  \"blanchedalmond\": [255, 235, 205],\n  \"blue\": [0, 0, 255],\n  \"blueviolet\": [138, 43, 226],\n  \"brown\": [165, 42, 42],\n  \"burlywood\": [222, 184, 135],\n  \"cadetblue\": [95, 158, 160],\n  \"chartreuse\": [127, 255, 0],\n  \"chocolate\": [210, 105, 30],\n  \"coral\": [255, 127, 80],\n  \"cornflowerblue\": [100, 149, 237],\n  \"cornsilk\": [255, 248, 220],\n  \"crimson\": [220, 20, 60],\n  \"cyan\": [0, 255, 255],\n  \"darkblue\": [0, 0, 139],\n  \"darkcyan\": [0, 139, 139],\n  \"darkgoldenrod\": [184, 134, 11],\n  \"darkgray\": [169, 169, 169],\n  \"darkgreen\": [0, 100, 0],\n  \"darkgrey\": [169, 169, 169],\n  \"darkkhaki\": [189, 183, 107],\n  \"darkmagenta\": [139, 0, 139],\n  \"darkolivegreen\": [85, 107, 47],\n  \"darkorange\": [255, 140, 0],\n  \"darkorchid\": [153, 50, 204],\n  \"darkred\": [139, 0, 0],\n  \"darksalmon\": [233, 150, 122],\n  \"darkseagreen\": [143, 188, 143],\n  \"darkslateblue\": [72, 61, 139],\n  \"darkslategray\": [47, 79, 79],\n  \"darkslategrey\": [47, 79, 79],\n  \"darkturquoise\": [0, 206, 209],\n  \"darkviolet\": [148, 0, 211],\n  \"deeppink\": [255, 20, 147],\n  \"deepskyblue\": [0, 191, 255],\n  \"dimgray\": [105, 105, 105],\n  \"dimgrey\": [105, 105, 105],\n  \"dodgerblue\": [30, 144, 255],\n  \"firebrick\": [178, 34, 34],\n  \"floralwhite\": [255, 250, 240],\n  \"forestgreen\": [34, 139, 34],\n  \"fuchsia\": [255, 0, 255],\n  \"gainsboro\": [220, 220, 220],\n  \"ghostwhite\": [248, 248, 255],\n  \"gold\": [255, 215, 0],\n  \"goldenrod\": [218, 165, 32],\n  \"gray\": [128, 128, 128],\n  \"green\": [0, 128, 0],\n  \"greenyellow\": [173, 255, 47],\n  \"grey\": [128, 128, 128],\n  \"honeydew\": [240, 255, 240],\n  \"hotpink\": [255, 105, 180],\n  \"indianred\": [205, 92, 92],\n  \"indigo\": [75, 0, 130],\n  \"ivory\": [255, 255, 240],\n  \"khaki\": [240, 230, 140],\n  \"lavender\": [230, 230, 250],\n  \"lavenderblush\": [255, 240, 245],\n  \"lawngreen\": [124, 252, 0],\n  \"lemonchiffon\": [255, 250, 205],\n  \"lightblue\": [173, 216, 230],\n  \"lightcoral\": [240, 128, 128],\n  \"lightcyan\": [224, 255, 255],\n  \"lightgoldenrodyellow\": [250, 250, 210],\n  \"lightgray\": [211, 211, 211],\n  \"lightgreen\": [144, 238, 144],\n  \"lightgrey\": [211, 211, 211],\n  \"lightpink\": [255, 182, 193],\n  \"lightsalmon\": [255, 160, 122],\n  \"lightseagreen\": [32, 178, 170],\n  \"lightskyblue\": [135, 206, 250],\n  \"lightslategray\": [119, 136, 153],\n  \"lightslategrey\": [119, 136, 153],\n  \"lightsteelblue\": [176, 196, 222],\n  \"lightyellow\": [255, 255, 224],\n  \"lime\": [0, 255, 0],\n  \"limegreen\": [50, 205, 50],\n  \"linen\": [250, 240, 230],\n  \"magenta\": [255, 0, 255],\n  \"maroon\": [128, 0, 0],\n  \"mediumaquamarine\": [102, 205, 170],\n  \"mediumblue\": [0, 0, 205],\n  \"mediumorchid\": [186, 85, 211],\n  \"mediumpurple\": [147, 112, 219],\n  \"mediumseagreen\": [60, 179, 113],\n  \"mediumslateblue\": [123, 104, 238],\n  \"mediumspringgreen\": [0, 250, 154],\n  \"mediumturquoise\": [72, 209, 204],\n  \"mediumvioletred\": [199, 21, 133],\n  \"midnightblue\": [25, 25, 112],\n  \"mintcream\": [245, 255, 250],\n  \"mistyrose\": [255, 228, 225],\n  \"moccasin\": [255, 228, 181],\n  \"navajowhite\": [255, 222, 173],\n  \"navy\": [0, 0, 128],\n  \"oldlace\": [253, 245, 230],\n  \"olive\": [128, 128, 0],\n  \"olivedrab\": [107, 142, 35],\n  \"orange\": [255, 165, 0],\n  \"orangered\": [255, 69, 0],\n  \"orchid\": [218, 112, 214],\n  \"palegoldenrod\": [238, 232, 170],\n  \"palegreen\": [152, 251, 152],\n  \"paleturquoise\": [175, 238, 238],\n  \"palevioletred\": [219, 112, 147],\n  \"papayawhip\": [255, 239, 213],\n  \"peachpuff\": [255, 218, 185],\n  \"peru\": [205, 133, 63],\n  \"pink\": [255, 192, 203],\n  \"plum\": [221, 160, 221],\n  \"powderblue\": [176, 224, 230],\n  \"purple\": [128, 0, 128],\n  \"rebeccapurple\": [102, 51, 153],\n  \"red\": [255, 0, 0],\n  \"rosybrown\": [188, 143, 143],\n  \"royalblue\": [65, 105, 225],\n  \"saddlebrown\": [139, 69, 19],\n  \"salmon\": [250, 128, 114],\n  \"sandybrown\": [244, 164, 96],\n  \"seagreen\": [46, 139, 87],\n  \"seashell\": [255, 245, 238],\n  \"sienna\": [160, 82, 45],\n  \"silver\": [192, 192, 192],\n  \"skyblue\": [135, 206, 235],\n  \"slateblue\": [106, 90, 205],\n  \"slategray\": [112, 128, 144],\n  \"slategrey\": [112, 128, 144],\n  \"snow\": [255, 250, 250],\n  \"springgreen\": [0, 255, 127],\n  \"steelblue\": [70, 130, 180],\n  \"tan\": [210, 180, 140],\n  \"teal\": [0, 128, 128],\n  \"thistle\": [216, 191, 216],\n  \"tomato\": [255, 99, 71],\n  \"turquoise\": [64, 224, 208],\n  \"violet\": [238, 130, 238],\n  \"wheat\": [245, 222, 179],\n  \"white\": [255, 255, 255],\n  \"whitesmoke\": [245, 245, 245],\n  \"yellow\": [255, 255, 0],\n  \"yellowgreen\": [154, 205, 50]\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar Element = require('../core/core.element');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n  elements: {\n    arc: {\n      backgroundColor: defaults.global.defaultColor,\n      borderColor: '#fff',\n      borderWidth: 2\n    }\n  }\n});\n\nmodule.exports = Element.extend({\n  inLabelRange: function inLabelRange(mouseX) {\n    var vm = this._view;\n\n    if (vm) {\n      return Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2);\n    }\n\n    return false;\n  },\n  inRange: function inRange(chartX, chartY) {\n    var vm = this._view;\n\n    if (vm) {\n      var pointRelativePosition = helpers.getAngleFromPoint(vm, {\n        x: chartX,\n        y: chartY\n      });\n      var angle = pointRelativePosition.angle;\n      var distance = pointRelativePosition.distance; // Sanitise angle range\n\n      var startAngle = vm.startAngle;\n      var endAngle = vm.endAngle;\n\n      while (endAngle < startAngle) {\n        endAngle += 2.0 * Math.PI;\n      }\n\n      while (angle > endAngle) {\n        angle -= 2.0 * Math.PI;\n      }\n\n      while (angle < startAngle) {\n        angle += 2.0 * Math.PI;\n      } // Check if within the range of the open/close angle\n\n\n      var betweenAngles = angle >= startAngle && angle <= endAngle;\n      var withinRadius = distance >= vm.innerRadius && distance <= vm.outerRadius;\n      return betweenAngles && withinRadius;\n    }\n\n    return false;\n  },\n  getCenterPoint: function getCenterPoint() {\n    var vm = this._view;\n    var halfAngle = (vm.startAngle + vm.endAngle) / 2;\n    var halfRadius = (vm.innerRadius + vm.outerRadius) / 2;\n    return {\n      x: vm.x + Math.cos(halfAngle) * halfRadius,\n      y: vm.y + Math.sin(halfAngle) * halfRadius\n    };\n  },\n  getArea: function getArea() {\n    var vm = this._view;\n    return Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));\n  },\n  tooltipPosition: function tooltipPosition() {\n    var vm = this._view;\n    var centreAngle = vm.startAngle + (vm.endAngle - vm.startAngle) / 2;\n    var rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\n    return {\n      x: vm.x + Math.cos(centreAngle) * rangeFromCentre,\n      y: vm.y + Math.sin(centreAngle) * rangeFromCentre\n    };\n  },\n  draw: function draw() {\n    var ctx = this._chart.ctx;\n    var vm = this._view;\n    var sA = vm.startAngle;\n    var eA = vm.endAngle;\n    ctx.beginPath();\n    ctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\n    ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n    ctx.closePath();\n    ctx.strokeStyle = vm.borderColor;\n    ctx.lineWidth = vm.borderWidth;\n    ctx.fillStyle = vm.backgroundColor;\n    ctx.fill();\n    ctx.lineJoin = 'bevel';\n\n    if (vm.borderWidth) {\n      ctx.stroke();\n    }\n  }\n});","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar Element = require('../core/core.element');\n\nvar helpers = require('../helpers/index');\n\nvar globalDefaults = defaults.global;\n\ndefaults._set('global', {\n  elements: {\n    line: {\n      tension: 0.4,\n      backgroundColor: globalDefaults.defaultColor,\n      borderWidth: 3,\n      borderColor: globalDefaults.defaultColor,\n      borderCapStyle: 'butt',\n      borderDash: [],\n      borderDashOffset: 0.0,\n      borderJoinStyle: 'miter',\n      capBezierPoints: true,\n      fill: true // do we fill in the area between the line and its base axis\n\n    }\n  }\n});\n\nmodule.exports = Element.extend({\n  draw: function draw() {\n    var me = this;\n    var vm = me._view;\n    var ctx = me._chart.ctx;\n    var spanGaps = vm.spanGaps;\n\n    var points = me._children.slice(); // clone array\n\n\n    var globalOptionLineElements = globalDefaults.elements.line;\n    var lastDrawnIndex = -1;\n    var index, current, previous, currentVM; // If we are looping, adding the first point again\n\n    if (me._loop && points.length) {\n      points.push(points[0]);\n    }\n\n    ctx.save(); // Stroke Line Options\n\n    ctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle; // IE 9 and 10 do not support line dash\n\n    if (ctx.setLineDash) {\n      ctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);\n    }\n\n    ctx.lineDashOffset = vm.borderDashOffset || globalOptionLineElements.borderDashOffset;\n    ctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;\n    ctx.lineWidth = vm.borderWidth || globalOptionLineElements.borderWidth;\n    ctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor; // Stroke Line\n\n    ctx.beginPath();\n    lastDrawnIndex = -1;\n\n    for (index = 0; index < points.length; ++index) {\n      current = points[index];\n      previous = helpers.previousItem(points, index);\n      currentVM = current._view; // First point moves to it's starting position no matter what\n\n      if (index === 0) {\n        if (!currentVM.skip) {\n          ctx.moveTo(currentVM.x, currentVM.y);\n          lastDrawnIndex = index;\n        }\n      } else {\n        previous = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\n\n        if (!currentVM.skip) {\n          if (lastDrawnIndex !== index - 1 && !spanGaps || lastDrawnIndex === -1) {\n            // There was a gap and this is the first point after the gap\n            ctx.moveTo(currentVM.x, currentVM.y);\n          } else {\n            // Line to next point\n            helpers.canvas.lineTo(ctx, previous._view, current._view);\n          }\n\n          lastDrawnIndex = index;\n        }\n      }\n    }\n\n    ctx.stroke();\n    ctx.restore();\n  }\n});","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar Element = require('../core/core.element');\n\nvar helpers = require('../helpers/index');\n\nvar defaultColor = defaults.global.defaultColor;\n\ndefaults._set('global', {\n  elements: {\n    point: {\n      radius: 3,\n      pointStyle: 'circle',\n      backgroundColor: defaultColor,\n      borderColor: defaultColor,\n      borderWidth: 1,\n      // Hover\n      hitRadius: 1,\n      hoverRadius: 4,\n      hoverBorderWidth: 1\n    }\n  }\n});\n\nfunction xRange(mouseX) {\n  var vm = this._view;\n  return vm ? Math.abs(mouseX - vm.x) < vm.radius + vm.hitRadius : false;\n}\n\nfunction yRange(mouseY) {\n  var vm = this._view;\n  return vm ? Math.abs(mouseY - vm.y) < vm.radius + vm.hitRadius : false;\n}\n\nmodule.exports = Element.extend({\n  inRange: function inRange(mouseX, mouseY) {\n    var vm = this._view;\n    return vm ? Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2) < Math.pow(vm.hitRadius + vm.radius, 2) : false;\n  },\n  inLabelRange: xRange,\n  inXRange: xRange,\n  inYRange: yRange,\n  getCenterPoint: function getCenterPoint() {\n    var vm = this._view;\n    return {\n      x: vm.x,\n      y: vm.y\n    };\n  },\n  getArea: function getArea() {\n    return Math.PI * Math.pow(this._view.radius, 2);\n  },\n  tooltipPosition: function tooltipPosition() {\n    var vm = this._view;\n    return {\n      x: vm.x,\n      y: vm.y,\n      padding: vm.radius + vm.borderWidth\n    };\n  },\n  draw: function draw(chartArea) {\n    var vm = this._view;\n    var model = this._model;\n    var ctx = this._chart.ctx;\n    var pointStyle = vm.pointStyle;\n    var radius = vm.radius;\n    var x = vm.x;\n    var y = vm.y;\n    var color = helpers.color;\n    var errMargin = 1.01; // 1.01 is margin for Accumulated error. (Especially Edge, IE.)\n\n    var ratio = 0;\n\n    if (vm.skip) {\n      return;\n    }\n\n    ctx.strokeStyle = vm.borderColor || defaultColor;\n    ctx.lineWidth = helpers.valueOrDefault(vm.borderWidth, defaults.global.elements.point.borderWidth);\n    ctx.fillStyle = vm.backgroundColor || defaultColor; // Cliping for Points.\n    // going out from inner charArea?\n\n    if (chartArea !== undefined && (model.x < chartArea.left || chartArea.right * errMargin < model.x || model.y < chartArea.top || chartArea.bottom * errMargin < model.y)) {\n      // Point fade out\n      if (model.x < chartArea.left) {\n        ratio = (x - model.x) / (chartArea.left - model.x);\n      } else if (chartArea.right * errMargin < model.x) {\n        ratio = (model.x - x) / (model.x - chartArea.right);\n      } else if (model.y < chartArea.top) {\n        ratio = (y - model.y) / (chartArea.top - model.y);\n      } else if (chartArea.bottom * errMargin < model.y) {\n        ratio = (model.y - y) / (model.y - chartArea.bottom);\n      }\n\n      ratio = Math.round(ratio * 100) / 100;\n      ctx.strokeStyle = color(ctx.strokeStyle).alpha(ratio).rgbString();\n      ctx.fillStyle = color(ctx.fillStyle).alpha(ratio).rgbString();\n    }\n\n    helpers.canvas.drawPoint(ctx, pointStyle, radius, x, y);\n  }\n});","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar Element = require('../core/core.element');\n\ndefaults._set('global', {\n  elements: {\n    rectangle: {\n      backgroundColor: defaults.global.defaultColor,\n      borderColor: defaults.global.defaultColor,\n      borderSkipped: 'bottom',\n      borderWidth: 0\n    }\n  }\n});\n\nfunction isVertical(bar) {\n  return bar._view.width !== undefined;\n}\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param bar {Chart.Element.Rectangle} the bar\n * @return {Bounds} bounds of the bar\n * @private\n */\n\n\nfunction getBarBounds(bar) {\n  var vm = bar._view;\n  var x1, x2, y1, y2;\n\n  if (isVertical(bar)) {\n    // vertical\n    var halfWidth = vm.width / 2;\n    x1 = vm.x - halfWidth;\n    x2 = vm.x + halfWidth;\n    y1 = Math.min(vm.y, vm.base);\n    y2 = Math.max(vm.y, vm.base);\n  } else {\n    // horizontal bar\n    var halfHeight = vm.height / 2;\n    x1 = Math.min(vm.x, vm.base);\n    x2 = Math.max(vm.x, vm.base);\n    y1 = vm.y - halfHeight;\n    y2 = vm.y + halfHeight;\n  }\n\n  return {\n    left: x1,\n    top: y1,\n    right: x2,\n    bottom: y2\n  };\n}\n\nmodule.exports = Element.extend({\n  draw: function draw() {\n    var ctx = this._chart.ctx;\n    var vm = this._view;\n    var left, right, top, bottom, signX, signY, borderSkipped;\n    var borderWidth = vm.borderWidth;\n\n    if (!vm.horizontal) {\n      // bar\n      left = vm.x - vm.width / 2;\n      right = vm.x + vm.width / 2;\n      top = vm.y;\n      bottom = vm.base;\n      signX = 1;\n      signY = bottom > top ? 1 : -1;\n      borderSkipped = vm.borderSkipped || 'bottom';\n    } else {\n      // horizontal bar\n      left = vm.base;\n      right = vm.x;\n      top = vm.y - vm.height / 2;\n      bottom = vm.y + vm.height / 2;\n      signX = right > left ? 1 : -1;\n      signY = 1;\n      borderSkipped = vm.borderSkipped || 'left';\n    } // Canvas doesn't allow us to stroke inside the width so we can\n    // adjust the sizes to fit if we're setting a stroke on the line\n\n\n    if (borderWidth) {\n      // borderWidth shold be less than bar width and bar height.\n      var barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\n      borderWidth = borderWidth > barSize ? barSize : borderWidth;\n      var halfStroke = borderWidth / 2; // Adjust borderWidth when bar top position is near vm.base(zero).\n\n      var borderLeft = left + (borderSkipped !== 'left' ? halfStroke * signX : 0);\n      var borderRight = right + (borderSkipped !== 'right' ? -halfStroke * signX : 0);\n      var borderTop = top + (borderSkipped !== 'top' ? halfStroke * signY : 0);\n      var borderBottom = bottom + (borderSkipped !== 'bottom' ? -halfStroke * signY : 0); // not become a vertical line?\n\n      if (borderLeft !== borderRight) {\n        top = borderTop;\n        bottom = borderBottom;\n      } // not become a horizontal line?\n\n\n      if (borderTop !== borderBottom) {\n        left = borderLeft;\n        right = borderRight;\n      }\n    }\n\n    ctx.beginPath();\n    ctx.fillStyle = vm.backgroundColor;\n    ctx.strokeStyle = vm.borderColor;\n    ctx.lineWidth = borderWidth; // Corner points, from bottom-left to bottom-right clockwise\n    // | 1 2 |\n    // | 0 3 |\n\n    var corners = [[left, bottom], [left, top], [right, top], [right, bottom]]; // Find first (starting) corner with fallback to 'bottom'\n\n    var borders = ['bottom', 'left', 'top', 'right'];\n    var startCorner = borders.indexOf(borderSkipped, 0);\n\n    if (startCorner === -1) {\n      startCorner = 0;\n    }\n\n    function cornerAt(index) {\n      return corners[(startCorner + index) % 4];\n    } // Draw rectangle from 'startCorner'\n\n\n    var corner = cornerAt(0);\n    ctx.moveTo(corner[0], corner[1]);\n\n    for (var i = 1; i < 4; i++) {\n      corner = cornerAt(i);\n      ctx.lineTo(corner[0], corner[1]);\n    }\n\n    ctx.fill();\n\n    if (borderWidth) {\n      ctx.stroke();\n    }\n  },\n  height: function height() {\n    var vm = this._view;\n    return vm.base - vm.y;\n  },\n  inRange: function inRange(mouseX, mouseY) {\n    var inRange = false;\n\n    if (this._view) {\n      var bounds = getBarBounds(this);\n      inRange = mouseX >= bounds.left && mouseX <= bounds.right && mouseY >= bounds.top && mouseY <= bounds.bottom;\n    }\n\n    return inRange;\n  },\n  inLabelRange: function inLabelRange(mouseX, mouseY) {\n    var me = this;\n\n    if (!me._view) {\n      return false;\n    }\n\n    var inRange = false;\n    var bounds = getBarBounds(me);\n\n    if (isVertical(me)) {\n      inRange = mouseX >= bounds.left && mouseX <= bounds.right;\n    } else {\n      inRange = mouseY >= bounds.top && mouseY <= bounds.bottom;\n    }\n\n    return inRange;\n  },\n  inXRange: function inXRange(mouseX) {\n    var bounds = getBarBounds(this);\n    return mouseX >= bounds.left && mouseX <= bounds.right;\n  },\n  inYRange: function inYRange(mouseY) {\n    var bounds = getBarBounds(this);\n    return mouseY >= bounds.top && mouseY <= bounds.bottom;\n  },\n  getCenterPoint: function getCenterPoint() {\n    var vm = this._view;\n    var x, y;\n\n    if (isVertical(this)) {\n      x = vm.x;\n      y = (vm.y + vm.base) / 2;\n    } else {\n      x = (vm.x + vm.base) / 2;\n      y = vm.y;\n    }\n\n    return {\n      x: x,\n      y: y\n    };\n  },\n  getArea: function getArea() {\n    var vm = this._view;\n    return vm.width * Math.abs(vm.y - vm.base);\n  },\n  tooltipPosition: function tooltipPosition() {\n    var vm = this._view;\n    return {\n      x: vm.x,\n      y: vm.y\n    };\n  }\n});","/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\nmodule.exports = {\n  acquireContext: function acquireContext(item) {\n    if (item && item.canvas) {\n      // Support for any object associated to a canvas (including a context2d)\n      item = item.canvas;\n    }\n\n    return item && item.getContext('2d') || null;\n  }\n};","/**\n * Chart.Platform implementation for targeting a web browser\n */\n'use strict';\n\nvar helpers = require('../helpers/index');\n\nvar EXPANDO_KEY = '$chartjs';\nvar CSS_PREFIX = 'chartjs-';\nvar CSS_RENDER_MONITOR = CSS_PREFIX + 'render-monitor';\nvar CSS_RENDER_ANIMATION = CSS_PREFIX + 'render-animation';\nvar ANIMATION_START_EVENTS = ['animationstart', 'webkitAnimationStart'];\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\n\nvar EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns {Number} Size in pixels or undefined if unknown.\n */\n\nfunction readUsedSize(element, property) {\n  var value = helpers.getStyle(element, property);\n  var matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? Number(matches[1]) : undefined;\n}\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n */\n\n\nfunction initCanvas(canvas, config) {\n  var style = canvas.style; // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n  // returns null or '' if no explicit value has been set to the canvas attribute.\n\n  var renderHeight = canvas.getAttribute('height');\n  var renderWidth = canvas.getAttribute('width'); // Chart.js modifies some canvas values that we want to restore on destroy\n\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  }; // Force canvas to display as block to avoid extra space caused by inline\n  // elements, which would interfere with the responsive resize process.\n  // https://github.com/chartjs/Chart.js/issues/2538\n\n  style.display = style.display || 'block';\n\n  if (renderWidth === null || renderWidth === '') {\n    var displayWidth = readUsedSize(canvas, 'width');\n\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (renderHeight === null || renderHeight === '') {\n    if (canvas.style.height === '') {\n      // If no explicit render height and style height, let's apply the aspect ratio,\n      // which one can be specified by the user but also by charts as default option\n      // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n      canvas.height = canvas.width / (config.options.aspectRatio || 2);\n    } else {\n      var displayHeight = readUsedSize(canvas, 'height');\n\n      if (displayWidth !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\n\n\nvar supportsEventListenerOptions = function () {\n  var supports = false;\n\n  try {\n    var options = Object.defineProperty({}, 'passive', {\n      get: function get() {\n        supports = true;\n      }\n    });\n    window.addEventListener('e', null, options);\n  } catch (e) {// continue regardless of error\n  }\n\n  return supports;\n}(); // Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\n\n\nvar eventListenerOptions = supportsEventListenerOptions ? {\n  passive: true\n} : false;\n\nfunction _addEventListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\n\nfunction _removeEventListener(node, type, listener) {\n  node.removeEventListener(type, listener, eventListenerOptions);\n}\n\nfunction createEvent(type, chart, x, y, nativeEvent) {\n  return {\n    type: type,\n    chart: chart,\n    native: nativeEvent || null,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null\n  };\n}\n\nfunction fromNativeEvent(event, chart) {\n  var type = EVENT_TYPES[event.type] || event.type;\n  var pos = helpers.getRelativePosition(event, chart);\n  return createEvent(type, chart, pos.x, pos.y, event);\n}\n\nfunction throttled(fn, thisArg) {\n  var ticking = false;\n  var args = [];\n  return function () {\n    args = Array.prototype.slice.call(arguments);\n    thisArg = thisArg || this;\n\n    if (!ticking) {\n      ticking = true;\n      helpers.requestAnimFrame.call(window, function () {\n        ticking = false;\n        fn.apply(thisArg, args);\n      });\n    }\n  };\n} // Implementation based on https://github.com/marcj/css-element-queries\n\n\nfunction createResizer(handler) {\n  var resizer = document.createElement('div');\n  var cls = CSS_PREFIX + 'size-monitor';\n  var maxSize = 1000000;\n  var style = 'position:absolute;' + 'left:0;' + 'top:0;' + 'right:0;' + 'bottom:0;' + 'overflow:hidden;' + 'pointer-events:none;' + 'visibility:hidden;' + 'z-index:-1;';\n  resizer.style.cssText = style;\n  resizer.className = cls;\n  resizer.innerHTML = '<div class=\"' + cls + '-expand\" style=\"' + style + '\">' + '<div style=\"' + 'position:absolute;' + 'width:' + maxSize + 'px;' + 'height:' + maxSize + 'px;' + 'left:0;' + 'top:0\">' + '</div>' + '</div>' + '<div class=\"' + cls + '-shrink\" style=\"' + style + '\">' + '<div style=\"' + 'position:absolute;' + 'width:200%;' + 'height:200%;' + 'left:0; ' + 'top:0\">' + '</div>' + '</div>';\n  var expand = resizer.childNodes[0];\n  var shrink = resizer.childNodes[1];\n\n  resizer._reset = function () {\n    expand.scrollLeft = maxSize;\n    expand.scrollTop = maxSize;\n    shrink.scrollLeft = maxSize;\n    shrink.scrollTop = maxSize;\n  };\n\n  var onScroll = function onScroll() {\n    resizer._reset();\n\n    handler();\n  };\n\n  _addEventListener(expand, 'scroll', onScroll.bind(expand, 'expand'));\n\n  _addEventListener(shrink, 'scroll', onScroll.bind(shrink, 'shrink'));\n\n  return resizer;\n} // https://davidwalsh.name/detect-node-insertion\n\n\nfunction watchForRender(node, handler) {\n  var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\n  var proxy = expando.renderProxy = function (e) {\n    if (e.animationName === CSS_RENDER_ANIMATION) {\n      handler();\n    }\n  };\n\n  helpers.each(ANIMATION_START_EVENTS, function (type) {\n    _addEventListener(node, type, proxy);\n  }); // #4737: Chrome might skip the CSS animation when the CSS_RENDER_MONITOR class\n  // is removed then added back immediately (same animation frame?). Accessing the\n  // `offsetParent` property will force a reflow and re-evaluate the CSS animation.\n  // https://gist.github.com/paulirish/5d52fb081b3570c81e3a#box-metrics\n  // https://github.com/chartjs/Chart.js/issues/4737\n\n  expando.reflow = !!node.offsetParent;\n  node.classList.add(CSS_RENDER_MONITOR);\n}\n\nfunction unwatchForRender(node) {\n  var expando = node[EXPANDO_KEY] || {};\n  var proxy = expando.renderProxy;\n\n  if (proxy) {\n    helpers.each(ANIMATION_START_EVENTS, function (type) {\n      _removeEventListener(node, type, proxy);\n    });\n    delete expando.renderProxy;\n  }\n\n  node.classList.remove(CSS_RENDER_MONITOR);\n}\n\nfunction addResizeListener(node, listener, chart) {\n  var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {}); // Let's keep track of this added resizer and thus avoid DOM query when removing it.\n\n  var resizer = expando.resizer = createResizer(throttled(function () {\n    if (expando.resizer) {\n      return listener(createEvent('resize', chart));\n    }\n  })); // The resizer needs to be attached to the node parent, so we first need to be\n  // sure that `node` is attached to the DOM before injecting the resizer element.\n\n  watchForRender(node, function () {\n    if (expando.resizer) {\n      var container = node.parentNode;\n\n      if (container && container !== resizer.parentNode) {\n        container.insertBefore(resizer, container.firstChild);\n      } // The container size might have changed, let's reset the resizer state.\n\n\n      resizer._reset();\n    }\n  });\n}\n\nfunction removeResizeListener(node) {\n  var expando = node[EXPANDO_KEY] || {};\n  var resizer = expando.resizer;\n  delete expando.resizer;\n  unwatchForRender(node);\n\n  if (resizer && resizer.parentNode) {\n    resizer.parentNode.removeChild(resizer);\n  }\n}\n\nfunction injectCSS(platform, css) {\n  // http://stackoverflow.com/q/3922139\n  var style = platform._style || document.createElement('style');\n\n  if (!platform._style) {\n    platform._style = style;\n    css = '/* Chart.js */\\n' + css;\n    style.setAttribute('type', 'text/css');\n    document.getElementsByTagName('head')[0].appendChild(style);\n  }\n\n  style.appendChild(document.createTextNode(css));\n}\n\nmodule.exports = {\n  /**\n   * This property holds whether this platform is enabled for the current environment.\n   * Currently used by platform.js to select the proper implementation.\n   * @private\n   */\n  _enabled: typeof window !== 'undefined' && typeof document !== 'undefined',\n  initialize: function initialize() {\n    var keyframes = 'from{opacity:0.99}to{opacity:1}';\n    injectCSS(this, // DOM rendering detection\n    // https://davidwalsh.name/detect-node-insertion\n    '@-webkit-keyframes ' + CSS_RENDER_ANIMATION + '{' + keyframes + '}' + '@keyframes ' + CSS_RENDER_ANIMATION + '{' + keyframes + '}' + '.' + CSS_RENDER_MONITOR + '{' + '-webkit-animation:' + CSS_RENDER_ANIMATION + ' 0.001s;' + 'animation:' + CSS_RENDER_ANIMATION + ' 0.001s;' + '}');\n  },\n  acquireContext: function acquireContext(item, config) {\n    if (typeof item === 'string') {\n      item = document.getElementById(item);\n    } else if (item.length) {\n      // Support for array based queries (such as jQuery)\n      item = item[0];\n    }\n\n    if (item && item.canvas) {\n      // Support for any object associated to a canvas (including a context2d)\n      item = item.canvas;\n    } // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n\n\n    var context = item && item.getContext && item.getContext('2d'); // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the item is\n    // inside an iframe or when running in a protected environment. We could guess the\n    // types from their toString() value but let's keep things flexible and assume it's\n    // a sufficient condition if the item has a context2D which has item as `canvas`.\n    // https://github.com/chartjs/Chart.js/issues/3887\n    // https://github.com/chartjs/Chart.js/issues/4102\n    // https://github.com/chartjs/Chart.js/issues/4152\n\n    if (context && context.canvas === item) {\n      initCanvas(item, config);\n      return context;\n    }\n\n    return null;\n  },\n  releaseContext: function releaseContext(context) {\n    var canvas = context.canvas;\n\n    if (!canvas[EXPANDO_KEY]) {\n      return;\n    }\n\n    var initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach(function (prop) {\n      var value = initial[prop];\n\n      if (helpers.isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    helpers.each(initial.style || {}, function (value, key) {\n      canvas.style[key] = value;\n    }); // The canvas render size might have been changed (and thus the state stack discarded),\n    // we can't use save() and restore() to restore the initial state. So make sure that at\n    // least the canvas context is reset to the default state by setting the canvas width.\n    // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n  },\n  addEventListener: function addEventListener(chart, type, listener) {\n    var canvas = chart.canvas;\n\n    if (type === 'resize') {\n      // Note: the resize event is not supported on all browsers.\n      addResizeListener(canvas, listener, chart);\n      return;\n    }\n\n    var expando = listener[EXPANDO_KEY] || (listener[EXPANDO_KEY] = {});\n    var proxies = expando.proxies || (expando.proxies = {});\n\n    var proxy = proxies[chart.id + '_' + type] = function (event) {\n      listener(fromNativeEvent(event, chart));\n    };\n\n    _addEventListener(canvas, type, proxy);\n  },\n  removeEventListener: function removeEventListener(chart, type, listener) {\n    var canvas = chart.canvas;\n\n    if (type === 'resize') {\n      // Note: the resize event is not supported on all browsers.\n      removeResizeListener(canvas, listener);\n      return;\n    }\n\n    var expando = listener[EXPANDO_KEY] || {};\n    var proxies = expando.proxies || {};\n    var proxy = proxies[chart.id + '_' + type];\n\n    if (!proxy) {\n      return;\n    }\n\n    _removeEventListener(canvas, type, proxy);\n  }\n}; // DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use EventTarget.addEventListener instead.\n * EventTarget.addEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n * @function Chart.helpers.addEvent\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.addEvent = _addEventListener;\n/**\n * Provided for backward compatibility, use EventTarget.removeEventListener instead.\n * EventTarget.removeEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\n * @function Chart.helpers.removeEvent\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.removeEvent = _removeEventListener;","/* global window: false */\n'use strict';\n\nvar defaults = require('./core.defaults');\n\nvar Element = require('./core.element');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n  animation: {\n    duration: 1000,\n    easing: 'easeOutQuart',\n    onProgress: helpers.noop,\n    onComplete: helpers.noop\n  }\n});\n\nmodule.exports = function (Chart) {\n  Chart.Animation = Element.extend({\n    chart: null,\n    // the animation associated chart instance\n    currentStep: 0,\n    // the current animation step\n    numSteps: 60,\n    // default number of steps\n    easing: '',\n    // the easing to use for this animation\n    render: null,\n    // render function used by the animation service\n    onAnimationProgress: null,\n    // user specified callback to fire on each step of the animation\n    onAnimationComplete: null // user specified callback to fire when the animation finishes\n\n  });\n  Chart.animationService = {\n    frameDuration: 17,\n    animations: [],\n    dropFrames: 0,\n    request: null,\n\n    /**\n     * @param {Chart} chart - The chart to animate.\n     * @param {Chart.Animation} animation - The animation that we will animate.\n     * @param {Number} duration - The animation duration in ms.\n     * @param {Boolean} lazy - if true, the chart is not marked as animating to enable more responsive interactions\n     */\n    addAnimation: function addAnimation(chart, animation, duration, lazy) {\n      var animations = this.animations;\n      var i, ilen;\n      animation.chart = chart;\n\n      if (!lazy) {\n        chart.animating = true;\n      }\n\n      for (i = 0, ilen = animations.length; i < ilen; ++i) {\n        if (animations[i].chart === chart) {\n          animations[i] = animation;\n          return;\n        }\n      }\n\n      animations.push(animation); // If there are no animations queued, manually kickstart a digest, for lack of a better word\n\n      if (animations.length === 1) {\n        this.requestAnimationFrame();\n      }\n    },\n    cancelAnimation: function cancelAnimation(chart) {\n      var index = helpers.findIndex(this.animations, function (animation) {\n        return animation.chart === chart;\n      });\n\n      if (index !== -1) {\n        this.animations.splice(index, 1);\n        chart.animating = false;\n      }\n    },\n    requestAnimationFrame: function requestAnimationFrame() {\n      var me = this;\n\n      if (me.request === null) {\n        // Skip animation frame requests until the active one is executed.\n        // This can happen when processing mouse events, e.g. 'mousemove'\n        // and 'mouseout' events will trigger multiple renders.\n        me.request = helpers.requestAnimFrame.call(window, function () {\n          me.request = null;\n          me.startDigest();\n        });\n      }\n    },\n\n    /**\n     * @private\n     */\n    startDigest: function startDigest() {\n      var me = this;\n      var startTime = Date.now();\n      var framesToDrop = 0;\n\n      if (me.dropFrames > 1) {\n        framesToDrop = Math.floor(me.dropFrames);\n        me.dropFrames = me.dropFrames % 1;\n      }\n\n      me.advance(1 + framesToDrop);\n      var endTime = Date.now();\n      me.dropFrames += (endTime - startTime) / me.frameDuration; // Do we have more stuff to animate?\n\n      if (me.animations.length > 0) {\n        me.requestAnimationFrame();\n      }\n    },\n\n    /**\n     * @private\n     */\n    advance: function advance(count) {\n      var animations = this.animations;\n      var animation, chart;\n      var i = 0;\n\n      while (i < animations.length) {\n        animation = animations[i];\n        chart = animation.chart;\n        animation.currentStep = (animation.currentStep || 0) + count;\n        animation.currentStep = Math.min(animation.currentStep, animation.numSteps);\n        helpers.callback(animation.render, [chart, animation], chart);\n        helpers.callback(animation.onAnimationProgress, [animation], chart);\n\n        if (animation.currentStep >= animation.numSteps) {\n          helpers.callback(animation.onAnimationComplete, [animation], chart);\n          chart.animating = false;\n          animations.splice(i, 1);\n        } else {\n          ++i;\n        }\n      }\n    }\n  };\n  /**\n   * Provided for backward compatibility, use Chart.Animation instead\n   * @prop Chart.Animation#animationObject\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   */\n\n  Object.defineProperty(Chart.Animation.prototype, 'animationObject', {\n    get: function get() {\n      return this;\n    }\n  });\n  /**\n   * Provided for backward compatibility, use Chart.Animation#chart instead\n   * @prop Chart.Animation#chartInstance\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   */\n\n  Object.defineProperty(Chart.Animation.prototype, 'chartInstance', {\n    get: function get() {\n      return this.chart;\n    },\n    set: function set(value) {\n      this.chart = value;\n    }\n  });\n};","'use strict';\n\nvar _typeof = require(\"/Users/tarex/redq/DASHBOARD/newdashapp/node_modules/@babel/runtime/helpers/typeof\");\n\nvar defaults = require('./core.defaults');\n\nvar helpers = require('../helpers/index');\n\nvar Interaction = require('./core.interaction');\n\nvar layouts = require('./core.layouts');\n\nvar platform = require('../platforms/platform');\n\nvar plugins = require('./core.plugins');\n\nmodule.exports = function (Chart) {\n  // Create a dictionary of chart types, to allow for extension of existing types\n  Chart.types = {}; // Store a reference to each instance - allowing us to globally resize chart instances on window resize.\n  // Destroy method on the chart will remove the instance of the chart from this reference.\n\n  Chart.instances = {}; // Controllers available for dataset visualization eg. bar, line, slice, etc.\n\n  Chart.controllers = {};\n  /**\n   * Initializes the given config with global and chart default values.\n   */\n\n  function initConfig(config) {\n    config = config || {}; // Do NOT use configMerge() for the data object because this method merges arrays\n    // and so would change references to labels and datasets, preventing data updates.\n\n    var data = config.data = config.data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    config.options = helpers.configMerge(defaults.global, defaults[config.type], config.options || {});\n    return config;\n  }\n  /**\n   * Updates the config of the chart\n   * @param chart {Chart} chart to update the options for\n   */\n\n\n  function updateConfig(chart) {\n    var newOptions = chart.options;\n    helpers.each(chart.scales, function (scale) {\n      layouts.removeBox(chart, scale);\n    });\n    newOptions = helpers.configMerge(Chart.defaults.global, Chart.defaults[chart.config.type], newOptions);\n    chart.options = chart.config.options = newOptions;\n    chart.ensureScalesHaveIDs();\n    chart.buildOrUpdateScales(); // Tooltip\n\n    chart.tooltip._options = newOptions.tooltips;\n    chart.tooltip.initialize();\n  }\n\n  function positionIsHorizontal(position) {\n    return position === 'top' || position === 'bottom';\n  }\n\n  helpers.extend(Chart.prototype,\n  /** @lends Chart */\n  {\n    /**\n     * @private\n     */\n    construct: function construct(item, config) {\n      var me = this;\n      config = initConfig(config);\n      var context = platform.acquireContext(item, config);\n      var canvas = context && context.canvas;\n      var height = canvas && canvas.height;\n      var width = canvas && canvas.width;\n      me.id = helpers.uid();\n      me.ctx = context;\n      me.canvas = canvas;\n      me.config = config;\n      me.width = width;\n      me.height = height;\n      me.aspectRatio = height ? width / height : null;\n      me.options = config.options;\n      me._bufferedRender = false;\n      /**\n       * Provided for backward compatibility, Chart and Chart.Controller have been merged,\n       * the \"instance\" still need to be defined since it might be called from plugins.\n       * @prop Chart#chart\n       * @deprecated since version 2.6.0\n       * @todo remove at version 3\n       * @private\n       */\n\n      me.chart = me;\n      me.controller = me; // chart.chart.controller #inception\n      // Add the chart instance to the global namespace\n\n      Chart.instances[me.id] = me; // Define alias to the config data: `chart.data === chart.config.data`\n\n      Object.defineProperty(me, 'data', {\n        get: function get() {\n          return me.config.data;\n        },\n        set: function set(value) {\n          me.config.data = value;\n        }\n      });\n\n      if (!context || !canvas) {\n        // The given item is not a compatible context2d element, let's return before finalizing\n        // the chart initialization but after setting basic chart / controller properties that\n        // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n        // https://github.com/chartjs/Chart.js/issues/2807\n        console.error(\"Failed to create chart: can't acquire context from the given item\");\n        return;\n      }\n\n      me.initialize();\n      me.update();\n    },\n\n    /**\n     * @private\n     */\n    initialize: function initialize() {\n      var me = this; // Before init plugin notification\n\n      plugins.notify(me, 'beforeInit');\n      helpers.retinaScale(me, me.options.devicePixelRatio);\n      me.bindEvents();\n\n      if (me.options.responsive) {\n        // Initial resize before chart draws (must be silent to preserve initial animations).\n        me.resize(true);\n      } // Make sure scales have IDs and are built before we build any controllers.\n\n\n      me.ensureScalesHaveIDs();\n      me.buildOrUpdateScales();\n      me.initToolTip(); // After init plugin notification\n\n      plugins.notify(me, 'afterInit');\n      return me;\n    },\n    clear: function clear() {\n      helpers.canvas.clear(this);\n      return this;\n    },\n    stop: function stop() {\n      // Stops any current animation loop occurring\n      Chart.animationService.cancelAnimation(this);\n      return this;\n    },\n    resize: function resize(silent) {\n      var me = this;\n      var options = me.options;\n      var canvas = me.canvas;\n      var aspectRatio = options.maintainAspectRatio && me.aspectRatio || null; // the canvas render width and height will be casted to integers so make sure that\n      // the canvas display style uses the same integer values to avoid blurring effect.\n      // Set to 0 instead of canvas.size because the size defaults to 300x150 if the element is collased\n\n      var newWidth = Math.max(0, Math.floor(helpers.getMaximumWidth(canvas)));\n      var newHeight = Math.max(0, Math.floor(aspectRatio ? newWidth / aspectRatio : helpers.getMaximumHeight(canvas)));\n\n      if (me.width === newWidth && me.height === newHeight) {\n        return;\n      }\n\n      canvas.width = me.width = newWidth;\n      canvas.height = me.height = newHeight;\n      canvas.style.width = newWidth + 'px';\n      canvas.style.height = newHeight + 'px';\n      helpers.retinaScale(me, options.devicePixelRatio);\n\n      if (!silent) {\n        // Notify any plugins about the resize\n        var newSize = {\n          width: newWidth,\n          height: newHeight\n        };\n        plugins.notify(me, 'resize', [newSize]); // Notify of resize\n\n        if (me.options.onResize) {\n          me.options.onResize(me, newSize);\n        }\n\n        me.stop();\n        me.update(me.options.responsiveAnimationDuration);\n      }\n    },\n    ensureScalesHaveIDs: function ensureScalesHaveIDs() {\n      var options = this.options;\n      var scalesOptions = options.scales || {};\n      var scaleOptions = options.scale;\n      helpers.each(scalesOptions.xAxes, function (xAxisOptions, index) {\n        xAxisOptions.id = xAxisOptions.id || 'x-axis-' + index;\n      });\n      helpers.each(scalesOptions.yAxes, function (yAxisOptions, index) {\n        yAxisOptions.id = yAxisOptions.id || 'y-axis-' + index;\n      });\n\n      if (scaleOptions) {\n        scaleOptions.id = scaleOptions.id || 'scale';\n      }\n    },\n\n    /**\n     * Builds a map of scale ID to scale object for future lookup.\n     */\n    buildOrUpdateScales: function buildOrUpdateScales() {\n      var me = this;\n      var options = me.options;\n      var scales = me.scales || {};\n      var items = [];\n      var updated = Object.keys(scales).reduce(function (obj, id) {\n        obj[id] = false;\n        return obj;\n      }, {});\n\n      if (options.scales) {\n        items = items.concat((options.scales.xAxes || []).map(function (xAxisOptions) {\n          return {\n            options: xAxisOptions,\n            dtype: 'category',\n            dposition: 'bottom'\n          };\n        }), (options.scales.yAxes || []).map(function (yAxisOptions) {\n          return {\n            options: yAxisOptions,\n            dtype: 'linear',\n            dposition: 'left'\n          };\n        }));\n      }\n\n      if (options.scale) {\n        items.push({\n          options: options.scale,\n          dtype: 'radialLinear',\n          isDefault: true,\n          dposition: 'chartArea'\n        });\n      }\n\n      helpers.each(items, function (item) {\n        var scaleOptions = item.options;\n        var id = scaleOptions.id;\n        var scaleType = helpers.valueOrDefault(scaleOptions.type, item.dtype);\n\n        if (positionIsHorizontal(scaleOptions.position) !== positionIsHorizontal(item.dposition)) {\n          scaleOptions.position = item.dposition;\n        }\n\n        updated[id] = true;\n        var scale = null;\n\n        if (id in scales && scales[id].type === scaleType) {\n          scale = scales[id];\n          scale.options = scaleOptions;\n          scale.ctx = me.ctx;\n          scale.chart = me;\n        } else {\n          var scaleClass = Chart.scaleService.getScaleConstructor(scaleType);\n\n          if (!scaleClass) {\n            return;\n          }\n\n          scale = new scaleClass({\n            id: id,\n            type: scaleType,\n            options: scaleOptions,\n            ctx: me.ctx,\n            chart: me\n          });\n          scales[scale.id] = scale;\n        }\n\n        scale.mergeTicksOptions(); // TODO(SB): I think we should be able to remove this custom case (options.scale)\n        // and consider it as a regular scale part of the \"scales\"\" map only! This would\n        // make the logic easier and remove some useless? custom code.\n\n        if (item.isDefault) {\n          me.scale = scale;\n        }\n      }); // clear up discarded scales\n\n      helpers.each(updated, function (hasUpdated, id) {\n        if (!hasUpdated) {\n          delete scales[id];\n        }\n      });\n      me.scales = scales;\n      Chart.scaleService.addScalesToLayout(this);\n    },\n    buildOrUpdateControllers: function buildOrUpdateControllers() {\n      var me = this;\n      var types = [];\n      var newControllers = [];\n      helpers.each(me.data.datasets, function (dataset, datasetIndex) {\n        var meta = me.getDatasetMeta(datasetIndex);\n        var type = dataset.type || me.config.type;\n\n        if (meta.type && meta.type !== type) {\n          me.destroyDatasetMeta(datasetIndex);\n          meta = me.getDatasetMeta(datasetIndex);\n        }\n\n        meta.type = type;\n        types.push(meta.type);\n\n        if (meta.controller) {\n          meta.controller.updateIndex(datasetIndex);\n          meta.controller.linkScales();\n        } else {\n          var ControllerClass = Chart.controllers[meta.type];\n\n          if (ControllerClass === undefined) {\n            throw new Error('\"' + meta.type + '\" is not a chart type.');\n          }\n\n          meta.controller = new ControllerClass(me, datasetIndex);\n          newControllers.push(meta.controller);\n        }\n      }, me);\n      return newControllers;\n    },\n\n    /**\n     * Reset the elements of all datasets\n     * @private\n     */\n    resetElements: function resetElements() {\n      var me = this;\n      helpers.each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.reset();\n      }, me);\n    },\n\n    /**\n    * Resets the chart back to it's state before the initial animation\n    */\n    reset: function reset() {\n      this.resetElements();\n      this.tooltip.initialize();\n    },\n    update: function update(config) {\n      var me = this;\n\n      if (!config || _typeof(config) !== 'object') {\n        // backwards compatibility\n        config = {\n          duration: config,\n          lazy: arguments[1]\n        };\n      }\n\n      updateConfig(me); // plugins options references might have change, let's invalidate the cache\n      // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\n      plugins._invalidate(me);\n\n      if (plugins.notify(me, 'beforeUpdate') === false) {\n        return;\n      } // In case the entire data object changed\n\n\n      me.tooltip._data = me.data; // Make sure dataset controllers are updated and new controllers are reset\n\n      var newControllers = me.buildOrUpdateControllers(); // Make sure all dataset controllers have correct meta data counts\n\n      helpers.each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\n      }, me);\n      me.updateLayout(); // Can only reset the new controllers after the scales have been updated\n\n      if (me.options.animation && me.options.animation.duration) {\n        helpers.each(newControllers, function (controller) {\n          controller.reset();\n        });\n      }\n\n      me.updateDatasets(); // Need to reset tooltip in case it is displayed with elements that are removed\n      // after update.\n\n      me.tooltip.initialize(); // Last active contains items that were previously in the tooltip.\n      // When we reset the tooltip, we need to clear it\n\n      me.lastActive = []; // Do this before render so that any plugins that need final scale updates can use it\n\n      plugins.notify(me, 'afterUpdate');\n\n      if (me._bufferedRender) {\n        me._bufferedRequest = {\n          duration: config.duration,\n          easing: config.easing,\n          lazy: config.lazy\n        };\n      } else {\n        me.render(config);\n      }\n    },\n\n    /**\n     * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n     * hook, in which case, plugins will not be called on `afterLayout`.\n     * @private\n     */\n    updateLayout: function updateLayout() {\n      var me = this;\n\n      if (plugins.notify(me, 'beforeLayout') === false) {\n        return;\n      }\n\n      layouts.update(this, this.width, this.height);\n      /**\n       * Provided for backward compatibility, use `afterLayout` instead.\n       * @method IPlugin#afterScaleUpdate\n       * @deprecated since version 2.5.0\n       * @todo remove at version 3\n       * @private\n       */\n\n      plugins.notify(me, 'afterScaleUpdate');\n      plugins.notify(me, 'afterLayout');\n    },\n\n    /**\n     * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n     * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n     * @private\n     */\n    updateDatasets: function updateDatasets() {\n      var me = this;\n\n      if (plugins.notify(me, 'beforeDatasetsUpdate') === false) {\n        return;\n      }\n\n      for (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me.updateDataset(i);\n      }\n\n      plugins.notify(me, 'afterDatasetsUpdate');\n    },\n\n    /**\n     * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n     * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n     * @private\n     */\n    updateDataset: function updateDataset(index) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index\n      };\n\n      if (plugins.notify(me, 'beforeDatasetUpdate', [args]) === false) {\n        return;\n      }\n\n      meta.controller.update();\n      plugins.notify(me, 'afterDatasetUpdate', [args]);\n    },\n    render: function render(config) {\n      var me = this;\n\n      if (!config || _typeof(config) !== 'object') {\n        // backwards compatibility\n        config = {\n          duration: config,\n          lazy: arguments[1]\n        };\n      }\n\n      var duration = config.duration;\n      var lazy = config.lazy;\n\n      if (plugins.notify(me, 'beforeRender') === false) {\n        return;\n      }\n\n      var animationOptions = me.options.animation;\n\n      var onComplete = function onComplete(animation) {\n        plugins.notify(me, 'afterRender');\n        helpers.callback(animationOptions && animationOptions.onComplete, [animation], me);\n      };\n\n      if (animationOptions && (typeof duration !== 'undefined' && duration !== 0 || typeof duration === 'undefined' && animationOptions.duration !== 0)) {\n        var animation = new Chart.Animation({\n          numSteps: (duration || animationOptions.duration) / 16.66,\n          // 60 fps\n          easing: config.easing || animationOptions.easing,\n          render: function render(chart, animationObject) {\n            var easingFunction = helpers.easing.effects[animationObject.easing];\n            var currentStep = animationObject.currentStep;\n            var stepDecimal = currentStep / animationObject.numSteps;\n            chart.draw(easingFunction(stepDecimal), stepDecimal, currentStep);\n          },\n          onAnimationProgress: animationOptions.onProgress,\n          onAnimationComplete: onComplete\n        });\n        Chart.animationService.addAnimation(me, animation, duration, lazy);\n      } else {\n        me.draw(); // See https://github.com/chartjs/Chart.js/issues/3781\n\n        onComplete(new Chart.Animation({\n          numSteps: 0,\n          chart: me\n        }));\n      }\n\n      return me;\n    },\n    draw: function draw(easingValue) {\n      var me = this;\n      me.clear();\n\n      if (helpers.isNullOrUndef(easingValue)) {\n        easingValue = 1;\n      }\n\n      me.transition(easingValue);\n\n      if (plugins.notify(me, 'beforeDraw', [easingValue]) === false) {\n        return;\n      } // Draw all the scales\n\n\n      helpers.each(me.boxes, function (box) {\n        box.draw(me.chartArea);\n      }, me);\n\n      if (me.scale) {\n        me.scale.draw();\n      }\n\n      me.drawDatasets(easingValue);\n\n      me._drawTooltip(easingValue);\n\n      plugins.notify(me, 'afterDraw', [easingValue]);\n    },\n\n    /**\n     * @private\n     */\n    transition: function transition(easingValue) {\n      var me = this;\n\n      for (var i = 0, ilen = (me.data.datasets || []).length; i < ilen; ++i) {\n        if (me.isDatasetVisible(i)) {\n          me.getDatasetMeta(i).controller.transition(easingValue);\n        }\n      }\n\n      me.tooltip.transition(easingValue);\n    },\n\n    /**\n     * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n     * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n     * @private\n     */\n    drawDatasets: function drawDatasets(easingValue) {\n      var me = this;\n\n      if (plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {\n        return;\n      } // Draw datasets reversed to support proper line stacking\n\n\n      for (var i = (me.data.datasets || []).length - 1; i >= 0; --i) {\n        if (me.isDatasetVisible(i)) {\n          me.drawDataset(i, easingValue);\n        }\n      }\n\n      plugins.notify(me, 'afterDatasetsDraw', [easingValue]);\n    },\n\n    /**\n     * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n     * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n     * @private\n     */\n    drawDataset: function drawDataset(index, easingValue) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index,\n        easingValue: easingValue\n      };\n\n      if (plugins.notify(me, 'beforeDatasetDraw', [args]) === false) {\n        return;\n      }\n\n      meta.controller.draw(easingValue);\n      plugins.notify(me, 'afterDatasetDraw', [args]);\n    },\n\n    /**\n     * Draws tooltip unless a plugin returns `false` to the `beforeTooltipDraw`\n     * hook, in which case, plugins will not be called on `afterTooltipDraw`.\n     * @private\n     */\n    _drawTooltip: function _drawTooltip(easingValue) {\n      var me = this;\n      var tooltip = me.tooltip;\n      var args = {\n        tooltip: tooltip,\n        easingValue: easingValue\n      };\n\n      if (plugins.notify(me, 'beforeTooltipDraw', [args]) === false) {\n        return;\n      }\n\n      tooltip.draw();\n      plugins.notify(me, 'afterTooltipDraw', [args]);\n    },\n    // Get the single element that was clicked on\n    // @return : An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\n    getElementAtEvent: function getElementAtEvent(e) {\n      return Interaction.modes.single(this, e);\n    },\n    getElementsAtEvent: function getElementsAtEvent(e) {\n      return Interaction.modes.label(this, e, {\n        intersect: true\n      });\n    },\n    getElementsAtXAxis: function getElementsAtXAxis(e) {\n      return Interaction.modes['x-axis'](this, e, {\n        intersect: true\n      });\n    },\n    getElementsAtEventForMode: function getElementsAtEventForMode(e, mode, options) {\n      var method = Interaction.modes[mode];\n\n      if (typeof method === 'function') {\n        return method(this, e, options);\n      }\n\n      return [];\n    },\n    getDatasetAtEvent: function getDatasetAtEvent(e) {\n      return Interaction.modes.dataset(this, e, {\n        intersect: true\n      });\n    },\n    getDatasetMeta: function getDatasetMeta(datasetIndex) {\n      var me = this;\n      var dataset = me.data.datasets[datasetIndex];\n\n      if (!dataset._meta) {\n        dataset._meta = {};\n      }\n\n      var meta = dataset._meta[me.id];\n\n      if (!meta) {\n        meta = dataset._meta[me.id] = {\n          type: null,\n          data: [],\n          dataset: null,\n          controller: null,\n          hidden: null,\n          // See isDatasetVisible() comment\n          xAxisID: null,\n          yAxisID: null\n        };\n      }\n\n      return meta;\n    },\n    getVisibleDatasetCount: function getVisibleDatasetCount() {\n      var count = 0;\n\n      for (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n        if (this.isDatasetVisible(i)) {\n          count++;\n        }\n      }\n\n      return count;\n    },\n    isDatasetVisible: function isDatasetVisible(datasetIndex) {\n      var meta = this.getDatasetMeta(datasetIndex); // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n      // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n\n      return typeof meta.hidden === 'boolean' ? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\n    },\n    generateLegend: function generateLegend() {\n      return this.options.legendCallback(this);\n    },\n\n    /**\n     * @private\n     */\n    destroyDatasetMeta: function destroyDatasetMeta(datasetIndex) {\n      var id = this.id;\n      var dataset = this.data.datasets[datasetIndex];\n      var meta = dataset._meta && dataset._meta[id];\n\n      if (meta) {\n        meta.controller.destroy();\n        delete dataset._meta[id];\n      }\n    },\n    destroy: function destroy() {\n      var me = this;\n      var canvas = me.canvas;\n      var i, ilen;\n      me.stop(); // dataset controllers need to cleanup associated data\n\n      for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me.destroyDatasetMeta(i);\n      }\n\n      if (canvas) {\n        me.unbindEvents();\n        helpers.canvas.clear(me);\n        platform.releaseContext(me.ctx);\n        me.canvas = null;\n        me.ctx = null;\n      }\n\n      plugins.notify(me, 'destroy');\n      delete Chart.instances[me.id];\n    },\n    toBase64Image: function toBase64Image() {\n      return this.canvas.toDataURL.apply(this.canvas, arguments);\n    },\n    initToolTip: function initToolTip() {\n      var me = this;\n      me.tooltip = new Chart.Tooltip({\n        _chart: me,\n        _chartInstance: me,\n        // deprecated, backward compatibility\n        _data: me.data,\n        _options: me.options.tooltips\n      }, me);\n    },\n\n    /**\n     * @private\n     */\n    bindEvents: function bindEvents() {\n      var me = this;\n      var listeners = me._listeners = {};\n\n      var listener = function listener() {\n        me.eventHandler.apply(me, arguments);\n      };\n\n      helpers.each(me.options.events, function (type) {\n        platform.addEventListener(me, type, listener);\n        listeners[type] = listener;\n      }); // Elements used to detect size change should not be injected for non responsive charts.\n      // See https://github.com/chartjs/Chart.js/issues/2210\n\n      if (me.options.responsive) {\n        listener = function listener() {\n          me.resize();\n        };\n\n        platform.addEventListener(me, 'resize', listener);\n        listeners.resize = listener;\n      }\n    },\n\n    /**\n     * @private\n     */\n    unbindEvents: function unbindEvents() {\n      var me = this;\n      var listeners = me._listeners;\n\n      if (!listeners) {\n        return;\n      }\n\n      delete me._listeners;\n      helpers.each(listeners, function (listener, type) {\n        platform.removeEventListener(me, type, listener);\n      });\n    },\n    updateHoverStyle: function updateHoverStyle(elements, mode, enabled) {\n      var method = enabled ? 'setHoverStyle' : 'removeHoverStyle';\n      var element, i, ilen;\n\n      for (i = 0, ilen = elements.length; i < ilen; ++i) {\n        element = elements[i];\n\n        if (element) {\n          this.getDatasetMeta(element._datasetIndex).controller[method](element);\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    eventHandler: function eventHandler(e) {\n      var me = this;\n      var tooltip = me.tooltip;\n\n      if (plugins.notify(me, 'beforeEvent', [e]) === false) {\n        return;\n      } // Buffer any update calls so that renders do not occur\n\n\n      me._bufferedRender = true;\n      me._bufferedRequest = null;\n      var changed = me.handleEvent(e); // for smooth tooltip animations issue #4989\n      // the tooltip should be the source of change\n      // Animation check workaround:\n      // tooltip._start will be null when tooltip isn't animating\n\n      if (tooltip) {\n        changed = tooltip._start ? tooltip.handleEvent(e) : changed | tooltip.handleEvent(e);\n      }\n\n      plugins.notify(me, 'afterEvent', [e]);\n      var bufferedRequest = me._bufferedRequest;\n\n      if (bufferedRequest) {\n        // If we have an update that was triggered, we need to do a normal render\n        me.render(bufferedRequest);\n      } else if (changed && !me.animating) {\n        // If entering, leaving, or changing elements, animate the change via pivot\n        me.stop(); // We only need to render at this point. Updating will cause scales to be\n        // recomputed generating flicker & using more memory than necessary.\n\n        me.render(me.options.hover.animationDuration, true);\n      }\n\n      me._bufferedRender = false;\n      me._bufferedRequest = null;\n      return me;\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event the event to handle\n     * @return {Boolean} true if the chart needs to re-render\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var options = me.options || {};\n      var hoverOptions = options.hover;\n      var changed = false;\n      me.lastActive = me.lastActive || []; // Find Active Elements for hover and tooltips\n\n      if (e.type === 'mouseout') {\n        me.active = [];\n      } else {\n        me.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);\n      } // Invoke onHover hook\n      // Need to call with native event here to not break backwards compatibility\n\n\n      helpers.callback(options.onHover || options.hover.onHover, [e.native, me.active], me);\n\n      if (e.type === 'mouseup' || e.type === 'click') {\n        if (options.onClick) {\n          // Use e.native here for backwards compatibility\n          options.onClick.call(me, e.native, me.active);\n        }\n      } // Remove styling for last active (even if it may still be active)\n\n\n      if (me.lastActive.length) {\n        me.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\n      } // Built in hover styling\n\n\n      if (me.active.length && hoverOptions.mode) {\n        me.updateHoverStyle(me.active, hoverOptions.mode, true);\n      }\n\n      changed = !helpers.arrayEquals(me.active, me.lastActive); // Remember Last Actives\n\n      me.lastActive = me.active;\n      return changed;\n    }\n  });\n  /**\n   * Provided for backward compatibility, use Chart instead.\n   * @class Chart.Controller\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  Chart.Controller = Chart;\n};","'use strict';\n\nvar helpers = require('../helpers/index');\n\nmodule.exports = function (Chart) {\n  var arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\n  /**\n   * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n   * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n   * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.\n   */\n\n  function listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n      array._chartjs.listeners.push(listener);\n\n      return;\n    }\n\n    Object.defineProperty(array, '_chartjs', {\n      configurable: true,\n      enumerable: false,\n      value: {\n        listeners: [listener]\n      }\n    });\n    arrayEvents.forEach(function (key) {\n      var method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);\n      var base = array[key];\n      Object.defineProperty(array, key, {\n        configurable: true,\n        enumerable: false,\n        value: function value() {\n          var args = Array.prototype.slice.call(arguments);\n          var res = base.apply(this, args);\n          helpers.each(array._chartjs.listeners, function (object) {\n            if (typeof object[method] === 'function') {\n              object[method].apply(object, args);\n            }\n          });\n          return res;\n        }\n      });\n    });\n  }\n  /**\n   * Removes the given array event listener and cleanup extra attached properties (such as\n   * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n   */\n\n\n  function unlistenArrayEvents(array, listener) {\n    var stub = array._chartjs;\n\n    if (!stub) {\n      return;\n    }\n\n    var listeners = stub.listeners;\n    var index = listeners.indexOf(listener);\n\n    if (index !== -1) {\n      listeners.splice(index, 1);\n    }\n\n    if (listeners.length > 0) {\n      return;\n    }\n\n    arrayEvents.forEach(function (key) {\n      delete array[key];\n    });\n    delete array._chartjs;\n  } // Base class for all dataset controllers (line, bar, etc)\n\n\n  Chart.DatasetController = function (chart, datasetIndex) {\n    this.initialize(chart, datasetIndex);\n  };\n\n  helpers.extend(Chart.DatasetController.prototype, {\n    /**\n     * Element type used to generate a meta dataset (e.g. Chart.element.Line).\n     * @type {Chart.core.element}\n     */\n    datasetElementType: null,\n\n    /**\n     * Element type used to generate a meta data (e.g. Chart.element.Point).\n     * @type {Chart.core.element}\n     */\n    dataElementType: null,\n    initialize: function initialize(chart, datasetIndex) {\n      var me = this;\n      me.chart = chart;\n      me.index = datasetIndex;\n      me.linkScales();\n      me.addElements();\n    },\n    updateIndex: function updateIndex(datasetIndex) {\n      this.index = datasetIndex;\n    },\n    linkScales: function linkScales() {\n      var me = this;\n      var meta = me.getMeta();\n      var dataset = me.getDataset();\n\n      if (meta.xAxisID === null || !(meta.xAxisID in me.chart.scales)) {\n        meta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\n      }\n\n      if (meta.yAxisID === null || !(meta.yAxisID in me.chart.scales)) {\n        meta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\n      }\n    },\n    getDataset: function getDataset() {\n      return this.chart.data.datasets[this.index];\n    },\n    getMeta: function getMeta() {\n      return this.chart.getDatasetMeta(this.index);\n    },\n    getScaleForId: function getScaleForId(scaleID) {\n      return this.chart.scales[scaleID];\n    },\n    reset: function reset() {\n      this.update(true);\n    },\n\n    /**\n     * @private\n     */\n    destroy: function destroy() {\n      if (this._data) {\n        unlistenArrayEvents(this._data, this);\n      }\n    },\n    createMetaDataset: function createMetaDataset() {\n      var me = this;\n      var type = me.datasetElementType;\n      return type && new type({\n        _chart: me.chart,\n        _datasetIndex: me.index\n      });\n    },\n    createMetaData: function createMetaData(index) {\n      var me = this;\n      var type = me.dataElementType;\n      return type && new type({\n        _chart: me.chart,\n        _datasetIndex: me.index,\n        _index: index\n      });\n    },\n    addElements: function addElements() {\n      var me = this;\n      var meta = me.getMeta();\n      var data = me.getDataset().data || [];\n      var metaData = meta.data;\n      var i, ilen;\n\n      for (i = 0, ilen = data.length; i < ilen; ++i) {\n        metaData[i] = metaData[i] || me.createMetaData(i);\n      }\n\n      meta.dataset = meta.dataset || me.createMetaDataset();\n    },\n    addElementAndReset: function addElementAndReset(index) {\n      var element = this.createMetaData(index);\n      this.getMeta().data.splice(index, 0, element);\n      this.updateElement(element, index, true);\n    },\n    buildOrUpdateElements: function buildOrUpdateElements() {\n      var me = this;\n      var dataset = me.getDataset();\n      var data = dataset.data || (dataset.data = []); // In order to correctly handle data addition/deletion animation (an thus simulate\n      // real-time charts), we need to monitor these data modifications and synchronize\n      // the internal meta data accordingly.\n\n      if (me._data !== data) {\n        if (me._data) {\n          // This case happens when the user replaced the data array instance.\n          unlistenArrayEvents(me._data, me);\n        }\n\n        listenArrayEvents(data, me);\n        me._data = data;\n      } // Re-sync meta data in case the user replaced the data array or if we missed\n      // any updates and so make sure that we handle number of datapoints changing.\n\n\n      me.resyncElements();\n    },\n    update: helpers.noop,\n    transition: function transition(easingValue) {\n      var meta = this.getMeta();\n      var elements = meta.data || [];\n      var ilen = elements.length;\n      var i = 0;\n\n      for (; i < ilen; ++i) {\n        elements[i].transition(easingValue);\n      }\n\n      if (meta.dataset) {\n        meta.dataset.transition(easingValue);\n      }\n    },\n    draw: function draw() {\n      var meta = this.getMeta();\n      var elements = meta.data || [];\n      var ilen = elements.length;\n      var i = 0;\n\n      if (meta.dataset) {\n        meta.dataset.draw();\n      }\n\n      for (; i < ilen; ++i) {\n        elements[i].draw();\n      }\n    },\n    removeHoverStyle: function removeHoverStyle(element, elementOpts) {\n      var dataset = this.chart.data.datasets[element._datasetIndex];\n      var index = element._index;\n      var custom = element.custom || {};\n      var valueOrDefault = helpers.valueAtIndexOrDefault;\n      var model = element._model;\n      model.backgroundColor = custom.backgroundColor ? custom.backgroundColor : valueOrDefault(dataset.backgroundColor, index, elementOpts.backgroundColor);\n      model.borderColor = custom.borderColor ? custom.borderColor : valueOrDefault(dataset.borderColor, index, elementOpts.borderColor);\n      model.borderWidth = custom.borderWidth ? custom.borderWidth : valueOrDefault(dataset.borderWidth, index, elementOpts.borderWidth);\n    },\n    setHoverStyle: function setHoverStyle(element) {\n      var dataset = this.chart.data.datasets[element._datasetIndex];\n      var index = element._index;\n      var custom = element.custom || {};\n      var valueOrDefault = helpers.valueAtIndexOrDefault;\n      var getHoverColor = helpers.getHoverColor;\n      var model = element._model;\n      model.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : valueOrDefault(dataset.hoverBackgroundColor, index, getHoverColor(model.backgroundColor));\n      model.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : valueOrDefault(dataset.hoverBorderColor, index, getHoverColor(model.borderColor));\n      model.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : valueOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);\n    },\n\n    /**\n     * @private\n     */\n    resyncElements: function resyncElements() {\n      var me = this;\n      var meta = me.getMeta();\n      var data = me.getDataset().data;\n      var numMeta = meta.data.length;\n      var numData = data.length;\n\n      if (numData < numMeta) {\n        meta.data.splice(numData, numMeta - numData);\n      } else if (numData > numMeta) {\n        me.insertElements(numMeta, numData - numMeta);\n      }\n    },\n\n    /**\n     * @private\n     */\n    insertElements: function insertElements(start, count) {\n      for (var i = 0; i < count; ++i) {\n        this.addElementAndReset(start + i);\n      }\n    },\n\n    /**\n     * @private\n     */\n    onDataPush: function onDataPush() {\n      this.insertElements(this.getDataset().data.length - 1, arguments.length);\n    },\n\n    /**\n     * @private\n     */\n    onDataPop: function onDataPop() {\n      this.getMeta().data.pop();\n    },\n\n    /**\n     * @private\n     */\n    onDataShift: function onDataShift() {\n      this.getMeta().data.shift();\n    },\n\n    /**\n     * @private\n     */\n    onDataSplice: function onDataSplice(start, count) {\n      this.getMeta().data.splice(start, count);\n      this.insertElements(start, arguments.length - 2);\n    },\n\n    /**\n     * @private\n     */\n    onDataUnshift: function onDataUnshift() {\n      this.insertElements(0, arguments.length);\n    }\n  });\n  Chart.DatasetController.extend = helpers.inherits;\n};","'use strict';\n\nvar defaults = require('./core.defaults');\n\nvar helpers = require('../helpers/index');\n\nvar layouts = require('./core.layouts');\n\nmodule.exports = function (Chart) {\n  Chart.scaleService = {\n    // Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\n    // use the new chart options to grab the correct scale\n    constructors: {},\n    // Use a registration function so that we can move to an ES6 map when we no longer need to support\n    // old browsers\n    // Scale config defaults\n    defaults: {},\n    registerScaleType: function registerScaleType(type, scaleConstructor, scaleDefaults) {\n      this.constructors[type] = scaleConstructor;\n      this.defaults[type] = helpers.clone(scaleDefaults);\n    },\n    getScaleConstructor: function getScaleConstructor(type) {\n      return this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\n    },\n    getScaleDefaults: function getScaleDefaults(type) {\n      // Return the scale defaults merged with the global settings so that we always use the latest ones\n      return this.defaults.hasOwnProperty(type) ? helpers.merge({}, [defaults.scale, this.defaults[type]]) : {};\n    },\n    updateScaleDefaults: function updateScaleDefaults(type, additions) {\n      var me = this;\n\n      if (me.defaults.hasOwnProperty(type)) {\n        me.defaults[type] = helpers.extend(me.defaults[type], additions);\n      }\n    },\n    addScalesToLayout: function addScalesToLayout(chart) {\n      // Adds each scale to the chart.boxes array to be sized accordingly\n      helpers.each(chart.scales, function (scale) {\n        // Set ILayoutItem parameters for backwards compatibility\n        scale.fullWidth = scale.options.fullWidth;\n        scale.position = scale.options.position;\n        scale.weight = scale.options.weight;\n        layouts.addBox(chart, scale);\n      });\n    }\n  };\n};","'use strict';\n\nvar defaults = require('./core.defaults');\n\nvar Element = require('./core.element');\n\nvar helpers = require('../helpers/index');\n\nvar Ticks = require('./core.ticks');\n\ndefaults._set('scale', {\n  display: true,\n  position: 'left',\n  offset: false,\n  // grid line settings\n  gridLines: {\n    display: true,\n    color: 'rgba(0, 0, 0, 0.1)',\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickMarkLength: 10,\n    zeroLineWidth: 1,\n    zeroLineColor: 'rgba(0,0,0,0.25)',\n    zeroLineBorderDash: [],\n    zeroLineBorderDashOffset: 0.0,\n    offsetGridLines: false,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  // scale label\n  scaleLabel: {\n    // display property\n    display: false,\n    // actual label\n    labelString: '',\n    // line height\n    lineHeight: 1.2,\n    // top/bottom padding\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  // label settings\n  ticks: {\n    beginAtZero: false,\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    padding: 0,\n    reverse: false,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 0,\n    labelOffset: 0,\n    // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {}\n  }\n});\n\nfunction labelsFromTicks(ticks) {\n  var labels = [];\n  var i, ilen;\n\n  for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n    labels.push(ticks[i].label);\n  }\n\n  return labels;\n}\n\nfunction getLineValue(scale, index, offsetGridLines) {\n  var lineValue = scale.getPixelForTick(index);\n\n  if (offsetGridLines) {\n    if (index === 0) {\n      lineValue -= (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      lineValue -= (lineValue - scale.getPixelForTick(index - 1)) / 2;\n    }\n  }\n\n  return lineValue;\n}\n\nmodule.exports = function (Chart) {\n  function computeTextSize(context, tick, font) {\n    return helpers.isArray(tick) ? helpers.longestText(context, font, tick) : context.measureText(tick).width;\n  }\n\n  function parseFontOptions(options) {\n    var valueOrDefault = helpers.valueOrDefault;\n    var globalDefaults = defaults.global;\n    var size = valueOrDefault(options.fontSize, globalDefaults.defaultFontSize);\n    var style = valueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle);\n    var family = valueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily);\n    return {\n      size: size,\n      style: style,\n      family: family,\n      font: helpers.fontString(size, style, family)\n    };\n  }\n\n  function parseLineHeight(options) {\n    return helpers.options.toLineHeight(helpers.valueOrDefault(options.lineHeight, 1.2), helpers.valueOrDefault(options.fontSize, defaults.global.defaultFontSize));\n  }\n\n  Chart.Scale = Element.extend({\n    /**\n     * Get the padding needed for the scale\n     * @method getPadding\n     * @private\n     * @returns {Padding} the necessary padding\n     */\n    getPadding: function getPadding() {\n      var me = this;\n      return {\n        left: me.paddingLeft || 0,\n        top: me.paddingTop || 0,\n        right: me.paddingRight || 0,\n        bottom: me.paddingBottom || 0\n      };\n    },\n\n    /**\n     * Returns the scale tick objects ({label, major})\n     * @since 2.7\n     */\n    getTicks: function getTicks() {\n      return this._ticks;\n    },\n    // These methods are ordered by lifecyle. Utilities then follow.\n    // Any function defined here is inherited by all scale types.\n    // Any function can be extended by the scale type\n    mergeTicksOptions: function mergeTicksOptions() {\n      var ticks = this.options.ticks;\n\n      if (ticks.minor === false) {\n        ticks.minor = {\n          display: false\n        };\n      }\n\n      if (ticks.major === false) {\n        ticks.major = {\n          display: false\n        };\n      }\n\n      for (var key in ticks) {\n        if (key !== 'major' && key !== 'minor') {\n          if (typeof ticks.minor[key] === 'undefined') {\n            ticks.minor[key] = ticks[key];\n          }\n\n          if (typeof ticks.major[key] === 'undefined') {\n            ticks.major[key] = ticks[key];\n          }\n        }\n      }\n    },\n    beforeUpdate: function beforeUpdate() {\n      helpers.callback(this.options.beforeUpdate, [this]);\n    },\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this;\n      var i, ilen, labels, label, ticks, tick; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = helpers.extend({\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0\n      }, margins);\n      me.longestTextCache = me.longestTextCache || {}; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Data min/max\n\n      me.beforeDataLimits();\n      me.determineDataLimits();\n      me.afterDataLimits(); // Ticks - `this.ticks` is now DEPRECATED!\n      // Internal ticks are now stored as objects in the PRIVATE `this._ticks` member\n      // and must not be accessed directly from outside this class. `this.ticks` being\n      // around for long time and not marked as private, we can't change its structure\n      // without unexpected breaking changes. If you need to access the scale ticks,\n      // use scale.getTicks() instead.\n\n      me.beforeBuildTicks(); // New implementations should return an array of objects but for BACKWARD COMPAT,\n      // we still support no return (`this.ticks` internally set by calling this method).\n\n      ticks = me.buildTicks() || [];\n      me.afterBuildTicks();\n      me.beforeTickToLabelConversion(); // New implementations should return the formatted tick labels but for BACKWARD\n      // COMPAT, we still support no return (`this.ticks` internally changed by calling\n      // this method and supposed to contain only string values).\n\n      labels = me.convertTicksToLabels(ticks) || me.ticks;\n      me.afterTickToLabelConversion();\n      me.ticks = labels; // BACKWARD COMPATIBILITY\n      // IMPORTANT: from this point, we consider that `this.ticks` will NEVER change!\n      // BACKWARD COMPAT: synchronize `_ticks` with labels (so potentially `this.ticks`)\n\n      for (i = 0, ilen = labels.length; i < ilen; ++i) {\n        label = labels[i];\n        tick = ticks[i];\n\n        if (!tick) {\n          ticks.push(tick = {\n            label: label,\n            major: false\n          });\n        } else {\n          tick.label = label;\n        }\n      }\n\n      me._ticks = ticks; // Tick Rotation\n\n      me.beforeCalculateTickRotation();\n      me.calculateTickRotation();\n      me.afterCalculateTickRotation(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: function afterUpdate() {\n      helpers.callback(this.options.afterUpdate, [this]);\n    },\n    //\n    beforeSetDimensions: function beforeSetDimensions() {\n      helpers.callback(this.options.beforeSetDimensions, [this]);\n    },\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0;\n    },\n    afterSetDimensions: function afterSetDimensions() {\n      helpers.callback(this.options.afterSetDimensions, [this]);\n    },\n    // Data limits\n    beforeDataLimits: function beforeDataLimits() {\n      helpers.callback(this.options.beforeDataLimits, [this]);\n    },\n    determineDataLimits: helpers.noop,\n    afterDataLimits: function afterDataLimits() {\n      helpers.callback(this.options.afterDataLimits, [this]);\n    },\n    //\n    beforeBuildTicks: function beforeBuildTicks() {\n      helpers.callback(this.options.beforeBuildTicks, [this]);\n    },\n    buildTicks: helpers.noop,\n    afterBuildTicks: function afterBuildTicks() {\n      helpers.callback(this.options.afterBuildTicks, [this]);\n    },\n    beforeTickToLabelConversion: function beforeTickToLabelConversion() {\n      helpers.callback(this.options.beforeTickToLabelConversion, [this]);\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this; // Convert ticks to strings\n\n      var tickOpts = me.options.ticks;\n      me.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback, this);\n    },\n    afterTickToLabelConversion: function afterTickToLabelConversion() {\n      helpers.callback(this.options.afterTickToLabelConversion, [this]);\n    },\n    //\n    beforeCalculateTickRotation: function beforeCalculateTickRotation() {\n      helpers.callback(this.options.beforeCalculateTickRotation, [this]);\n    },\n    calculateTickRotation: function calculateTickRotation() {\n      var me = this;\n      var context = me.ctx;\n      var tickOpts = me.options.ticks;\n      var labels = labelsFromTicks(me._ticks); // Get the width of each grid by calculating the difference\n      // between x offsets between 0 and 1.\n\n      var tickFont = parseFontOptions(tickOpts);\n      context.font = tickFont.font;\n      var labelRotation = tickOpts.minRotation || 0;\n\n      if (labels.length && me.options.display && me.isHorizontal()) {\n        var originalLabelWidth = helpers.longestText(context, tickFont.font, labels, me.longestTextCache);\n        var labelWidth = originalLabelWidth;\n        var cosRotation, sinRotation; // Allow 3 pixels x2 padding either side for label readability\n\n        var tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6; // Max label rotation can be set or default to 90 - also act as a loop counter\n\n        while (labelWidth > tickWidth && labelRotation < tickOpts.maxRotation) {\n          var angleRadians = helpers.toRadians(labelRotation);\n          cosRotation = Math.cos(angleRadians);\n          sinRotation = Math.sin(angleRadians);\n\n          if (sinRotation * originalLabelWidth > me.maxHeight) {\n            // go back one step\n            labelRotation--;\n            break;\n          }\n\n          labelRotation++;\n          labelWidth = cosRotation * originalLabelWidth;\n        }\n      }\n\n      me.labelRotation = labelRotation;\n    },\n    afterCalculateTickRotation: function afterCalculateTickRotation() {\n      helpers.callback(this.options.afterCalculateTickRotation, [this]);\n    },\n    //\n    beforeFit: function beforeFit() {\n      helpers.callback(this.options.beforeFit, [this]);\n    },\n    fit: function fit() {\n      var me = this; // Reset\n\n      var minSize = me.minSize = {\n        width: 0,\n        height: 0\n      };\n      var labels = labelsFromTicks(me._ticks);\n      var opts = me.options;\n      var tickOpts = opts.ticks;\n      var scaleLabelOpts = opts.scaleLabel;\n      var gridLineOpts = opts.gridLines;\n      var display = opts.display;\n      var isHorizontal = me.isHorizontal();\n      var tickFont = parseFontOptions(tickOpts);\n      var tickMarkLength = opts.gridLines.tickMarkLength; // Width\n\n      if (isHorizontal) {\n        // subtract the margins to line up with the chartArea if we are a full width scale\n        minSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;\n      } else {\n        minSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n      } // height\n\n\n      if (isHorizontal) {\n        minSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n      } else {\n        minSize.height = me.maxHeight; // fill all the height\n      } // Are we showing a title for the scale?\n\n\n      if (scaleLabelOpts.display && display) {\n        var scaleLabelLineHeight = parseLineHeight(scaleLabelOpts);\n        var scaleLabelPadding = helpers.options.toPadding(scaleLabelOpts.padding);\n        var deltaHeight = scaleLabelLineHeight + scaleLabelPadding.height;\n\n        if (isHorizontal) {\n          minSize.height += deltaHeight;\n        } else {\n          minSize.width += deltaHeight;\n        }\n      } // Don't bother fitting the ticks if we are not showing them\n\n\n      if (tickOpts.display && display) {\n        var largestTextWidth = helpers.longestText(me.ctx, tickFont.font, labels, me.longestTextCache);\n        var tallestLabelHeightInLines = helpers.numberOfLabelLines(labels);\n        var lineSpace = tickFont.size * 0.5;\n        var tickPadding = me.options.ticks.padding;\n\n        if (isHorizontal) {\n          // A horizontal axis is more constrained by the height.\n          me.longestLabelWidth = largestTextWidth;\n          var angleRadians = helpers.toRadians(me.labelRotation);\n          var cosRotation = Math.cos(angleRadians);\n          var sinRotation = Math.sin(angleRadians); // TODO - improve this calculation\n\n          var labelHeight = sinRotation * largestTextWidth + tickFont.size * tallestLabelHeightInLines + lineSpace * (tallestLabelHeightInLines - 1) + lineSpace; // padding\n\n          minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n          me.ctx.font = tickFont.font;\n          var firstLabelWidth = computeTextSize(me.ctx, labels[0], tickFont.font);\n          var lastLabelWidth = computeTextSize(me.ctx, labels[labels.length - 1], tickFont.font); // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n          // which means that the right padding is dominated by the font height\n\n          if (me.labelRotation !== 0) {\n            me.paddingLeft = opts.position === 'bottom' ? cosRotation * firstLabelWidth + 3 : cosRotation * lineSpace + 3; // add 3 px to move away from canvas edges\n\n            me.paddingRight = opts.position === 'bottom' ? cosRotation * lineSpace + 3 : cosRotation * lastLabelWidth + 3;\n          } else {\n            me.paddingLeft = firstLabelWidth / 2 + 3; // add 3 px to move away from canvas edges\n\n            me.paddingRight = lastLabelWidth / 2 + 3;\n          }\n        } else {\n          // A vertical axis is more constrained by the width. Labels are the\n          // dominant factor here, so get that length first and account for padding\n          if (tickOpts.mirror) {\n            largestTextWidth = 0;\n          } else {\n            // use lineSpace for consistency with horizontal axis\n            // tickPadding is not implemented for horizontal\n            largestTextWidth += tickPadding + lineSpace;\n          }\n\n          minSize.width = Math.min(me.maxWidth, minSize.width + largestTextWidth);\n          me.paddingTop = tickFont.size / 2;\n          me.paddingBottom = tickFont.size / 2;\n        }\n      }\n\n      me.handleMargins();\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n\n    /**\n     * Handle margins and padding interactions\n     * @private\n     */\n    handleMargins: function handleMargins() {\n      var me = this;\n\n      if (me.margins) {\n        me.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\n        me.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);\n        me.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\n        me.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);\n      }\n    },\n    afterFit: function afterFit() {\n      helpers.callback(this.options.afterFit, [this]);\n    },\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      return this.options.position === 'top' || this.options.position === 'bottom';\n    },\n    isFullWidth: function isFullWidth() {\n      return this.options.fullWidth;\n    },\n    // Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not\n    getRightValue: function getRightValue(rawValue) {\n      // Null and undefined values first\n      if (helpers.isNullOrUndef(rawValue)) {\n        return NaN;\n      } // isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values\n\n\n      if (typeof rawValue === 'number' && !isFinite(rawValue)) {\n        return NaN;\n      } // If it is in fact an object, dive in one more level\n\n\n      if (rawValue) {\n        if (this.isHorizontal()) {\n          if (rawValue.x !== undefined) {\n            return this.getRightValue(rawValue.x);\n          }\n        } else if (rawValue.y !== undefined) {\n          return this.getRightValue(rawValue.y);\n        }\n      } // Value is good, return it\n\n\n      return rawValue;\n    },\n\n    /**\n     * Used to get the value to display in the tooltip for the data at the given index\n     * @param index\n     * @param datasetIndex\n     */\n    getLabelForIndex: helpers.noop,\n\n    /**\n     * Returns the location of the given data point. Value can either be an index or a numerical value\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     * @param value\n     * @param index\n     * @param datasetIndex\n     */\n    getPixelForValue: helpers.noop,\n\n    /**\n     * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     * @param pixel\n     */\n    getValueForPixel: helpers.noop,\n\n    /**\n     * Returns the location of the tick at the given index\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getPixelForTick: function getPixelForTick(index) {\n      var me = this;\n      var offset = me.options.offset;\n\n      if (me.isHorizontal()) {\n        var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n        var tickWidth = innerWidth / Math.max(me._ticks.length - (offset ? 0 : 1), 1);\n        var pixel = tickWidth * index + me.paddingLeft;\n\n        if (offset) {\n          pixel += tickWidth / 2;\n        }\n\n        var finalVal = me.left + Math.round(pixel);\n        finalVal += me.isFullWidth() ? me.margins.left : 0;\n        return finalVal;\n      }\n\n      var innerHeight = me.height - (me.paddingTop + me.paddingBottom);\n      return me.top + index * (innerHeight / (me._ticks.length - 1));\n    },\n\n    /**\n     * Utility for getting the pixel location of a percentage of scale\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getPixelForDecimal: function getPixelForDecimal(decimal) {\n      var me = this;\n\n      if (me.isHorizontal()) {\n        var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n        var valueOffset = innerWidth * decimal + me.paddingLeft;\n        var finalVal = me.left + Math.round(valueOffset);\n        finalVal += me.isFullWidth() ? me.margins.left : 0;\n        return finalVal;\n      }\n\n      return me.top + decimal * me.height;\n    },\n\n    /**\n     * Returns the pixel for the minimum chart value\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getBasePixel: function getBasePixel() {\n      return this.getPixelForValue(this.getBaseValue());\n    },\n    getBaseValue: function getBaseValue() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      return me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    },\n\n    /**\n     * Returns a subset of ticks to be plotted to avoid overlapping labels.\n     * @private\n     */\n    _autoSkip: function _autoSkip(ticks) {\n      var skipRatio;\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var optionTicks = me.options.ticks.minor;\n      var tickCount = ticks.length;\n      var labelRotationRadians = helpers.toRadians(me.labelRotation);\n      var cosRotation = Math.cos(labelRotationRadians);\n      var longestRotatedLabel = me.longestLabelWidth * cosRotation;\n      var result = [];\n      var i, tick, shouldSkip; // figure out the maximum number of gridlines to show\n\n      var maxTicks;\n\n      if (optionTicks.maxTicksLimit) {\n        maxTicks = optionTicks.maxTicksLimit;\n      }\n\n      if (isHorizontal) {\n        skipRatio = false;\n\n        if ((longestRotatedLabel + optionTicks.autoSkipPadding) * tickCount > me.width - (me.paddingLeft + me.paddingRight)) {\n          skipRatio = 1 + Math.floor((longestRotatedLabel + optionTicks.autoSkipPadding) * tickCount / (me.width - (me.paddingLeft + me.paddingRight)));\n        } // if they defined a max number of optionTicks,\n        // increase skipRatio until that number is met\n\n\n        if (maxTicks && tickCount > maxTicks) {\n          skipRatio = Math.max(skipRatio, Math.floor(tickCount / maxTicks));\n        }\n      }\n\n      for (i = 0; i < tickCount; i++) {\n        tick = ticks[i]; // Since we always show the last tick,we need may need to hide the last shown one before\n\n        shouldSkip = skipRatio > 1 && i % skipRatio > 0 || i % skipRatio === 0 && i + skipRatio >= tickCount;\n\n        if (shouldSkip && i !== tickCount - 1) {\n          // leave tick in place but make sure it's not displayed (#4635)\n          delete tick.label;\n        }\n\n        result.push(tick);\n      }\n\n      return result;\n    },\n    // Actually draw the scale on the canvas\n    // @param {rectangle} chartArea : the area of the chart to draw full grid lines on\n    draw: function draw(chartArea) {\n      var me = this;\n      var options = me.options;\n\n      if (!options.display) {\n        return;\n      }\n\n      var context = me.ctx;\n      var globalDefaults = defaults.global;\n      var optionTicks = options.ticks.minor;\n      var optionMajorTicks = options.ticks.major || optionTicks;\n      var gridLines = options.gridLines;\n      var scaleLabel = options.scaleLabel;\n      var isRotated = me.labelRotation !== 0;\n      var isHorizontal = me.isHorizontal();\n      var ticks = optionTicks.autoSkip ? me._autoSkip(me.getTicks()) : me.getTicks();\n      var tickFontColor = helpers.valueOrDefault(optionTicks.fontColor, globalDefaults.defaultFontColor);\n      var tickFont = parseFontOptions(optionTicks);\n      var majorTickFontColor = helpers.valueOrDefault(optionMajorTicks.fontColor, globalDefaults.defaultFontColor);\n      var majorTickFont = parseFontOptions(optionMajorTicks);\n      var tl = gridLines.drawTicks ? gridLines.tickMarkLength : 0;\n      var scaleLabelFontColor = helpers.valueOrDefault(scaleLabel.fontColor, globalDefaults.defaultFontColor);\n      var scaleLabelFont = parseFontOptions(scaleLabel);\n      var scaleLabelPadding = helpers.options.toPadding(scaleLabel.padding);\n      var labelRotationRadians = helpers.toRadians(me.labelRotation);\n      var itemsToDraw = [];\n      var axisWidth = me.options.gridLines.lineWidth;\n      var xTickStart = options.position === 'right' ? me.right : me.right - axisWidth - tl;\n      var xTickEnd = options.position === 'right' ? me.right + tl : me.right;\n      var yTickStart = options.position === 'bottom' ? me.top + axisWidth : me.bottom - tl - axisWidth;\n      var yTickEnd = options.position === 'bottom' ? me.top + axisWidth + tl : me.bottom + axisWidth;\n      helpers.each(ticks, function (tick, index) {\n        // autoskipper skipped this tick (#4635)\n        if (helpers.isNullOrUndef(tick.label)) {\n          return;\n        }\n\n        var label = tick.label;\n        var lineWidth, lineColor, borderDash, borderDashOffset;\n\n        if (index === me.zeroLineIndex && options.offset === gridLines.offsetGridLines) {\n          // Draw the first index specially\n          lineWidth = gridLines.zeroLineWidth;\n          lineColor = gridLines.zeroLineColor;\n          borderDash = gridLines.zeroLineBorderDash;\n          borderDashOffset = gridLines.zeroLineBorderDashOffset;\n        } else {\n          lineWidth = helpers.valueAtIndexOrDefault(gridLines.lineWidth, index);\n          lineColor = helpers.valueAtIndexOrDefault(gridLines.color, index);\n          borderDash = helpers.valueOrDefault(gridLines.borderDash, globalDefaults.borderDash);\n          borderDashOffset = helpers.valueOrDefault(gridLines.borderDashOffset, globalDefaults.borderDashOffset);\n        } // Common properties\n\n\n        var tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY;\n        var textAlign = 'middle';\n        var textBaseline = 'middle';\n        var tickPadding = optionTicks.padding;\n\n        if (isHorizontal) {\n          var labelYOffset = tl + tickPadding;\n\n          if (options.position === 'bottom') {\n            // bottom\n            textBaseline = !isRotated ? 'top' : 'middle';\n            textAlign = !isRotated ? 'center' : 'right';\n            labelY = me.top + labelYOffset;\n          } else {\n            // top\n            textBaseline = !isRotated ? 'bottom' : 'middle';\n            textAlign = !isRotated ? 'center' : 'left';\n            labelY = me.bottom - labelYOffset;\n          }\n\n          var xLineValue = getLineValue(me, index, gridLines.offsetGridLines && ticks.length > 1);\n\n          if (xLineValue < me.left) {\n            lineColor = 'rgba(0,0,0,0)';\n          }\n\n          xLineValue += helpers.aliasPixel(lineWidth);\n          labelX = me.getPixelForTick(index) + optionTicks.labelOffset; // x values for optionTicks (need to consider offsetLabel option)\n\n          tx1 = tx2 = x1 = x2 = xLineValue;\n          ty1 = yTickStart;\n          ty2 = yTickEnd;\n          y1 = chartArea.top;\n          y2 = chartArea.bottom + axisWidth;\n        } else {\n          var isLeft = options.position === 'left';\n          var labelXOffset;\n\n          if (optionTicks.mirror) {\n            textAlign = isLeft ? 'left' : 'right';\n            labelXOffset = tickPadding;\n          } else {\n            textAlign = isLeft ? 'right' : 'left';\n            labelXOffset = tl + tickPadding;\n          }\n\n          labelX = isLeft ? me.right - labelXOffset : me.left + labelXOffset;\n          var yLineValue = getLineValue(me, index, gridLines.offsetGridLines && ticks.length > 1);\n\n          if (yLineValue < me.top) {\n            lineColor = 'rgba(0,0,0,0)';\n          }\n\n          yLineValue += helpers.aliasPixel(lineWidth);\n          labelY = me.getPixelForTick(index) + optionTicks.labelOffset;\n          tx1 = xTickStart;\n          tx2 = xTickEnd;\n          x1 = chartArea.left;\n          x2 = chartArea.right + axisWidth;\n          ty1 = ty2 = y1 = y2 = yLineValue;\n        }\n\n        itemsToDraw.push({\n          tx1: tx1,\n          ty1: ty1,\n          tx2: tx2,\n          ty2: ty2,\n          x1: x1,\n          y1: y1,\n          x2: x2,\n          y2: y2,\n          labelX: labelX,\n          labelY: labelY,\n          glWidth: lineWidth,\n          glColor: lineColor,\n          glBorderDash: borderDash,\n          glBorderDashOffset: borderDashOffset,\n          rotation: -1 * labelRotationRadians,\n          label: label,\n          major: tick.major,\n          textBaseline: textBaseline,\n          textAlign: textAlign\n        });\n      }); // Draw all of the tick labels, tick marks, and grid lines at the correct places\n\n      helpers.each(itemsToDraw, function (itemToDraw) {\n        if (gridLines.display) {\n          context.save();\n          context.lineWidth = itemToDraw.glWidth;\n          context.strokeStyle = itemToDraw.glColor;\n\n          if (context.setLineDash) {\n            context.setLineDash(itemToDraw.glBorderDash);\n            context.lineDashOffset = itemToDraw.glBorderDashOffset;\n          }\n\n          context.beginPath();\n\n          if (gridLines.drawTicks) {\n            context.moveTo(itemToDraw.tx1, itemToDraw.ty1);\n            context.lineTo(itemToDraw.tx2, itemToDraw.ty2);\n          }\n\n          if (gridLines.drawOnChartArea) {\n            context.moveTo(itemToDraw.x1, itemToDraw.y1);\n            context.lineTo(itemToDraw.x2, itemToDraw.y2);\n          }\n\n          context.stroke();\n          context.restore();\n        }\n\n        if (optionTicks.display) {\n          // Make sure we draw text in the correct color and font\n          context.save();\n          context.translate(itemToDraw.labelX, itemToDraw.labelY);\n          context.rotate(itemToDraw.rotation);\n          context.font = itemToDraw.major ? majorTickFont.font : tickFont.font;\n          context.fillStyle = itemToDraw.major ? majorTickFontColor : tickFontColor;\n          context.textBaseline = itemToDraw.textBaseline;\n          context.textAlign = itemToDraw.textAlign;\n          var label = itemToDraw.label;\n\n          if (helpers.isArray(label)) {\n            var lineCount = label.length;\n            var lineHeight = tickFont.size * 1.5;\n            var y = me.isHorizontal() ? 0 : -lineHeight * (lineCount - 1) / 2;\n\n            for (var i = 0; i < lineCount; ++i) {\n              // We just make sure the multiline element is a string here..\n              context.fillText('' + label[i], 0, y); // apply same lineSpacing as calculated @ L#320\n\n              y += lineHeight;\n            }\n          } else {\n            context.fillText(label, 0, 0);\n          }\n\n          context.restore();\n        }\n      });\n\n      if (scaleLabel.display) {\n        // Draw the scale label\n        var scaleLabelX;\n        var scaleLabelY;\n        var rotation = 0;\n        var halfLineHeight = parseLineHeight(scaleLabel) / 2;\n\n        if (isHorizontal) {\n          scaleLabelX = me.left + (me.right - me.left) / 2; // midpoint of the width\n\n          scaleLabelY = options.position === 'bottom' ? me.bottom - halfLineHeight - scaleLabelPadding.bottom : me.top + halfLineHeight + scaleLabelPadding.top;\n        } else {\n          var isLeft = options.position === 'left';\n          scaleLabelX = isLeft ? me.left + halfLineHeight + scaleLabelPadding.top : me.right - halfLineHeight - scaleLabelPadding.top;\n          scaleLabelY = me.top + (me.bottom - me.top) / 2;\n          rotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;\n        }\n\n        context.save();\n        context.translate(scaleLabelX, scaleLabelY);\n        context.rotate(rotation);\n        context.textAlign = 'center';\n        context.textBaseline = 'middle';\n        context.fillStyle = scaleLabelFontColor; // render in correct colour\n\n        context.font = scaleLabelFont.font;\n        context.fillText(scaleLabel.labelString, 0, 0);\n        context.restore();\n      }\n\n      if (gridLines.drawBorder) {\n        // Draw the line at the edge of the axis\n        context.lineWidth = helpers.valueAtIndexOrDefault(gridLines.lineWidth, 0);\n        context.strokeStyle = helpers.valueAtIndexOrDefault(gridLines.color, 0);\n        var x1 = me.left;\n        var x2 = me.right + axisWidth;\n        var y1 = me.top;\n        var y2 = me.bottom + axisWidth;\n        var aliasPixel = helpers.aliasPixel(context.lineWidth);\n\n        if (isHorizontal) {\n          y1 = y2 = options.position === 'top' ? me.bottom : me.top;\n          y1 += aliasPixel;\n          y2 += aliasPixel;\n        } else {\n          x1 = x2 = options.position === 'left' ? me.right : me.left;\n          x1 += aliasPixel;\n          x2 += aliasPixel;\n        }\n\n        context.beginPath();\n        context.moveTo(x1, y1);\n        context.lineTo(x2, y2);\n        context.stroke();\n      }\n    }\n  });\n};","'use strict';\n\nvar defaults = require('./core.defaults');\n\nvar Element = require('./core.element');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n  tooltips: {\n    enabled: true,\n    custom: null,\n    mode: 'nearest',\n    position: 'average',\n    intersect: true,\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleFontStyle: 'bold',\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleFontColor: '#fff',\n    titleAlign: 'left',\n    bodySpacing: 2,\n    bodyFontColor: '#fff',\n    bodyAlign: 'left',\n    footerFontStyle: 'bold',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFontColor: '#fff',\n    footerAlign: 'left',\n    yPadding: 6,\n    xPadding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    callbacks: {\n      // Args are: (tooltipItems, data)\n      beforeTitle: helpers.noop,\n      title: function title(tooltipItems, data) {\n        // Pick first xLabel for now\n        var title = '';\n        var labels = data.labels;\n        var labelCount = labels ? labels.length : 0;\n\n        if (tooltipItems.length > 0) {\n          var item = tooltipItems[0];\n\n          if (item.xLabel) {\n            title = item.xLabel;\n          } else if (labelCount > 0 && item.index < labelCount) {\n            title = labels[item.index];\n          }\n        }\n\n        return title;\n      },\n      afterTitle: helpers.noop,\n      // Args are: (tooltipItems, data)\n      beforeBody: helpers.noop,\n      // Args are: (tooltipItem, data)\n      beforeLabel: helpers.noop,\n      label: function label(tooltipItem, data) {\n        var label = data.datasets[tooltipItem.datasetIndex].label || '';\n\n        if (label) {\n          label += ': ';\n        }\n\n        label += tooltipItem.yLabel;\n        return label;\n      },\n      labelColor: function labelColor(tooltipItem, chart) {\n        var meta = chart.getDatasetMeta(tooltipItem.datasetIndex);\n        var activeElement = meta.data[tooltipItem.index];\n        var view = activeElement._view;\n        return {\n          borderColor: view.borderColor,\n          backgroundColor: view.backgroundColor\n        };\n      },\n      labelTextColor: function labelTextColor() {\n        return this._options.bodyFontColor;\n      },\n      afterLabel: helpers.noop,\n      // Args are: (tooltipItems, data)\n      afterBody: helpers.noop,\n      // Args are: (tooltipItems, data)\n      beforeFooter: helpers.noop,\n      footer: helpers.noop,\n      afterFooter: helpers.noop\n    }\n  }\n});\n\nmodule.exports = function (Chart) {\n  /**\n  \t * Helper method to merge the opacity into a color\n  \t */\n  function mergeOpacity(colorString, opacity) {\n    var color = helpers.color(colorString);\n    return color.alpha(opacity * color.alpha()).rgbaString();\n  } // Helper to push or concat based on if the 2nd parameter is an array or not\n\n\n  function pushOrConcat(base, toPush) {\n    if (toPush) {\n      if (helpers.isArray(toPush)) {\n        // base = base.concat(toPush);\n        Array.prototype.push.apply(base, toPush);\n      } else {\n        base.push(toPush);\n      }\n    }\n\n    return base;\n  } // Private helper to create a tooltip item model\n  // @param element : the chart element (point, arc, bar) to create the tooltip item for\n  // @return : new tooltip item\n\n\n  function createTooltipItem(element) {\n    var xScale = element._xScale;\n    var yScale = element._yScale || element._scale; // handle radar || polarArea charts\n\n    var index = element._index;\n    var datasetIndex = element._datasetIndex;\n    return {\n      xLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',\n      yLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',\n      index: index,\n      datasetIndex: datasetIndex,\n      x: element._model.x,\n      y: element._model.y\n    };\n  }\n  /**\n   * Helper to get the reset model for the tooltip\n   * @param tooltipOpts {Object} the tooltip options\n   */\n\n\n  function getBaseModel(tooltipOpts) {\n    var globalDefaults = defaults.global;\n    var valueOrDefault = helpers.valueOrDefault;\n    return {\n      // Positioning\n      xPadding: tooltipOpts.xPadding,\n      yPadding: tooltipOpts.yPadding,\n      xAlign: tooltipOpts.xAlign,\n      yAlign: tooltipOpts.yAlign,\n      // Body\n      bodyFontColor: tooltipOpts.bodyFontColor,\n      _bodyFontFamily: valueOrDefault(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),\n      _bodyFontStyle: valueOrDefault(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),\n      _bodyAlign: tooltipOpts.bodyAlign,\n      bodyFontSize: valueOrDefault(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),\n      bodySpacing: tooltipOpts.bodySpacing,\n      // Title\n      titleFontColor: tooltipOpts.titleFontColor,\n      _titleFontFamily: valueOrDefault(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),\n      _titleFontStyle: valueOrDefault(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),\n      titleFontSize: valueOrDefault(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),\n      _titleAlign: tooltipOpts.titleAlign,\n      titleSpacing: tooltipOpts.titleSpacing,\n      titleMarginBottom: tooltipOpts.titleMarginBottom,\n      // Footer\n      footerFontColor: tooltipOpts.footerFontColor,\n      _footerFontFamily: valueOrDefault(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),\n      _footerFontStyle: valueOrDefault(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),\n      footerFontSize: valueOrDefault(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),\n      _footerAlign: tooltipOpts.footerAlign,\n      footerSpacing: tooltipOpts.footerSpacing,\n      footerMarginTop: tooltipOpts.footerMarginTop,\n      // Appearance\n      caretSize: tooltipOpts.caretSize,\n      cornerRadius: tooltipOpts.cornerRadius,\n      backgroundColor: tooltipOpts.backgroundColor,\n      opacity: 0,\n      legendColorBackground: tooltipOpts.multiKeyBackground,\n      displayColors: tooltipOpts.displayColors,\n      borderColor: tooltipOpts.borderColor,\n      borderWidth: tooltipOpts.borderWidth\n    };\n  }\n  /**\n   * Get the size of the tooltip\n   */\n\n\n  function getTooltipSize(tooltip, model) {\n    var ctx = tooltip._chart.ctx;\n    var height = model.yPadding * 2; // Tooltip Padding\n\n    var width = 0; // Count of all lines in the body\n\n    var body = model.body;\n    var combinedBodyLength = body.reduce(function (count, bodyItem) {\n      return count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n    }, 0);\n    combinedBodyLength += model.beforeBody.length + model.afterBody.length;\n    var titleLineCount = model.title.length;\n    var footerLineCount = model.footer.length;\n    var titleFontSize = model.titleFontSize;\n    var bodyFontSize = model.bodyFontSize;\n    var footerFontSize = model.footerFontSize;\n    height += titleLineCount * titleFontSize; // Title Lines\n\n    height += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing\n\n    height += titleLineCount ? model.titleMarginBottom : 0; // Title's bottom Margin\n\n    height += combinedBodyLength * bodyFontSize; // Body Lines\n\n    height += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing\n\n    height += footerLineCount ? model.footerMarginTop : 0; // Footer Margin\n\n    height += footerLineCount * footerFontSize; // Footer Lines\n\n    height += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing\n    // Title width\n\n    var widthPadding = 0;\n\n    var maxLineWidth = function maxLineWidth(line) {\n      width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n\n    ctx.font = helpers.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);\n    helpers.each(model.title, maxLineWidth); // Body width\n\n    ctx.font = helpers.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);\n    helpers.each(model.beforeBody.concat(model.afterBody), maxLineWidth); // Body lines may include some extra width due to the color box\n\n    widthPadding = model.displayColors ? bodyFontSize + 2 : 0;\n    helpers.each(body, function (bodyItem) {\n      helpers.each(bodyItem.before, maxLineWidth);\n      helpers.each(bodyItem.lines, maxLineWidth);\n      helpers.each(bodyItem.after, maxLineWidth);\n    }); // Reset back to 0\n\n    widthPadding = 0; // Footer width\n\n    ctx.font = helpers.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);\n    helpers.each(model.footer, maxLineWidth); // Add padding\n\n    width += 2 * model.xPadding;\n    return {\n      width: width,\n      height: height\n    };\n  }\n  /**\n   * Helper to get the alignment of a tooltip given the size\n   */\n\n\n  function determineAlignment(tooltip, size) {\n    var model = tooltip._model;\n    var chart = tooltip._chart;\n    var chartArea = tooltip._chart.chartArea;\n    var xAlign = 'center';\n    var yAlign = 'center';\n\n    if (model.y < size.height) {\n      yAlign = 'top';\n    } else if (model.y > chart.height - size.height) {\n      yAlign = 'bottom';\n    }\n\n    var lf, rf; // functions to determine left, right alignment\n\n    var olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart\n\n    var yf; // function to get the y alignment if the tooltip goes outside of the left or right edges\n\n    var midX = (chartArea.left + chartArea.right) / 2;\n    var midY = (chartArea.top + chartArea.bottom) / 2;\n\n    if (yAlign === 'center') {\n      lf = function lf(x) {\n        return x <= midX;\n      };\n\n      rf = function rf(x) {\n        return x > midX;\n      };\n    } else {\n      lf = function lf(x) {\n        return x <= size.width / 2;\n      };\n\n      rf = function rf(x) {\n        return x >= chart.width - size.width / 2;\n      };\n    }\n\n    olf = function olf(x) {\n      return x + size.width + model.caretSize + model.caretPadding > chart.width;\n    };\n\n    orf = function orf(x) {\n      return x - size.width - model.caretSize - model.caretPadding < 0;\n    };\n\n    yf = function yf(y) {\n      return y <= midY ? 'top' : 'bottom';\n    };\n\n    if (lf(model.x)) {\n      xAlign = 'left'; // Is tooltip too wide and goes over the right side of the chart.?\n\n      if (olf(model.x)) {\n        xAlign = 'center';\n        yAlign = yf(model.y);\n      }\n    } else if (rf(model.x)) {\n      xAlign = 'right'; // Is tooltip too wide and goes outside left edge of canvas?\n\n      if (orf(model.x)) {\n        xAlign = 'center';\n        yAlign = yf(model.y);\n      }\n    }\n\n    var opts = tooltip._options;\n    return {\n      xAlign: opts.xAlign ? opts.xAlign : xAlign,\n      yAlign: opts.yAlign ? opts.yAlign : yAlign\n    };\n  }\n  /**\n   * @Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n   */\n\n\n  function getBackgroundPoint(vm, size, alignment, chart) {\n    // Background Position\n    var x = vm.x;\n    var y = vm.y;\n    var caretSize = vm.caretSize;\n    var caretPadding = vm.caretPadding;\n    var cornerRadius = vm.cornerRadius;\n    var xAlign = alignment.xAlign;\n    var yAlign = alignment.yAlign;\n    var paddingAndSize = caretSize + caretPadding;\n    var radiusAndPadding = cornerRadius + caretPadding;\n\n    if (xAlign === 'right') {\n      x -= size.width;\n    } else if (xAlign === 'center') {\n      x -= size.width / 2;\n\n      if (x + size.width > chart.width) {\n        x = chart.width - size.width;\n      }\n\n      if (x < 0) {\n        x = 0;\n      }\n    }\n\n    if (yAlign === 'top') {\n      y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n      y -= size.height + paddingAndSize;\n    } else {\n      y -= size.height / 2;\n    }\n\n    if (yAlign === 'center') {\n      if (xAlign === 'left') {\n        x += paddingAndSize;\n      } else if (xAlign === 'right') {\n        x -= paddingAndSize;\n      }\n    } else if (xAlign === 'left') {\n      x -= radiusAndPadding;\n    } else if (xAlign === 'right') {\n      x += radiusAndPadding;\n    }\n\n    return {\n      x: x,\n      y: y\n    };\n  }\n\n  Chart.Tooltip = Element.extend({\n    initialize: function initialize() {\n      this._model = getBaseModel(this._options);\n      this._lastActive = [];\n    },\n    // Get the title\n    // Args are: (tooltipItem, data)\n    getTitle: function getTitle() {\n      var me = this;\n      var opts = me._options;\n      var callbacks = opts.callbacks;\n      var beforeTitle = callbacks.beforeTitle.apply(me, arguments);\n      var title = callbacks.title.apply(me, arguments);\n      var afterTitle = callbacks.afterTitle.apply(me, arguments);\n      var lines = [];\n      lines = pushOrConcat(lines, beforeTitle);\n      lines = pushOrConcat(lines, title);\n      lines = pushOrConcat(lines, afterTitle);\n      return lines;\n    },\n    // Args are: (tooltipItem, data)\n    getBeforeBody: function getBeforeBody() {\n      var lines = this._options.callbacks.beforeBody.apply(this, arguments);\n\n      return helpers.isArray(lines) ? lines : lines !== undefined ? [lines] : [];\n    },\n    // Args are: (tooltipItem, data)\n    getBody: function getBody(tooltipItems, data) {\n      var me = this;\n      var callbacks = me._options.callbacks;\n      var bodyItems = [];\n      helpers.each(tooltipItems, function (tooltipItem) {\n        var bodyItem = {\n          before: [],\n          lines: [],\n          after: []\n        };\n        pushOrConcat(bodyItem.before, callbacks.beforeLabel.call(me, tooltipItem, data));\n        pushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));\n        pushOrConcat(bodyItem.after, callbacks.afterLabel.call(me, tooltipItem, data));\n        bodyItems.push(bodyItem);\n      });\n      return bodyItems;\n    },\n    // Args are: (tooltipItem, data)\n    getAfterBody: function getAfterBody() {\n      var lines = this._options.callbacks.afterBody.apply(this, arguments);\n\n      return helpers.isArray(lines) ? lines : lines !== undefined ? [lines] : [];\n    },\n    // Get the footer and beforeFooter and afterFooter lines\n    // Args are: (tooltipItem, data)\n    getFooter: function getFooter() {\n      var me = this;\n      var callbacks = me._options.callbacks;\n      var beforeFooter = callbacks.beforeFooter.apply(me, arguments);\n      var footer = callbacks.footer.apply(me, arguments);\n      var afterFooter = callbacks.afterFooter.apply(me, arguments);\n      var lines = [];\n      lines = pushOrConcat(lines, beforeFooter);\n      lines = pushOrConcat(lines, footer);\n      lines = pushOrConcat(lines, afterFooter);\n      return lines;\n    },\n    update: function update(changed) {\n      var me = this;\n      var opts = me._options; // Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition\n      // that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time\n      // which breaks any animations.\n\n      var existingModel = me._model;\n      var model = me._model = getBaseModel(opts);\n      var active = me._active;\n      var data = me._data; // In the case where active.length === 0 we need to keep these at existing values for good animations\n\n      var alignment = {\n        xAlign: existingModel.xAlign,\n        yAlign: existingModel.yAlign\n      };\n      var backgroundPoint = {\n        x: existingModel.x,\n        y: existingModel.y\n      };\n      var tooltipSize = {\n        width: existingModel.width,\n        height: existingModel.height\n      };\n      var tooltipPosition = {\n        x: existingModel.caretX,\n        y: existingModel.caretY\n      };\n      var i, len;\n\n      if (active.length) {\n        model.opacity = 1;\n        var labelColors = [];\n        var labelTextColors = [];\n        tooltipPosition = Chart.Tooltip.positioners[opts.position].call(me, active, me._eventPosition);\n        var tooltipItems = [];\n\n        for (i = 0, len = active.length; i < len; ++i) {\n          tooltipItems.push(createTooltipItem(active[i]));\n        } // If the user provided a filter function, use it to modify the tooltip items\n\n\n        if (opts.filter) {\n          tooltipItems = tooltipItems.filter(function (a) {\n            return opts.filter(a, data);\n          });\n        } // If the user provided a sorting function, use it to modify the tooltip items\n\n\n        if (opts.itemSort) {\n          tooltipItems = tooltipItems.sort(function (a, b) {\n            return opts.itemSort(a, b, data);\n          });\n        } // Determine colors for boxes\n\n\n        helpers.each(tooltipItems, function (tooltipItem) {\n          labelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, me._chart));\n          labelTextColors.push(opts.callbacks.labelTextColor.call(me, tooltipItem, me._chart));\n        }); // Build the Text Lines\n\n        model.title = me.getTitle(tooltipItems, data);\n        model.beforeBody = me.getBeforeBody(tooltipItems, data);\n        model.body = me.getBody(tooltipItems, data);\n        model.afterBody = me.getAfterBody(tooltipItems, data);\n        model.footer = me.getFooter(tooltipItems, data); // Initial positioning and colors\n\n        model.x = Math.round(tooltipPosition.x);\n        model.y = Math.round(tooltipPosition.y);\n        model.caretPadding = opts.caretPadding;\n        model.labelColors = labelColors;\n        model.labelTextColors = labelTextColors; // data points\n\n        model.dataPoints = tooltipItems; // We need to determine alignment of the tooltip\n\n        tooltipSize = getTooltipSize(this, model);\n        alignment = determineAlignment(this, tooltipSize); // Final Size and Position\n\n        backgroundPoint = getBackgroundPoint(model, tooltipSize, alignment, me._chart);\n      } else {\n        model.opacity = 0;\n      }\n\n      model.xAlign = alignment.xAlign;\n      model.yAlign = alignment.yAlign;\n      model.x = backgroundPoint.x;\n      model.y = backgroundPoint.y;\n      model.width = tooltipSize.width;\n      model.height = tooltipSize.height; // Point where the caret on the tooltip points to\n\n      model.caretX = tooltipPosition.x;\n      model.caretY = tooltipPosition.y;\n      me._model = model;\n\n      if (changed && opts.custom) {\n        opts.custom.call(me, model);\n      }\n\n      return me;\n    },\n    drawCaret: function drawCaret(tooltipPoint, size) {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var caretPosition = this.getCaretPosition(tooltipPoint, size, vm);\n      ctx.lineTo(caretPosition.x1, caretPosition.y1);\n      ctx.lineTo(caretPosition.x2, caretPosition.y2);\n      ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    },\n    getCaretPosition: function getCaretPosition(tooltipPoint, size, vm) {\n      var x1, x2, x3, y1, y2, y3;\n      var caretSize = vm.caretSize;\n      var cornerRadius = vm.cornerRadius;\n      var xAlign = vm.xAlign;\n      var yAlign = vm.yAlign;\n      var ptX = tooltipPoint.x;\n      var ptY = tooltipPoint.y;\n      var width = size.width;\n      var height = size.height;\n\n      if (yAlign === 'center') {\n        y2 = ptY + height / 2;\n\n        if (xAlign === 'left') {\n          x1 = ptX;\n          x2 = x1 - caretSize;\n          x3 = x1;\n          y1 = y2 + caretSize;\n          y3 = y2 - caretSize;\n        } else {\n          x1 = ptX + width;\n          x2 = x1 + caretSize;\n          x3 = x1;\n          y1 = y2 - caretSize;\n          y3 = y2 + caretSize;\n        }\n      } else {\n        if (xAlign === 'left') {\n          x2 = ptX + cornerRadius + caretSize;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        } else if (xAlign === 'right') {\n          x2 = ptX + width - cornerRadius - caretSize;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        } else {\n          x2 = vm.caretX;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        }\n\n        if (yAlign === 'top') {\n          y1 = ptY;\n          y2 = y1 - caretSize;\n          y3 = y1;\n        } else {\n          y1 = ptY + height;\n          y2 = y1 + caretSize;\n          y3 = y1; // invert drawing order\n\n          var tmp = x3;\n          x3 = x1;\n          x1 = tmp;\n        }\n      }\n\n      return {\n        x1: x1,\n        x2: x2,\n        x3: x3,\n        y1: y1,\n        y2: y2,\n        y3: y3\n      };\n    },\n    drawTitle: function drawTitle(pt, vm, ctx, opacity) {\n      var title = vm.title;\n\n      if (title.length) {\n        ctx.textAlign = vm._titleAlign;\n        ctx.textBaseline = 'top';\n        var titleFontSize = vm.titleFontSize;\n        var titleSpacing = vm.titleSpacing;\n        ctx.fillStyle = mergeOpacity(vm.titleFontColor, opacity);\n        ctx.font = helpers.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\n        var i, len;\n\n        for (i = 0, len = title.length; i < len; ++i) {\n          ctx.fillText(title[i], pt.x, pt.y);\n          pt.y += titleFontSize + titleSpacing; // Line Height and spacing\n\n          if (i + 1 === title.length) {\n            pt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n          }\n        }\n      }\n    },\n    drawBody: function drawBody(pt, vm, ctx, opacity) {\n      var bodyFontSize = vm.bodyFontSize;\n      var bodySpacing = vm.bodySpacing;\n      var body = vm.body;\n      ctx.textAlign = vm._bodyAlign;\n      ctx.textBaseline = 'top';\n      ctx.font = helpers.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily); // Before Body\n\n      var xLinePadding = 0;\n\n      var fillLineOfText = function fillLineOfText(line) {\n        ctx.fillText(line, pt.x + xLinePadding, pt.y);\n        pt.y += bodyFontSize + bodySpacing;\n      }; // Before body lines\n\n\n      ctx.fillStyle = mergeOpacity(vm.bodyFontColor, opacity);\n      helpers.each(vm.beforeBody, fillLineOfText);\n      var drawColorBoxes = vm.displayColors;\n      xLinePadding = drawColorBoxes ? bodyFontSize + 2 : 0; // Draw body lines now\n\n      helpers.each(body, function (bodyItem, i) {\n        var textColor = mergeOpacity(vm.labelTextColors[i], opacity);\n        ctx.fillStyle = textColor;\n        helpers.each(bodyItem.before, fillLineOfText);\n        helpers.each(bodyItem.lines, function (line) {\n          // Draw Legend-like boxes if needed\n          if (drawColorBoxes) {\n            // Fill a white rect so that colours merge nicely if the opacity is < 1\n            ctx.fillStyle = mergeOpacity(vm.legendColorBackground, opacity);\n            ctx.fillRect(pt.x, pt.y, bodyFontSize, bodyFontSize); // Border\n\n            ctx.lineWidth = 1;\n            ctx.strokeStyle = mergeOpacity(vm.labelColors[i].borderColor, opacity);\n            ctx.strokeRect(pt.x, pt.y, bodyFontSize, bodyFontSize); // Inner square\n\n            ctx.fillStyle = mergeOpacity(vm.labelColors[i].backgroundColor, opacity);\n            ctx.fillRect(pt.x + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\n            ctx.fillStyle = textColor;\n          }\n\n          fillLineOfText(line);\n        });\n        helpers.each(bodyItem.after, fillLineOfText);\n      }); // Reset back to 0 for after body\n\n      xLinePadding = 0; // After body lines\n\n      helpers.each(vm.afterBody, fillLineOfText);\n      pt.y -= bodySpacing; // Remove last body spacing\n    },\n    drawFooter: function drawFooter(pt, vm, ctx, opacity) {\n      var footer = vm.footer;\n\n      if (footer.length) {\n        pt.y += vm.footerMarginTop;\n        ctx.textAlign = vm._footerAlign;\n        ctx.textBaseline = 'top';\n        ctx.fillStyle = mergeOpacity(vm.footerFontColor, opacity);\n        ctx.font = helpers.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\n        helpers.each(footer, function (line) {\n          ctx.fillText(line, pt.x, pt.y);\n          pt.y += vm.footerFontSize + vm.footerSpacing;\n        });\n      }\n    },\n    drawBackground: function drawBackground(pt, vm, ctx, tooltipSize, opacity) {\n      ctx.fillStyle = mergeOpacity(vm.backgroundColor, opacity);\n      ctx.strokeStyle = mergeOpacity(vm.borderColor, opacity);\n      ctx.lineWidth = vm.borderWidth;\n      var xAlign = vm.xAlign;\n      var yAlign = vm.yAlign;\n      var x = pt.x;\n      var y = pt.y;\n      var width = tooltipSize.width;\n      var height = tooltipSize.height;\n      var radius = vm.cornerRadius;\n      ctx.beginPath();\n      ctx.moveTo(x + radius, y);\n\n      if (yAlign === 'top') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + width - radius, y);\n      ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\n      if (yAlign === 'center' && xAlign === 'right') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + width, y + height - radius);\n      ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\n      if (yAlign === 'bottom') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + radius, y + height);\n      ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\n      if (yAlign === 'center' && xAlign === 'left') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x, y + radius);\n      ctx.quadraticCurveTo(x, y, x + radius, y);\n      ctx.closePath();\n      ctx.fill();\n\n      if (vm.borderWidth > 0) {\n        ctx.stroke();\n      }\n    },\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n\n      if (vm.opacity === 0) {\n        return;\n      }\n\n      var tooltipSize = {\n        width: vm.width,\n        height: vm.height\n      };\n      var pt = {\n        x: vm.x,\n        y: vm.y\n      }; // IE11/Edge does not like very small opacities, so snap to 0\n\n      var opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity; // Truthy/falsey value for empty tooltip\n\n      var hasTooltipContent = vm.title.length || vm.beforeBody.length || vm.body.length || vm.afterBody.length || vm.footer.length;\n\n      if (this._options.enabled && hasTooltipContent) {\n        // Draw Background\n        this.drawBackground(pt, vm, ctx, tooltipSize, opacity); // Draw Title, Body, and Footer\n\n        pt.x += vm.xPadding;\n        pt.y += vm.yPadding; // Titles\n\n        this.drawTitle(pt, vm, ctx, opacity); // Body\n\n        this.drawBody(pt, vm, ctx, opacity); // Footer\n\n        this.drawFooter(pt, vm, ctx, opacity);\n      }\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event - The event to handle\n     * @returns {Boolean} true if the tooltip changed\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var options = me._options;\n      var changed = false;\n      me._lastActive = me._lastActive || []; // Find Active Elements for tooltips\n\n      if (e.type === 'mouseout') {\n        me._active = [];\n      } else {\n        me._active = me._chart.getElementsAtEventForMode(e, options.mode, options);\n      } // Remember Last Actives\n\n\n      changed = !helpers.arrayEquals(me._active, me._lastActive); // Only handle target event on tooltip change\n\n      if (changed) {\n        me._lastActive = me._active;\n\n        if (options.enabled || options.custom) {\n          me._eventPosition = {\n            x: e.x,\n            y: e.y\n          };\n          me.update(true);\n          me.pivot();\n        }\n      }\n\n      return changed;\n    }\n  });\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n\n  Chart.Tooltip.positioners = {\n    /**\n     * Average mode places the tooltip at the average position of the elements shown\n     * @function Chart.Tooltip.positioners.average\n     * @param elements {ChartElement[]} the elements being displayed in the tooltip\n     * @returns {Point} tooltip position\n     */\n    average: function average(elements) {\n      if (!elements.length) {\n        return false;\n      }\n\n      var i, len;\n      var x = 0;\n      var y = 0;\n      var count = 0;\n\n      for (i = 0, len = elements.length; i < len; ++i) {\n        var el = elements[i];\n\n        if (el && el.hasValue()) {\n          var pos = el.tooltipPosition();\n          x += pos.x;\n          y += pos.y;\n          ++count;\n        }\n      }\n\n      return {\n        x: Math.round(x / count),\n        y: Math.round(y / count)\n      };\n    },\n\n    /**\n     * Gets the tooltip position nearest of the item nearest to the event position\n     * @function Chart.Tooltip.positioners.nearest\n     * @param elements {Chart.Element[]} the tooltip elements\n     * @param eventPosition {Point} the position of the event in canvas coordinates\n     * @returns {Point} the tooltip position\n     */\n    nearest: function nearest(elements, eventPosition) {\n      var x = eventPosition.x;\n      var y = eventPosition.y;\n      var minDistance = Number.POSITIVE_INFINITY;\n      var i, len, nearestElement;\n\n      for (i = 0, len = elements.length; i < len; ++i) {\n        var el = elements[i];\n\n        if (el && el.hasValue()) {\n          var center = el.getCenterPoint();\n          var d = helpers.distanceBetweenPoints(eventPosition, center);\n\n          if (d < minDistance) {\n            minDistance = d;\n            nearestElement = el;\n          }\n        }\n      }\n\n      if (nearestElement) {\n        var tp = nearestElement.tooltipPosition();\n        x = tp.x;\n        y = tp.y;\n      }\n\n      return {\n        x: x,\n        y: y\n      };\n    }\n  };\n};","'use strict';\n\nvar helpers = require('../helpers/index');\n/**\n * Generate a set of linear ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {Array<Number>} array of tick values\n */\n\n\nfunction generateTicks(generationOptions, dataRange) {\n  var ticks = []; // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n  // \"nice number\" algorithm. See http://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n  // for details.\n\n  var spacing;\n\n  if (generationOptions.stepSize && generationOptions.stepSize > 0) {\n    spacing = generationOptions.stepSize;\n  } else {\n    var niceRange = helpers.niceNum(dataRange.max - dataRange.min, false);\n    spacing = helpers.niceNum(niceRange / (generationOptions.maxTicks - 1), true);\n  }\n\n  var niceMin = Math.floor(dataRange.min / spacing) * spacing;\n  var niceMax = Math.ceil(dataRange.max / spacing) * spacing; // If min, max and stepSize is set and they make an evenly spaced scale use it.\n\n  if (generationOptions.min && generationOptions.max && generationOptions.stepSize) {\n    // If very close to our whole number, use it.\n    if (helpers.almostWhole((generationOptions.max - generationOptions.min) / generationOptions.stepSize, spacing / 1000)) {\n      niceMin = generationOptions.min;\n      niceMax = generationOptions.max;\n    }\n  }\n\n  var numSpaces = (niceMax - niceMin) / spacing; // If very close to our rounded value, use it.\n\n  if (helpers.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n    numSpaces = Math.round(numSpaces);\n  } else {\n    numSpaces = Math.ceil(numSpaces);\n  }\n\n  var precision = 1;\n\n  if (spacing < 1) {\n    precision = Math.pow(10, spacing.toString().length - 2);\n    niceMin = Math.round(niceMin * precision) / precision;\n    niceMax = Math.round(niceMax * precision) / precision;\n  }\n\n  ticks.push(generationOptions.min !== undefined ? generationOptions.min : niceMin);\n\n  for (var j = 1; j < numSpaces; ++j) {\n    ticks.push(Math.round((niceMin + j * spacing) * precision) / precision);\n  }\n\n  ticks.push(generationOptions.max !== undefined ? generationOptions.max : niceMax);\n  return ticks;\n}\n\nmodule.exports = function (Chart) {\n  var noop = helpers.noop;\n  Chart.LinearScaleBase = Chart.Scale.extend({\n    getRightValue: function getRightValue(value) {\n      if (typeof value === 'string') {\n        return +value;\n      }\n\n      return Chart.Scale.prototype.getRightValue.call(this, value);\n    },\n    handleTickRangeOptions: function handleTickRangeOptions() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\n      // do nothing since that would make the chart weird. If the user really wants a weird chart\n      // axis, they can manually override it\n\n      if (tickOpts.beginAtZero) {\n        var minSign = helpers.sign(me.min);\n        var maxSign = helpers.sign(me.max);\n\n        if (minSign < 0 && maxSign < 0) {\n          // move the top up to 0\n          me.max = 0;\n        } else if (minSign > 0 && maxSign > 0) {\n          // move the bottom down to 0\n          me.min = 0;\n        }\n      }\n\n      var setMin = tickOpts.min !== undefined || tickOpts.suggestedMin !== undefined;\n      var setMax = tickOpts.max !== undefined || tickOpts.suggestedMax !== undefined;\n\n      if (tickOpts.min !== undefined) {\n        me.min = tickOpts.min;\n      } else if (tickOpts.suggestedMin !== undefined) {\n        if (me.min === null) {\n          me.min = tickOpts.suggestedMin;\n        } else {\n          me.min = Math.min(me.min, tickOpts.suggestedMin);\n        }\n      }\n\n      if (tickOpts.max !== undefined) {\n        me.max = tickOpts.max;\n      } else if (tickOpts.suggestedMax !== undefined) {\n        if (me.max === null) {\n          me.max = tickOpts.suggestedMax;\n        } else {\n          me.max = Math.max(me.max, tickOpts.suggestedMax);\n        }\n      }\n\n      if (setMin !== setMax) {\n        // We set the min or the max but not both.\n        // So ensure that our range is good\n        // Inverted or 0 length range can happen when\n        // ticks.min is set, and no datasets are visible\n        if (me.min >= me.max) {\n          if (setMin) {\n            me.max = me.min + 1;\n          } else {\n            me.min = me.max - 1;\n          }\n        }\n      }\n\n      if (me.min === me.max) {\n        me.max++;\n\n        if (!tickOpts.beginAtZero) {\n          me.min--;\n        }\n      }\n    },\n    getTickLimit: noop,\n    handleDirectionalChanges: noop,\n    buildTicks: function buildTicks() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // Figure out what the max number of ticks we can support it is based on the size of\n      // the axis area. For now, we say that the minimum tick spacing in pixels must be 50\n      // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n      // the graph. Make sure we always have at least 2 ticks\n\n      var maxTicks = me.getTickLimit();\n      maxTicks = Math.max(2, maxTicks);\n      var numericGeneratorOptions = {\n        maxTicks: maxTicks,\n        min: tickOpts.min,\n        max: tickOpts.max,\n        stepSize: helpers.valueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)\n      };\n      var ticks = me.ticks = generateTicks(numericGeneratorOptions, me);\n      me.handleDirectionalChanges(); // At this point, we need to update our max and min given the tick values since we have expanded the\n      // range of the scale\n\n      me.max = helpers.max(ticks);\n      me.min = helpers.min(ticks);\n\n      if (tickOpts.reverse) {\n        ticks.reverse();\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this;\n      me.ticksAsNumbers = me.ticks.slice();\n      me.zeroLineIndex = me.ticks.indexOf(0);\n      Chart.Scale.prototype.convertTicksToLabels.call(me);\n    }\n  });\n};","'use strict';\n\nmodule.exports = function (Chart) {\n  // Default config for a category scale\n  var defaultConfig = {\n    position: 'bottom'\n  };\n  var DatasetScale = Chart.Scale.extend({\n    /**\n    * Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those\n    * else fall back to data.labels\n    * @private\n    */\n    getLabels: function getLabels() {\n      var data = this.chart.data;\n      return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var labels = me.getLabels();\n      me.minIndex = 0;\n      me.maxIndex = labels.length - 1;\n      var findIndex;\n\n      if (me.options.ticks.min !== undefined) {\n        // user specified min value\n        findIndex = labels.indexOf(me.options.ticks.min);\n        me.minIndex = findIndex !== -1 ? findIndex : me.minIndex;\n      }\n\n      if (me.options.ticks.max !== undefined) {\n        // user specified max value\n        findIndex = labels.indexOf(me.options.ticks.max);\n        me.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;\n      }\n\n      me.min = labels[me.minIndex];\n      me.max = labels[me.maxIndex];\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var labels = me.getLabels(); // If we are viewing some subset of labels, slice the original array\n\n      me.ticks = me.minIndex === 0 && me.maxIndex === labels.length - 1 ? labels : labels.slice(me.minIndex, me.maxIndex + 1);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      var me = this;\n      var data = me.chart.data;\n      var isHorizontal = me.isHorizontal();\n\n      if (data.yLabels && !isHorizontal) {\n        return me.getRightValue(data.datasets[datasetIndex].data[index]);\n      }\n\n      return me.ticks[index - me.minIndex];\n    },\n    // Used to get data value locations.  Value can either be an index or a numerical value\n    getPixelForValue: function getPixelForValue(value, index) {\n      var me = this;\n      var offset = me.options.offset; // 1 is added because we need the length but we have the indexes\n\n      var offsetAmt = Math.max(me.maxIndex + 1 - me.minIndex - (offset ? 0 : 1), 1); // If value is a data object, then index is the index in the data array,\n      // not the index of the scale. We need to change that.\n\n      var valueCategory;\n\n      if (value !== undefined && value !== null) {\n        valueCategory = me.isHorizontal() ? value.x : value.y;\n      }\n\n      if (valueCategory !== undefined || value !== undefined && isNaN(index)) {\n        var labels = me.getLabels();\n        value = valueCategory || value;\n        var idx = labels.indexOf(value);\n        index = idx !== -1 ? idx : index;\n      }\n\n      if (me.isHorizontal()) {\n        var valueWidth = me.width / offsetAmt;\n        var widthOffset = valueWidth * (index - me.minIndex);\n\n        if (offset) {\n          widthOffset += valueWidth / 2;\n        }\n\n        return me.left + Math.round(widthOffset);\n      }\n\n      var valueHeight = me.height / offsetAmt;\n      var heightOffset = valueHeight * (index - me.minIndex);\n\n      if (offset) {\n        heightOffset += valueHeight / 2;\n      }\n\n      return me.top + Math.round(heightOffset);\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.ticks[index], index + this.minIndex, null);\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var offset = me.options.offset;\n      var value;\n      var offsetAmt = Math.max(me._ticks.length - (offset ? 0 : 1), 1);\n      var horz = me.isHorizontal();\n      var valueDimension = (horz ? me.width : me.height) / offsetAmt;\n      pixel -= horz ? me.left : me.top;\n\n      if (offset) {\n        pixel -= valueDimension / 2;\n      }\n\n      if (pixel <= 0) {\n        value = 0;\n      } else {\n        value = Math.round(pixel / valueDimension);\n      }\n\n      return value + me.minIndex;\n    },\n    getBasePixel: function getBasePixel() {\n      return this.bottom;\n    }\n  });\n  Chart.scaleService.registerScaleType('category', DatasetScale, defaultConfig);\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar helpers = require('../helpers/index');\n\nvar Ticks = require('../core/core.ticks');\n\nmodule.exports = function (Chart) {\n  var defaultConfig = {\n    position: 'left',\n    ticks: {\n      callback: Ticks.formatters.linear\n    }\n  };\n  var LinearScale = Chart.LinearScaleBase.extend({\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var opts = me.options;\n      var chart = me.chart;\n      var data = chart.data;\n      var datasets = data.datasets;\n      var isHorizontal = me.isHorizontal();\n      var DEFAULT_MIN = 0;\n      var DEFAULT_MAX = 1;\n\n      function IDMatches(meta) {\n        return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n      } // First Calculate the range\n\n\n      me.min = null;\n      me.max = null;\n      var hasStacks = opts.stacked;\n\n      if (hasStacks === undefined) {\n        helpers.each(datasets, function (dataset, datasetIndex) {\n          if (hasStacks) {\n            return;\n          }\n\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {\n            hasStacks = true;\n          }\n        });\n      }\n\n      if (opts.stacked || hasStacks) {\n        var valuesPerStack = {};\n        helpers.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          var key = [meta.type, // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n          opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '', meta.stack].join('.');\n\n          if (valuesPerStack[key] === undefined) {\n            valuesPerStack[key] = {\n              positiveValues: [],\n              negativeValues: []\n            };\n          } // Store these per type\n\n\n          var positiveValues = valuesPerStack[key].positiveValues;\n          var negativeValues = valuesPerStack[key].negativeValues;\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue);\n\n              if (isNaN(value) || meta.data[index].hidden) {\n                return;\n              }\n\n              positiveValues[index] = positiveValues[index] || 0;\n              negativeValues[index] = negativeValues[index] || 0;\n\n              if (opts.relativePoints) {\n                positiveValues[index] = 100;\n              } else if (value < 0) {\n                negativeValues[index] += value;\n              } else {\n                positiveValues[index] += value;\n              }\n            });\n          }\n        });\n        helpers.each(valuesPerStack, function (valuesForType) {\n          var values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\n          var minVal = helpers.min(values);\n          var maxVal = helpers.max(values);\n          me.min = me.min === null ? minVal : Math.min(me.min, minVal);\n          me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n        });\n      } else {\n        helpers.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue);\n\n              if (isNaN(value) || meta.data[index].hidden) {\n                return;\n              }\n\n              if (me.min === null) {\n                me.min = value;\n              } else if (value < me.min) {\n                me.min = value;\n              }\n\n              if (me.max === null) {\n                me.max = value;\n              } else if (value > me.max) {\n                me.max = value;\n              }\n            });\n          }\n        });\n      }\n\n      me.min = isFinite(me.min) && !isNaN(me.min) ? me.min : DEFAULT_MIN;\n      me.max = isFinite(me.max) && !isNaN(me.max) ? me.max : DEFAULT_MAX; // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\n      this.handleTickRangeOptions();\n    },\n    getTickLimit: function getTickLimit() {\n      var maxTicks;\n      var me = this;\n      var tickOpts = me.options.ticks;\n\n      if (me.isHorizontal()) {\n        maxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.width / 50));\n      } else {\n        // The factor of 2 used to scale the font size has been experimentally determined.\n        var tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, defaults.global.defaultFontSize);\n        maxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.height / (2 * tickFontSize)));\n      }\n\n      return maxTicks;\n    },\n    // Called after the ticks are built. We need\n    handleDirectionalChanges: function handleDirectionalChanges() {\n      if (!this.isHorizontal()) {\n        // We are in a vertical orientation. The top value is the highest. So reverse the array\n        this.ticks.reverse();\n      }\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    // Utils\n    getPixelForValue: function getPixelForValue(value) {\n      // This must be called after fit has been run so that\n      // this.left, this.top, this.right, and this.bottom have been defined\n      var me = this;\n      var start = me.start;\n      var rightValue = +me.getRightValue(value);\n      var pixel;\n      var range = me.end - start;\n\n      if (me.isHorizontal()) {\n        pixel = me.left + me.width / range * (rightValue - start);\n      } else {\n        pixel = me.bottom - me.height / range * (rightValue - start);\n      }\n\n      return pixel;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var innerDimension = isHorizontal ? me.width : me.height;\n      var offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;\n      return me.start + (me.end - me.start) * offset;\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.ticksAsNumbers[index]);\n    }\n  });\n  Chart.scaleService.registerScaleType('linear', LinearScale, defaultConfig);\n};","'use strict';\n\nvar helpers = require('../helpers/index');\n\nvar Ticks = require('../core/core.ticks');\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {Array<Number>} array of tick values\n */\n\n\nfunction generateTicks(generationOptions, dataRange) {\n  var ticks = [];\n  var valueOrDefault = helpers.valueOrDefault; // Figure out what the max number of ticks we can support it is based on the size of\n  // the axis area. For now, we say that the minimum tick spacing in pixels must be 50\n  // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n  // the graph\n\n  var tickVal = valueOrDefault(generationOptions.min, Math.pow(10, Math.floor(helpers.log10(dataRange.min))));\n  var endExp = Math.floor(helpers.log10(dataRange.max));\n  var endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  var exp, significand;\n\n  if (tickVal === 0) {\n    exp = Math.floor(helpers.log10(dataRange.minNotZero));\n    significand = Math.floor(dataRange.minNotZero / Math.pow(10, exp));\n    ticks.push(tickVal);\n    tickVal = significand * Math.pow(10, exp);\n  } else {\n    exp = Math.floor(helpers.log10(tickVal));\n    significand = Math.floor(tickVal / Math.pow(10, exp));\n  }\n\n  var precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n\n  do {\n    ticks.push(tickVal);\n    ++significand;\n\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || exp === endExp && significand < endSignificand);\n\n  var lastTick = valueOrDefault(generationOptions.max, tickVal);\n  ticks.push(lastTick);\n  return ticks;\n}\n\nmodule.exports = function (Chart) {\n  var defaultConfig = {\n    position: 'left',\n    // label settings\n    ticks: {\n      callback: Ticks.formatters.logarithmic\n    }\n  };\n  var LogarithmicScale = Chart.Scale.extend({\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var opts = me.options;\n      var chart = me.chart;\n      var data = chart.data;\n      var datasets = data.datasets;\n      var isHorizontal = me.isHorizontal();\n\n      function IDMatches(meta) {\n        return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n      } // Calculate Range\n\n\n      me.min = null;\n      me.max = null;\n      me.minNotZero = null;\n      var hasStacks = opts.stacked;\n\n      if (hasStacks === undefined) {\n        helpers.each(datasets, function (dataset, datasetIndex) {\n          if (hasStacks) {\n            return;\n          }\n\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {\n            hasStacks = true;\n          }\n        });\n      }\n\n      if (opts.stacked || hasStacks) {\n        var valuesPerStack = {};\n        helpers.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          var key = [meta.type, // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n          opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '', meta.stack].join('.');\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            if (valuesPerStack[key] === undefined) {\n              valuesPerStack[key] = [];\n            }\n\n            helpers.each(dataset.data, function (rawValue, index) {\n              var values = valuesPerStack[key];\n              var value = +me.getRightValue(rawValue); // invalid, hidden and negative values are ignored\n\n              if (isNaN(value) || meta.data[index].hidden || value < 0) {\n                return;\n              }\n\n              values[index] = values[index] || 0;\n              values[index] += value;\n            });\n          }\n        });\n        helpers.each(valuesPerStack, function (valuesForType) {\n          if (valuesForType.length > 0) {\n            var minVal = helpers.min(valuesForType);\n            var maxVal = helpers.max(valuesForType);\n            me.min = me.min === null ? minVal : Math.min(me.min, minVal);\n            me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n          }\n        });\n      } else {\n        helpers.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue); // invalid, hidden and negative values are ignored\n\n              if (isNaN(value) || meta.data[index].hidden || value < 0) {\n                return;\n              }\n\n              if (me.min === null) {\n                me.min = value;\n              } else if (value < me.min) {\n                me.min = value;\n              }\n\n              if (me.max === null) {\n                me.max = value;\n              } else if (value > me.max) {\n                me.max = value;\n              }\n\n              if (value !== 0 && (me.minNotZero === null || value < me.minNotZero)) {\n                me.minNotZero = value;\n              }\n            });\n          }\n        });\n      } // Common base implementation to handle ticks.min, ticks.max\n\n\n      this.handleTickRangeOptions();\n    },\n    handleTickRangeOptions: function handleTickRangeOptions() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks;\n      var valueOrDefault = helpers.valueOrDefault;\n      var DEFAULT_MIN = 1;\n      var DEFAULT_MAX = 10;\n      me.min = valueOrDefault(tickOpts.min, me.min);\n      me.max = valueOrDefault(tickOpts.max, me.max);\n\n      if (me.min === me.max) {\n        if (me.min !== 0 && me.min !== null) {\n          me.min = Math.pow(10, Math.floor(helpers.log10(me.min)) - 1);\n          me.max = Math.pow(10, Math.floor(helpers.log10(me.max)) + 1);\n        } else {\n          me.min = DEFAULT_MIN;\n          me.max = DEFAULT_MAX;\n        }\n      }\n\n      if (me.min === null) {\n        me.min = Math.pow(10, Math.floor(helpers.log10(me.max)) - 1);\n      }\n\n      if (me.max === null) {\n        me.max = me.min !== 0 ? Math.pow(10, Math.floor(helpers.log10(me.min)) + 1) : DEFAULT_MAX;\n      }\n\n      if (me.minNotZero === null) {\n        if (me.min > 0) {\n          me.minNotZero = me.min;\n        } else if (me.max < 1) {\n          me.minNotZero = Math.pow(10, Math.floor(helpers.log10(me.max)));\n        } else {\n          me.minNotZero = DEFAULT_MIN;\n        }\n      }\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks;\n      var reverse = !me.isHorizontal();\n      var generationOptions = {\n        min: tickOpts.min,\n        max: tickOpts.max\n      };\n      var ticks = me.ticks = generateTicks(generationOptions, me); // At this point, we need to update our max and min given the tick values since we have expanded the\n      // range of the scale\n\n      me.max = helpers.max(ticks);\n      me.min = helpers.min(ticks);\n\n      if (tickOpts.reverse) {\n        reverse = !reverse;\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n\n      if (reverse) {\n        ticks.reverse();\n      }\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      this.tickValues = this.ticks.slice();\n      Chart.Scale.prototype.convertTicksToLabels.call(this);\n    },\n    // Get the correct tooltip label\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.tickValues[index]);\n    },\n\n    /**\n     * Returns the value of the first tick.\n     * @param {Number} value - The minimum not zero value.\n     * @return {Number} The first tick value.\n     * @private\n     */\n    _getFirstTickValue: function _getFirstTickValue(value) {\n      var exp = Math.floor(helpers.log10(value));\n      var significand = Math.floor(value / Math.pow(10, exp));\n      return significand * Math.pow(10, exp);\n    },\n    getPixelForValue: function getPixelForValue(value) {\n      var me = this;\n      var reverse = me.options.ticks.reverse;\n      var log10 = helpers.log10;\n\n      var firstTickValue = me._getFirstTickValue(me.minNotZero);\n\n      var offset = 0;\n      var innerDimension, pixel, start, end, sign;\n      value = +me.getRightValue(value);\n\n      if (reverse) {\n        start = me.end;\n        end = me.start;\n        sign = -1;\n      } else {\n        start = me.start;\n        end = me.end;\n        sign = 1;\n      }\n\n      if (me.isHorizontal()) {\n        innerDimension = me.width;\n        pixel = reverse ? me.right : me.left;\n      } else {\n        innerDimension = me.height;\n        sign *= -1; // invert, since the upper-left corner of the canvas is at pixel (0, 0)\n\n        pixel = reverse ? me.top : me.bottom;\n      }\n\n      if (value !== start) {\n        if (start === 0) {\n          // include zero tick\n          offset = helpers.getValueOrDefault(me.options.ticks.fontSize, Chart.defaults.global.defaultFontSize);\n          innerDimension -= offset;\n          start = firstTickValue;\n        }\n\n        if (value !== 0) {\n          offset += innerDimension / (log10(end) - log10(start)) * (log10(value) - log10(start));\n        }\n\n        pixel += sign * offset;\n      }\n\n      return pixel;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var reverse = me.options.ticks.reverse;\n      var log10 = helpers.log10;\n\n      var firstTickValue = me._getFirstTickValue(me.minNotZero);\n\n      var innerDimension, start, end, value;\n\n      if (reverse) {\n        start = me.end;\n        end = me.start;\n      } else {\n        start = me.start;\n        end = me.end;\n      }\n\n      if (me.isHorizontal()) {\n        innerDimension = me.width;\n        value = reverse ? me.right - pixel : pixel - me.left;\n      } else {\n        innerDimension = me.height;\n        value = reverse ? pixel - me.top : me.bottom - pixel;\n      }\n\n      if (value !== start) {\n        if (start === 0) {\n          // include zero tick\n          var offset = helpers.getValueOrDefault(me.options.ticks.fontSize, Chart.defaults.global.defaultFontSize);\n          value -= offset;\n          innerDimension -= offset;\n          start = firstTickValue;\n        }\n\n        value *= log10(end) - log10(start);\n        value /= innerDimension;\n        value = Math.pow(10, log10(start) + value);\n      }\n\n      return value;\n    }\n  });\n  Chart.scaleService.registerScaleType('logarithmic', LogarithmicScale, defaultConfig);\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar helpers = require('../helpers/index');\n\nvar Ticks = require('../core/core.ticks');\n\nmodule.exports = function (Chart) {\n  var globalDefaults = defaults.global;\n  var defaultConfig = {\n    display: true,\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n    angleLines: {\n      display: true,\n      color: 'rgba(0, 0, 0, 0.1)',\n      lineWidth: 1\n    },\n    gridLines: {\n      circular: false\n    },\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n      // String - The colour of the label backdrop\n      backdropColor: 'rgba(255,255,255,0.75)',\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPaddingY: 2,\n      // Number - The backdrop padding to the side of the label in pixels\n      backdropPaddingX: 2,\n      callback: Ticks.formatters.linear\n    },\n    pointLabels: {\n      // Boolean - if true, show point labels\n      display: true,\n      // Number - Point label font size in pixels\n      fontSize: 10,\n      // Function - Used to convert point labels\n      callback: function callback(label) {\n        return label;\n      }\n    }\n  };\n\n  function getValueCount(scale) {\n    var opts = scale.options;\n    return opts.angleLines.display || opts.pointLabels.display ? scale.chart.data.labels.length : 0;\n  }\n\n  function getPointLabelFontOptions(scale) {\n    var pointLabelOptions = scale.options.pointLabels;\n    var fontSize = helpers.valueOrDefault(pointLabelOptions.fontSize, globalDefaults.defaultFontSize);\n    var fontStyle = helpers.valueOrDefault(pointLabelOptions.fontStyle, globalDefaults.defaultFontStyle);\n    var fontFamily = helpers.valueOrDefault(pointLabelOptions.fontFamily, globalDefaults.defaultFontFamily);\n    var font = helpers.fontString(fontSize, fontStyle, fontFamily);\n    return {\n      size: fontSize,\n      style: fontStyle,\n      family: fontFamily,\n      font: font\n    };\n  }\n\n  function measureLabelSize(ctx, fontSize, label) {\n    if (helpers.isArray(label)) {\n      return {\n        w: helpers.longestText(ctx, ctx.font, label),\n        h: label.length * fontSize + (label.length - 1) * 1.5 * fontSize\n      };\n    }\n\n    return {\n      w: ctx.measureText(label).width,\n      h: fontSize\n    };\n  }\n\n  function determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n      return {\n        start: pos - size / 2,\n        end: pos + size / 2\n      };\n    } else if (angle < min || angle > max) {\n      return {\n        start: pos - size - 5,\n        end: pos\n      };\n    }\n\n    return {\n      start: pos,\n      end: pos + size + 5\n    };\n  }\n  /**\n   * Helper function to fit a radial linear scale with point labels\n   */\n\n\n  function fitWithPointLabels(scale) {\n    /*\n     * Right, this is really confusing and there is a lot of maths going on here\n     * The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n     *\n     * Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n     *\n     * Solution:\n     *\n     * We assume the radius of the polygon is half the size of the canvas at first\n     * at each index we check if the text overlaps.\n     *\n     * Where it does, we store that angle and that index.\n     *\n     * After finding the largest index and angle we calculate how much we need to remove\n     * from the shape radius to move the point inwards by that x.\n     *\n     * We average the left and right distances to get the maximum shape radius that can fit in the box\n     * along with labels.\n     *\n     * Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n     * on each side, removing that from the size, halving it and adding the left x protrusion width.\n     *\n     * This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n     * and position it in the most space efficient manner\n     *\n     * https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n     */\n    var plFont = getPointLabelFontOptions(scale); // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n    // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n\n    var largestPossibleRadius = Math.min(scale.height / 2, scale.width / 2);\n    var furthestLimits = {\n      r: scale.width,\n      l: 0,\n      t: scale.height,\n      b: 0\n    };\n    var furthestAngles = {};\n    var i, textSize, pointPosition;\n    scale.ctx.font = plFont.font;\n    scale._pointLabelSizes = [];\n    var valueCount = getValueCount(scale);\n\n    for (i = 0; i < valueCount; i++) {\n      pointPosition = scale.getPointPosition(i, largestPossibleRadius);\n      textSize = measureLabelSize(scale.ctx, plFont.size, scale.pointLabels[i] || '');\n      scale._pointLabelSizes[i] = textSize; // Add quarter circle to make degree 0 mean top of circle\n\n      var angleRadians = scale.getIndexAngle(i);\n      var angle = helpers.toDegrees(angleRadians) % 360;\n      var hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n      var vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n\n      if (hLimits.start < furthestLimits.l) {\n        furthestLimits.l = hLimits.start;\n        furthestAngles.l = angleRadians;\n      }\n\n      if (hLimits.end > furthestLimits.r) {\n        furthestLimits.r = hLimits.end;\n        furthestAngles.r = angleRadians;\n      }\n\n      if (vLimits.start < furthestLimits.t) {\n        furthestLimits.t = vLimits.start;\n        furthestAngles.t = angleRadians;\n      }\n\n      if (vLimits.end > furthestLimits.b) {\n        furthestLimits.b = vLimits.end;\n        furthestAngles.b = angleRadians;\n      }\n    }\n\n    scale.setReductions(largestPossibleRadius, furthestLimits, furthestAngles);\n  }\n  /**\n   * Helper function to fit a radial linear scale with no point labels\n   */\n\n\n  function _fit(scale) {\n    var largestPossibleRadius = Math.min(scale.height / 2, scale.width / 2);\n    scale.drawingArea = Math.round(largestPossibleRadius);\n    scale.setCenterPoint(0, 0, 0, 0);\n  }\n\n  function getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n      return 'center';\n    } else if (angle < 180) {\n      return 'left';\n    }\n\n    return 'right';\n  }\n\n  function fillText(ctx, text, position, fontSize) {\n    if (helpers.isArray(text)) {\n      var y = position.y;\n      var spacing = 1.5 * fontSize;\n\n      for (var i = 0; i < text.length; ++i) {\n        ctx.fillText(text[i], position.x, y);\n        y += spacing;\n      }\n    } else {\n      ctx.fillText(text, position.x, position.y);\n    }\n  }\n\n  function adjustPointPositionForLabelHeight(angle, textSize, position) {\n    if (angle === 90 || angle === 270) {\n      position.y -= textSize.h / 2;\n    } else if (angle > 270 || angle < 90) {\n      position.y -= textSize.h;\n    }\n  }\n\n  function drawPointLabels(scale) {\n    var ctx = scale.ctx;\n    var opts = scale.options;\n    var angleLineOpts = opts.angleLines;\n    var pointLabelOpts = opts.pointLabels;\n    ctx.lineWidth = angleLineOpts.lineWidth;\n    ctx.strokeStyle = angleLineOpts.color;\n    var outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max); // Point Label Font\n\n    var plFont = getPointLabelFontOptions(scale);\n    ctx.textBaseline = 'top';\n\n    for (var i = getValueCount(scale) - 1; i >= 0; i--) {\n      if (angleLineOpts.display) {\n        var outerPosition = scale.getPointPosition(i, outerDistance);\n        ctx.beginPath();\n        ctx.moveTo(scale.xCenter, scale.yCenter);\n        ctx.lineTo(outerPosition.x, outerPosition.y);\n        ctx.stroke();\n        ctx.closePath();\n      }\n\n      if (pointLabelOpts.display) {\n        // Extra 3px out for some label spacing\n        var pointLabelPosition = scale.getPointPosition(i, outerDistance + 5); // Keep this in loop since we may support array properties here\n\n        var pointLabelFontColor = helpers.valueAtIndexOrDefault(pointLabelOpts.fontColor, i, globalDefaults.defaultFontColor);\n        ctx.font = plFont.font;\n        ctx.fillStyle = pointLabelFontColor;\n        var angleRadians = scale.getIndexAngle(i);\n        var angle = helpers.toDegrees(angleRadians);\n        ctx.textAlign = getTextAlignForAngle(angle);\n        adjustPointPositionForLabelHeight(angle, scale._pointLabelSizes[i], pointLabelPosition);\n        fillText(ctx, scale.pointLabels[i] || '', pointLabelPosition, plFont.size);\n      }\n    }\n  }\n\n  function drawRadiusLine(scale, gridLineOpts, radius, index) {\n    var ctx = scale.ctx;\n    ctx.strokeStyle = helpers.valueAtIndexOrDefault(gridLineOpts.color, index - 1);\n    ctx.lineWidth = helpers.valueAtIndexOrDefault(gridLineOpts.lineWidth, index - 1);\n\n    if (scale.options.gridLines.circular) {\n      // Draw circular arcs between the points\n      ctx.beginPath();\n      ctx.arc(scale.xCenter, scale.yCenter, radius, 0, Math.PI * 2);\n      ctx.closePath();\n      ctx.stroke();\n    } else {\n      // Draw straight lines connecting each index\n      var valueCount = getValueCount(scale);\n\n      if (valueCount === 0) {\n        return;\n      }\n\n      ctx.beginPath();\n      var pointPosition = scale.getPointPosition(0, radius);\n      ctx.moveTo(pointPosition.x, pointPosition.y);\n\n      for (var i = 1; i < valueCount; i++) {\n        pointPosition = scale.getPointPosition(i, radius);\n        ctx.lineTo(pointPosition.x, pointPosition.y);\n      }\n\n      ctx.closePath();\n      ctx.stroke();\n    }\n  }\n\n  function numberOrZero(param) {\n    return helpers.isNumber(param) ? param : 0;\n  }\n\n  var LinearRadialScale = Chart.LinearScaleBase.extend({\n    setDimensions: function setDimensions() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // Set the unconstrained dimension before label rotation\n\n      me.width = me.maxWidth;\n      me.height = me.maxHeight;\n      me.xCenter = Math.round(me.width / 2);\n      me.yCenter = Math.round(me.height / 2);\n      var minSize = helpers.min([me.height, me.width]);\n      var tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n      me.drawingArea = opts.display ? minSize / 2 - (tickFontSize / 2 + tickOpts.backdropPaddingY) : minSize / 2;\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var chart = me.chart;\n      var min = Number.POSITIVE_INFINITY;\n      var max = Number.NEGATIVE_INFINITY;\n      helpers.each(chart.data.datasets, function (dataset, datasetIndex) {\n        if (chart.isDatasetVisible(datasetIndex)) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          helpers.each(dataset.data, function (rawValue, index) {\n            var value = +me.getRightValue(rawValue);\n\n            if (isNaN(value) || meta.data[index].hidden) {\n              return;\n            }\n\n            min = Math.min(value, min);\n            max = Math.max(value, max);\n          });\n        }\n      });\n      me.min = min === Number.POSITIVE_INFINITY ? 0 : min;\n      me.max = max === Number.NEGATIVE_INFINITY ? 0 : max; // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\n      me.handleTickRangeOptions();\n    },\n    getTickLimit: function getTickLimit() {\n      var tickOpts = this.options.ticks;\n      var tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n      return Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(this.drawingArea / (1.5 * tickFontSize)));\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this;\n      Chart.LinearScaleBase.prototype.convertTicksToLabels.call(me); // Point labels\n\n      me.pointLabels = me.chart.data.labels.map(me.options.pointLabels.callback, me);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    fit: function fit() {\n      if (this.options.pointLabels.display) {\n        fitWithPointLabels(this);\n      } else {\n        _fit(this);\n      }\n    },\n\n    /**\n     * Set radius reductions and determine new radius and center point\n     * @private\n     */\n    setReductions: function setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n      var me = this;\n      var radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n      var radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n      var radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n      var radiusReductionBottom = -Math.max(furthestLimits.b - me.height, 0) / Math.cos(furthestAngles.b);\n      radiusReductionLeft = numberOrZero(radiusReductionLeft);\n      radiusReductionRight = numberOrZero(radiusReductionRight);\n      radiusReductionTop = numberOrZero(radiusReductionTop);\n      radiusReductionBottom = numberOrZero(radiusReductionBottom);\n      me.drawingArea = Math.min(Math.round(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2), Math.round(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2));\n      me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n    },\n    setCenterPoint: function setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n      var me = this;\n      var maxRight = me.width - rightMovement - me.drawingArea;\n      var maxLeft = leftMovement + me.drawingArea;\n      var maxTop = topMovement + me.drawingArea;\n      var maxBottom = me.height - bottomMovement - me.drawingArea;\n      me.xCenter = Math.round((maxLeft + maxRight) / 2 + me.left);\n      me.yCenter = Math.round((maxTop + maxBottom) / 2 + me.top);\n    },\n    getIndexAngle: function getIndexAngle(index) {\n      var angleMultiplier = Math.PI * 2 / getValueCount(this);\n      var startAngle = this.chart.options && this.chart.options.startAngle ? this.chart.options.startAngle : 0;\n      var startAngleRadians = startAngle * Math.PI * 2 / 360; // Start from the top instead of right, so remove a quarter of the circle\n\n      return index * angleMultiplier + startAngleRadians;\n    },\n    getDistanceFromCenterForValue: function getDistanceFromCenterForValue(value) {\n      var me = this;\n\n      if (value === null) {\n        return 0; // null always in center\n      } // Take into account half font size + the yPadding of the top value\n\n\n      var scalingFactor = me.drawingArea / (me.max - me.min);\n\n      if (me.options.ticks.reverse) {\n        return (me.max - value) * scalingFactor;\n      }\n\n      return (value - me.min) * scalingFactor;\n    },\n    getPointPosition: function getPointPosition(index, distanceFromCenter) {\n      var me = this;\n      var thisAngle = me.getIndexAngle(index) - Math.PI / 2;\n      return {\n        x: Math.round(Math.cos(thisAngle) * distanceFromCenter) + me.xCenter,\n        y: Math.round(Math.sin(thisAngle) * distanceFromCenter) + me.yCenter\n      };\n    },\n    getPointPositionForValue: function getPointPositionForValue(index, value) {\n      return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    },\n    getBasePosition: function getBasePosition() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      return me.getPointPositionForValue(0, me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0);\n    },\n    draw: function draw() {\n      var me = this;\n      var opts = me.options;\n      var gridLineOpts = opts.gridLines;\n      var tickOpts = opts.ticks;\n      var valueOrDefault = helpers.valueOrDefault;\n\n      if (opts.display) {\n        var ctx = me.ctx;\n        var startAngle = this.getIndexAngle(0); // Tick Font\n\n        var tickFontSize = valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n        var tickFontStyle = valueOrDefault(tickOpts.fontStyle, globalDefaults.defaultFontStyle);\n        var tickFontFamily = valueOrDefault(tickOpts.fontFamily, globalDefaults.defaultFontFamily);\n        var tickLabelFont = helpers.fontString(tickFontSize, tickFontStyle, tickFontFamily);\n        helpers.each(me.ticks, function (label, index) {\n          // Don't draw a centre value (if it is minimum)\n          if (index > 0 || tickOpts.reverse) {\n            var yCenterOffset = me.getDistanceFromCenterForValue(me.ticksAsNumbers[index]); // Draw circular lines around the scale\n\n            if (gridLineOpts.display && index !== 0) {\n              drawRadiusLine(me, gridLineOpts, yCenterOffset, index);\n            }\n\n            if (tickOpts.display) {\n              var tickFontColor = valueOrDefault(tickOpts.fontColor, globalDefaults.defaultFontColor);\n              ctx.font = tickLabelFont;\n              ctx.save();\n              ctx.translate(me.xCenter, me.yCenter);\n              ctx.rotate(startAngle);\n\n              if (tickOpts.showLabelBackdrop) {\n                var labelWidth = ctx.measureText(label).width;\n                ctx.fillStyle = tickOpts.backdropColor;\n                ctx.fillRect(-labelWidth / 2 - tickOpts.backdropPaddingX, -yCenterOffset - tickFontSize / 2 - tickOpts.backdropPaddingY, labelWidth + tickOpts.backdropPaddingX * 2, tickFontSize + tickOpts.backdropPaddingY * 2);\n              }\n\n              ctx.textAlign = 'center';\n              ctx.textBaseline = 'middle';\n              ctx.fillStyle = tickFontColor;\n              ctx.fillText(label, 0, -yCenterOffset);\n              ctx.restore();\n            }\n          }\n        });\n\n        if (opts.angleLines.display || opts.pointLabels.display) {\n          drawPointLabels(me);\n        }\n      }\n    }\n  });\n  Chart.scaleService.registerScaleType('radialLinear', LinearRadialScale, defaultConfig);\n};","/* global window: false */\n'use strict';\n\nvar moment = require('moment');\n\nmoment = typeof moment === 'function' ? moment : window.moment;\n\nvar defaults = require('../core/core.defaults');\n\nvar helpers = require('../helpers/index'); // Integer constants are from the ES6 spec.\n\n\nvar MIN_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991;\nvar MAX_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\nvar INTERVALS = {\n  millisecond: {\n    common: true,\n    size: 1,\n    steps: [1, 2, 5, 10, 20, 50, 100, 250, 500]\n  },\n  second: {\n    common: true,\n    size: 1000,\n    steps: [1, 2, 5, 10, 30]\n  },\n  minute: {\n    common: true,\n    size: 60000,\n    steps: [1, 2, 5, 10, 30]\n  },\n  hour: {\n    common: true,\n    size: 3600000,\n    steps: [1, 2, 3, 6, 12]\n  },\n  day: {\n    common: true,\n    size: 86400000,\n    steps: [1, 2, 5]\n  },\n  week: {\n    common: false,\n    size: 604800000,\n    steps: [1, 2, 3, 4]\n  },\n  month: {\n    common: true,\n    size: 2.628e9,\n    steps: [1, 2, 3]\n  },\n  quarter: {\n    common: false,\n    size: 7.884e9,\n    steps: [1, 2, 3, 4]\n  },\n  year: {\n    common: true,\n    size: 3.154e10\n  }\n};\nvar UNITS = Object.keys(INTERVALS);\n\nfunction sorter(a, b) {\n  return a - b;\n}\n\nfunction arrayUnique(items) {\n  var hash = {};\n  var out = [];\n  var i, ilen, item;\n\n  for (i = 0, ilen = items.length; i < ilen; ++i) {\n    item = items[i];\n\n    if (!hash[item]) {\n      hash[item] = true;\n      out.push(item);\n    }\n  }\n\n  return out;\n}\n/**\n * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n * extremity (left + width or top + height). Note that it would be more optimized to directly\n * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n *\n * @param {Number[]} timestamps - timestamps sorted from lowest to highest.\n * @param {String} distribution - If 'linear', timestamps will be spread linearly along the min\n * and max range, so basically, the table will contains only two items: {min, 0} and {max, 1}.\n * If 'series', timestamps will be positioned at the same distance from each other. In this\n * case, only timestamps that break the time linearity are registered, meaning that in the\n * best case, all timestamps are linear, the table contains only min and max.\n */\n\n\nfunction buildLookupTable(timestamps, min, max, distribution) {\n  if (distribution === 'linear' || !timestamps.length) {\n    return [{\n      time: min,\n      pos: 0\n    }, {\n      time: max,\n      pos: 1\n    }];\n  }\n\n  var table = [];\n  var items = [min];\n  var i, ilen, prev, curr, next;\n\n  for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n    curr = timestamps[i];\n\n    if (curr > min && curr < max) {\n      items.push(curr);\n    }\n  }\n\n  items.push(max);\n\n  for (i = 0, ilen = items.length; i < ilen; ++i) {\n    next = items[i + 1];\n    prev = items[i - 1];\n    curr = items[i]; // only add points that breaks the scale linearity\n\n    if (prev === undefined || next === undefined || Math.round((next + prev) / 2) !== curr) {\n      table.push({\n        time: curr,\n        pos: i / (ilen - 1)\n      });\n    }\n  }\n\n  return table;\n} // @see adapted from http://www.anujgakhar.com/2014/03/01/binary-search-in-javascript/\n\n\nfunction lookup(table, key, value) {\n  var lo = 0;\n  var hi = table.length - 1;\n  var mid, i0, i1;\n\n  while (lo >= 0 && lo <= hi) {\n    mid = lo + hi >> 1;\n    i0 = table[mid - 1] || null;\n    i1 = table[mid];\n\n    if (!i0) {\n      // given value is outside table (before first item)\n      return {\n        lo: null,\n        hi: i1\n      };\n    } else if (i1[key] < value) {\n      lo = mid + 1;\n    } else if (i0[key] > value) {\n      hi = mid - 1;\n    } else {\n      return {\n        lo: i0,\n        hi: i1\n      };\n    }\n  } // given value is outside table (after last item)\n\n\n  return {\n    lo: i1,\n    hi: null\n  };\n}\n/**\n * Linearly interpolates the given source `value` using the table items `skey` values and\n * returns the associated `tkey` value. For example, interpolate(table, 'time', 42, 'pos')\n * returns the position for a timestamp equal to 42. If value is out of bounds, values at\n * index [0, 1] or [n - 1, n] are used for the interpolation.\n */\n\n\nfunction interpolate(table, skey, sval, tkey) {\n  var range = lookup(table, skey, sval); // Note: the lookup table ALWAYS contains at least 2 items (min and max)\n\n  var prev = !range.lo ? table[0] : !range.hi ? table[table.length - 2] : range.lo;\n  var next = !range.lo ? table[1] : !range.hi ? table[table.length - 1] : range.hi;\n  var span = next[skey] - prev[skey];\n  var ratio = span ? (sval - prev[skey]) / span : 0;\n  var offset = (next[tkey] - prev[tkey]) * ratio;\n  return prev[tkey] + offset;\n}\n/**\n * Convert the given value to a moment object using the given time options.\n * @see http://momentjs.com/docs/#/parsing/\n */\n\n\nfunction momentify(value, options) {\n  var parser = options.parser;\n  var format = options.parser || options.format;\n\n  if (typeof parser === 'function') {\n    return parser(value);\n  }\n\n  if (typeof value === 'string' && typeof format === 'string') {\n    return moment(value, format);\n  }\n\n  if (!(value instanceof moment)) {\n    value = moment(value);\n  }\n\n  if (value.isValid()) {\n    return value;\n  } // Labels are in an incompatible moment format and no `parser` has been provided.\n  // The user might still use the deprecated `format` option to convert his inputs.\n\n\n  if (typeof format === 'function') {\n    return format(value);\n  }\n\n  return value;\n}\n\nfunction parse(input, scale) {\n  if (helpers.isNullOrUndef(input)) {\n    return null;\n  }\n\n  var options = scale.options.time;\n  var value = momentify(scale.getRightValue(input), options);\n\n  if (!value.isValid()) {\n    return null;\n  }\n\n  if (options.round) {\n    value.startOf(options.round);\n  }\n\n  return value.valueOf();\n}\n/**\n * Returns the number of unit to skip to be able to display up to `capacity` number of ticks\n * in `unit` for the given `min` / `max` range and respecting the interval steps constraints.\n */\n\n\nfunction determineStepSize(min, max, unit, capacity) {\n  var range = max - min;\n  var interval = INTERVALS[unit];\n  var milliseconds = interval.size;\n  var steps = interval.steps;\n  var i, ilen, factor;\n\n  if (!steps) {\n    return Math.ceil(range / (capacity * milliseconds));\n  }\n\n  for (i = 0, ilen = steps.length; i < ilen; ++i) {\n    factor = steps[i];\n\n    if (Math.ceil(range / (milliseconds * factor)) <= capacity) {\n      break;\n    }\n  }\n\n  return factor;\n}\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n */\n\n\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  var ilen = UNITS.length;\n  var i, interval, factor;\n\n  for (i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    interval = INTERVALS[UNITS[i]];\n    factor = interval.steps ? interval.steps[interval.steps.length - 1] : MAX_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n/**\n * Figures out what unit to format a set of ticks with\n */\n\n\nfunction determineUnitForFormatting(ticks, minUnit, min, max) {\n  var duration = moment.duration(moment(max).diff(moment(min)));\n  var ilen = UNITS.length;\n  var i, unit;\n\n  for (i = ilen - 1; i >= UNITS.indexOf(minUnit); i--) {\n    unit = UNITS[i];\n\n    if (INTERVALS[unit].common && duration.as(unit) >= ticks.length) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\nfunction determineMajorUnit(unit) {\n  for (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n/**\n * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n * `minor` unit, aligned on the `major` unit and using the given scale time `options`.\n * Important: this method can return ticks outside the min and max range, it's the\n * responsibility of the calling code to clamp values if needed.\n */\n\n\nfunction generate(min, max, capacity, options) {\n  var timeOpts = options.time;\n  var minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, capacity);\n  var major = determineMajorUnit(minor);\n  var stepSize = helpers.valueOrDefault(timeOpts.stepSize, timeOpts.unitStepSize);\n  var weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n  var majorTicksEnabled = options.ticks.major.enabled;\n  var interval = INTERVALS[minor];\n  var first = moment(min);\n  var last = moment(max);\n  var ticks = [];\n  var time;\n\n  if (!stepSize) {\n    stepSize = determineStepSize(min, max, minor, capacity);\n  } // For 'week' unit, handle the first day of week option\n\n\n  if (weekday) {\n    first = first.isoWeekday(weekday);\n    last = last.isoWeekday(weekday);\n  } // Align first/last ticks on unit\n\n\n  first = first.startOf(weekday ? 'day' : minor);\n  last = last.startOf(weekday ? 'day' : minor); // Make sure that the last tick include max\n\n  if (last < max) {\n    last.add(1, minor);\n  }\n\n  time = moment(first);\n\n  if (majorTicksEnabled && major && !weekday && !timeOpts.round) {\n    // Align the first tick on the previous `minor` unit aligned on the `major` unit:\n    // we first aligned time on the previous `major` unit then add the number of full\n    // stepSize there is between first and the previous major time.\n    time.startOf(major);\n    time.add(~~((first - time) / (interval.size * stepSize)) * stepSize, minor);\n  }\n\n  for (; time < last; time.add(stepSize, minor)) {\n    ticks.push(+time);\n  }\n\n  ticks.push(+time);\n  return ticks;\n}\n/**\n * Returns the right and left offsets from edges in the form of {left, right}.\n * Offsets are added when the `offset` option is true.\n */\n\n\nfunction computeOffsets(table, ticks, min, max, options) {\n  var left = 0;\n  var right = 0;\n  var upper, lower;\n\n  if (options.offset && ticks.length) {\n    if (!options.time.min) {\n      upper = ticks.length > 1 ? ticks[1] : max;\n      lower = ticks[0];\n      left = (interpolate(table, 'time', upper, 'pos') - interpolate(table, 'time', lower, 'pos')) / 2;\n    }\n\n    if (!options.time.max) {\n      upper = ticks[ticks.length - 1];\n      lower = ticks.length > 1 ? ticks[ticks.length - 2] : min;\n      right = (interpolate(table, 'time', upper, 'pos') - interpolate(table, 'time', lower, 'pos')) / 2;\n    }\n  }\n\n  return {\n    left: left,\n    right: right\n  };\n}\n\nfunction ticksFromTimestamps(values, majorUnit) {\n  var ticks = [];\n  var i, ilen, value, major;\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    value = values[i];\n    major = majorUnit ? value === +moment(value).startOf(majorUnit) : false;\n    ticks.push({\n      value: value,\n      major: major\n    });\n  }\n\n  return ticks;\n}\n\nfunction determineLabelFormat(data, timeOpts) {\n  var i, momentDate, hasTime;\n  var ilen = data.length; // find the label with the most parts (milliseconds, minutes, etc.)\n  // format all labels with the same level of detail as the most specific label\n\n  for (i = 0; i < ilen; i++) {\n    momentDate = momentify(data[i], timeOpts);\n\n    if (momentDate.millisecond() !== 0) {\n      return 'MMM D, YYYY h:mm:ss.SSS a';\n    }\n\n    if (momentDate.second() !== 0 || momentDate.minute() !== 0 || momentDate.hour() !== 0) {\n      hasTime = true;\n    }\n  }\n\n  if (hasTime) {\n    return 'MMM D, YYYY h:mm:ss a';\n  }\n\n  return 'MMM D, YYYY';\n}\n\nmodule.exports = function (Chart) {\n  var defaultConfig = {\n    position: 'bottom',\n\n    /**\n     * Data distribution along the scale:\n     * - 'linear': data are spread according to their time (distances can vary),\n     * - 'series': data are spread at the same distance from each other.\n     * @see https://github.com/chartjs/Chart.js/pull/4507\n     * @since 2.7.0\n     */\n    distribution: 'linear',\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n    time: {\n      parser: false,\n      // false == a pattern string from http://momentjs.com/docs/#/parsing/string-format/ or a custom callback that converts its argument to a moment\n      format: false,\n      // DEPRECATED false == date objects, moment object, callback or a pattern string from http://momentjs.com/docs/#/parsing/string-format/\n      unit: false,\n      // false == automatic or override with week, month, year, etc.\n      round: false,\n      // none, or override with week, month, year, etc.\n      displayFormat: false,\n      // DEPRECATED\n      isoWeekday: false,\n      // override week start day - see http://momentjs.com/docs/#/get-set/iso-weekday/\n      minUnit: 'millisecond',\n      // defaults to unit's corresponding unitFormat below or override using pattern string from http://momentjs.com/docs/#/displaying/format/\n      displayFormats: {\n        millisecond: 'h:mm:ss.SSS a',\n        // 11:20:01.123 AM,\n        second: 'h:mm:ss a',\n        // 11:20:01 AM\n        minute: 'h:mm a',\n        // 11:20 AM\n        hour: 'hA',\n        // 5PM\n        day: 'MMM D',\n        // Sep 4\n        week: 'll',\n        // Week 46, or maybe \"[W]WW - YYYY\" ?\n        month: 'MMM YYYY',\n        // Sept 2015\n        quarter: '[Q]Q - YYYY',\n        // Q3\n        year: 'YYYY' // 2015\n\n      }\n    },\n    ticks: {\n      autoSkip: false,\n\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n      major: {\n        enabled: false\n      }\n    }\n  };\n  var TimeScale = Chart.Scale.extend({\n    initialize: function initialize() {\n      if (!moment) {\n        throw new Error('Chart.js - Moment.js could not be found! You must include it before Chart.js to use the time scale. Download at https://momentjs.com');\n      }\n\n      this.mergeTicksOptions();\n      Chart.Scale.prototype.initialize.call(this);\n    },\n    update: function update() {\n      var me = this;\n      var options = me.options; // DEPRECATIONS: output a message only one time per update\n\n      if (options.time && options.time.format) {\n        console.warn('options.time.format is deprecated and replaced by options.time.parser.');\n      }\n\n      return Chart.Scale.prototype.update.apply(me, arguments);\n    },\n\n    /**\n     * Allows data to be referenced via 't' attribute\n     */\n    getRightValue: function getRightValue(rawValue) {\n      if (rawValue && rawValue.t !== undefined) {\n        rawValue = rawValue.t;\n      }\n\n      return Chart.Scale.prototype.getRightValue.call(this, rawValue);\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var chart = me.chart;\n      var timeOpts = me.options.time;\n      var unit = timeOpts.unit || 'day';\n      var min = MAX_INTEGER;\n      var max = MIN_INTEGER;\n      var timestamps = [];\n      var datasets = [];\n      var labels = [];\n      var i, j, ilen, jlen, data, timestamp; // Convert labels to timestamps\n\n      for (i = 0, ilen = chart.data.labels.length; i < ilen; ++i) {\n        labels.push(parse(chart.data.labels[i], me));\n      } // Convert data to timestamps\n\n\n      for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          data = chart.data.datasets[i].data; // Let's consider that all data have the same format.\n\n          if (helpers.isObject(data[0])) {\n            datasets[i] = [];\n\n            for (j = 0, jlen = data.length; j < jlen; ++j) {\n              timestamp = parse(data[j], me);\n              timestamps.push(timestamp);\n              datasets[i][j] = timestamp;\n            }\n          } else {\n            timestamps.push.apply(timestamps, labels);\n            datasets[i] = labels.slice(0);\n          }\n        } else {\n          datasets[i] = [];\n        }\n      }\n\n      if (labels.length) {\n        // Sort labels **after** data have been converted\n        labels = arrayUnique(labels).sort(sorter);\n        min = Math.min(min, labels[0]);\n        max = Math.max(max, labels[labels.length - 1]);\n      }\n\n      if (timestamps.length) {\n        timestamps = arrayUnique(timestamps).sort(sorter);\n        min = Math.min(min, timestamps[0]);\n        max = Math.max(max, timestamps[timestamps.length - 1]);\n      }\n\n      min = parse(timeOpts.min, me) || min;\n      max = parse(timeOpts.max, me) || max; // In case there is no valid min/max, set limits based on unit time option\n\n      min = min === MAX_INTEGER ? +moment().startOf(unit) : min;\n      max = max === MIN_INTEGER ? +moment().endOf(unit) + 1 : max; // Make sure that max is strictly higher than min (required by the lookup table)\n\n      me.min = Math.min(min, max);\n      me.max = Math.max(min + 1, max); // PRIVATE\n\n      me._horizontal = me.isHorizontal();\n      me._table = [];\n      me._timestamps = {\n        data: timestamps,\n        datasets: datasets,\n        labels: labels\n      };\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      var options = me.options;\n      var timeOpts = options.time;\n      var timestamps = [];\n      var ticks = [];\n      var i, ilen, timestamp;\n\n      switch (options.ticks.source) {\n        case 'data':\n          timestamps = me._timestamps.data;\n          break;\n\n        case 'labels':\n          timestamps = me._timestamps.labels;\n          break;\n\n        case 'auto':\n        default:\n          timestamps = generate(min, max, me.getLabelCapacity(min), options);\n      }\n\n      if (options.bounds === 'ticks' && timestamps.length) {\n        min = timestamps[0];\n        max = timestamps[timestamps.length - 1];\n      } // Enforce limits with user min/max options\n\n\n      min = parse(timeOpts.min, me) || min;\n      max = parse(timeOpts.max, me) || max; // Remove ticks outside the min/max range\n\n      for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n        timestamp = timestamps[i];\n\n        if (timestamp >= min && timestamp <= max) {\n          ticks.push(timestamp);\n        }\n      }\n\n      me.min = min;\n      me.max = max; // PRIVATE\n\n      me._unit = timeOpts.unit || determineUnitForFormatting(ticks, timeOpts.minUnit, me.min, me.max);\n      me._majorUnit = determineMajorUnit(me._unit);\n      me._table = buildLookupTable(me._timestamps.data, min, max, options.distribution);\n      me._offsets = computeOffsets(me._table, ticks, min, max, options);\n      me._labelFormat = determineLabelFormat(me._timestamps.data, timeOpts);\n      return ticksFromTimestamps(ticks, me._majorUnit);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      var me = this;\n      var data = me.chart.data;\n      var timeOpts = me.options.time;\n      var label = data.labels && index < data.labels.length ? data.labels[index] : '';\n      var value = data.datasets[datasetIndex].data[index];\n\n      if (helpers.isObject(value)) {\n        label = me.getRightValue(value);\n      }\n\n      if (timeOpts.tooltipFormat) {\n        return momentify(label, timeOpts).format(timeOpts.tooltipFormat);\n      }\n\n      if (typeof label === 'string') {\n        return label;\n      }\n\n      return momentify(label, timeOpts).format(me._labelFormat);\n    },\n\n    /**\n     * Function to format an individual tick mark\n     * @private\n     */\n    tickFormatFunction: function tickFormatFunction(tick, index, ticks, formatOverride) {\n      var me = this;\n      var options = me.options;\n      var time = tick.valueOf();\n      var formats = options.time.displayFormats;\n      var minorFormat = formats[me._unit];\n      var majorUnit = me._majorUnit;\n      var majorFormat = formats[majorUnit];\n      var majorTime = tick.clone().startOf(majorUnit).valueOf();\n      var majorTickOpts = options.ticks.major;\n      var major = majorTickOpts.enabled && majorUnit && majorFormat && time === majorTime;\n      var label = tick.format(formatOverride ? formatOverride : major ? majorFormat : minorFormat);\n      var tickOpts = major ? majorTickOpts : options.ticks.minor;\n      var formatter = helpers.valueOrDefault(tickOpts.callback, tickOpts.userCallback);\n      return formatter ? formatter(label, index, ticks) : label;\n    },\n    convertTicksToLabels: function convertTicksToLabels(ticks) {\n      var labels = [];\n      var i, ilen;\n\n      for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n        labels.push(this.tickFormatFunction(moment(ticks[i].value), i, ticks));\n      }\n\n      return labels;\n    },\n\n    /**\n     * @private\n     */\n    getPixelForOffset: function getPixelForOffset(time) {\n      var me = this;\n      var size = me._horizontal ? me.width : me.height;\n      var start = me._horizontal ? me.left : me.top;\n      var pos = interpolate(me._table, 'time', time, 'pos');\n      return start + size * (me._offsets.left + pos) / (me._offsets.left + 1 + me._offsets.right);\n    },\n    getPixelForValue: function getPixelForValue(value, index, datasetIndex) {\n      var me = this;\n      var time = null;\n\n      if (index !== undefined && datasetIndex !== undefined) {\n        time = me._timestamps.datasets[datasetIndex][index];\n      }\n\n      if (time === null) {\n        time = parse(value, me);\n      }\n\n      if (time !== null) {\n        return me.getPixelForOffset(time);\n      }\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      var ticks = this.getTicks();\n      return index >= 0 && index < ticks.length ? this.getPixelForOffset(ticks[index].value) : null;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var size = me._horizontal ? me.width : me.height;\n      var start = me._horizontal ? me.left : me.top;\n      var pos = (size ? (pixel - start) / size : 0) * (me._offsets.left + 1 + me._offsets.left) - me._offsets.right;\n      var time = interpolate(me._table, 'pos', pos, 'time');\n      return moment(time);\n    },\n\n    /**\n     * Crude approximation of what the label width might be\n     * @private\n     */\n    getLabelWidth: function getLabelWidth(label) {\n      var me = this;\n      var ticksOpts = me.options.ticks;\n      var tickLabelWidth = me.ctx.measureText(label).width;\n      var angle = helpers.toRadians(ticksOpts.maxRotation);\n      var cosRotation = Math.cos(angle);\n      var sinRotation = Math.sin(angle);\n      var tickFontSize = helpers.valueOrDefault(ticksOpts.fontSize, defaults.global.defaultFontSize);\n      return tickLabelWidth * cosRotation + tickFontSize * sinRotation;\n    },\n\n    /**\n     * @private\n     */\n    getLabelCapacity: function getLabelCapacity(exampleTime) {\n      var me = this;\n      var formatOverride = me.options.time.displayFormats.millisecond; // Pick the longest format for guestimation\n\n      var exampleLabel = me.tickFormatFunction(moment(exampleTime), 0, [], formatOverride);\n      var tickLabelWidth = me.getLabelWidth(exampleLabel);\n      var innerWidth = me.isHorizontal() ? me.width : me.height;\n      var capacity = Math.floor(innerWidth / tickLabelWidth);\n      return capacity > 0 ? capacity : 1;\n    }\n  });\n  Chart.scaleService.registerScaleType('time', TimeScale, defaultConfig);\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar elements = require('../elements/index');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('bar', {\n  hover: {\n    mode: 'label'\n  },\n  scales: {\n    xAxes: [{\n      type: 'category',\n      // Specific to Bar Controller\n      categoryPercentage: 0.8,\n      barPercentage: 0.9,\n      // offset settings\n      offset: true,\n      // grid line settings\n      gridLines: {\n        offsetGridLines: true\n      }\n    }],\n    yAxes: [{\n      type: 'linear'\n    }]\n  }\n});\n\ndefaults._set('horizontalBar', {\n  hover: {\n    mode: 'index',\n    axis: 'y'\n  },\n  scales: {\n    xAxes: [{\n      type: 'linear',\n      position: 'bottom'\n    }],\n    yAxes: [{\n      position: 'left',\n      type: 'category',\n      // Specific to Horizontal Bar Controller\n      categoryPercentage: 0.8,\n      barPercentage: 0.9,\n      // offset settings\n      offset: true,\n      // grid line settings\n      gridLines: {\n        offsetGridLines: true\n      }\n    }]\n  },\n  elements: {\n    rectangle: {\n      borderSkipped: 'left'\n    }\n  },\n  tooltips: {\n    callbacks: {\n      title: function title(item, data) {\n        // Pick first xLabel for now\n        var title = '';\n\n        if (item.length > 0) {\n          if (item[0].yLabel) {\n            title = item[0].yLabel;\n          } else if (data.labels.length > 0 && item[0].index < data.labels.length) {\n            title = data.labels[item[0].index];\n          }\n        }\n\n        return title;\n      },\n      label: function label(item, data) {\n        var datasetLabel = data.datasets[item.datasetIndex].label || '';\n        return datasetLabel + ': ' + item.xLabel;\n      }\n    },\n    mode: 'index',\n    axis: 'y'\n  }\n});\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\n\n\nfunction computeMinSampleSize(scale, pixels) {\n  var min = scale.isHorizontal() ? scale.width : scale.height;\n  var ticks = scale.getTicks();\n  var prev, curr, i, ilen;\n\n  for (i = 1, ilen = pixels.length; i < ilen; ++i) {\n    min = Math.min(min, pixels[i] - pixels[i - 1]);\n  }\n\n  for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    min = i > 0 ? Math.min(min, curr - prev) : min;\n    prev = curr;\n  }\n\n  return min;\n}\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\n\n\nfunction computeFitCategoryTraits(index, ruler, options) {\n  var thickness = options.barThickness;\n  var count = ruler.stackCount;\n  var curr = ruler.pixels[index];\n  var size, ratio;\n\n  if (helpers.isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    // When bar thickness is enforced, category and bar percentages are ignored.\n    // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n    // and deprecate barPercentage since this value is ignored when thickness is absolute.\n    size = thickness * count;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / count,\n    ratio: ratio,\n    start: curr - size / 2\n  };\n}\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\n\n\nfunction computeFlexCategoryTraits(index, ruler, options) {\n  var pixels = ruler.pixels;\n  var curr = pixels[index];\n  var prev = index > 0 ? pixels[index - 1] : null;\n  var next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  var percent = options.categoryPercentage;\n  var start, size;\n\n  if (prev === null) {\n    // first data: its size is double based on the next point or,\n    // if it's also the last data, we use the scale end extremity.\n    prev = curr - (next === null ? ruler.end - curr : next - curr);\n  }\n\n  if (next === null) {\n    // last data: its size is also double based on the previous point.\n    next = curr + curr - prev;\n  }\n\n  start = curr - (curr - prev) / 2 * percent;\n  size = (next - prev) / 2 * percent;\n  return {\n    chunk: size / ruler.stackCount,\n    ratio: options.barPercentage,\n    start: start\n  };\n}\n\nmodule.exports = function (Chart) {\n  Chart.controllers.bar = Chart.DatasetController.extend({\n    dataElementType: elements.Rectangle,\n    initialize: function initialize() {\n      var me = this;\n      var meta;\n      Chart.DatasetController.prototype.initialize.apply(me, arguments);\n      meta = me.getMeta();\n      meta.stack = me.getDataset().stack;\n      meta.bar = true;\n    },\n    update: function update(reset) {\n      var me = this;\n      var rects = me.getMeta().data;\n      var i, ilen;\n      me._ruler = me.getRuler();\n\n      for (i = 0, ilen = rects.length; i < ilen; ++i) {\n        me.updateElement(rects[i], i, reset);\n      }\n    },\n    updateElement: function updateElement(rectangle, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var dataset = me.getDataset();\n      var custom = rectangle.custom || {};\n      var rectangleOptions = chart.options.elements.rectangle;\n      rectangle._xScale = me.getScaleForId(meta.xAxisID);\n      rectangle._yScale = me.getScaleForId(meta.yAxisID);\n      rectangle._datasetIndex = me.index;\n      rectangle._index = index;\n      rectangle._model = {\n        datasetLabel: dataset.label,\n        label: chart.data.labels[index],\n        borderSkipped: custom.borderSkipped ? custom.borderSkipped : rectangleOptions.borderSkipped,\n        backgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.backgroundColor, index, rectangleOptions.backgroundColor),\n        borderColor: custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.borderColor, index, rectangleOptions.borderColor),\n        borderWidth: custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.borderWidth, index, rectangleOptions.borderWidth)\n      };\n      me.updateElementGeometry(rectangle, index, reset);\n      rectangle.pivot();\n    },\n\n    /**\n     * @private\n     */\n    updateElementGeometry: function updateElementGeometry(rectangle, index, reset) {\n      var me = this;\n      var model = rectangle._model;\n      var vscale = me.getValueScale();\n      var base = vscale.getBasePixel();\n      var horizontal = vscale.isHorizontal();\n      var ruler = me._ruler || me.getRuler();\n      var vpixels = me.calculateBarValuePixels(me.index, index);\n      var ipixels = me.calculateBarIndexPixels(me.index, index, ruler);\n      model.horizontal = horizontal;\n      model.base = reset ? base : vpixels.base;\n      model.x = horizontal ? reset ? base : vpixels.head : ipixels.center;\n      model.y = horizontal ? ipixels.center : reset ? base : vpixels.head;\n      model.height = horizontal ? ipixels.size : undefined;\n      model.width = horizontal ? undefined : ipixels.size;\n    },\n\n    /**\n     * @private\n     */\n    getValueScaleId: function getValueScaleId() {\n      return this.getMeta().yAxisID;\n    },\n\n    /**\n     * @private\n     */\n    getIndexScaleId: function getIndexScaleId() {\n      return this.getMeta().xAxisID;\n    },\n\n    /**\n     * @private\n     */\n    getValueScale: function getValueScale() {\n      return this.getScaleForId(this.getValueScaleId());\n    },\n\n    /**\n     * @private\n     */\n    getIndexScale: function getIndexScale() {\n      return this.getScaleForId(this.getIndexScaleId());\n    },\n\n    /**\n     * Returns the stacks based on groups and bar visibility.\n     * @param {Number} [last] - The dataset index\n     * @returns {Array} The stack list\n     * @private\n     */\n    _getStacks: function _getStacks(last) {\n      var me = this;\n      var chart = me.chart;\n      var scale = me.getIndexScale();\n      var stacked = scale.options.stacked;\n      var ilen = last === undefined ? chart.data.datasets.length : last + 1;\n      var stacks = [];\n      var i, meta;\n\n      for (i = 0; i < ilen; ++i) {\n        meta = chart.getDatasetMeta(i);\n\n        if (meta.bar && chart.isDatasetVisible(i) && (stacked === false || stacked === true && stacks.indexOf(meta.stack) === -1 || stacked === undefined && (meta.stack === undefined || stacks.indexOf(meta.stack) === -1))) {\n          stacks.push(meta.stack);\n        }\n      }\n\n      return stacks;\n    },\n\n    /**\n     * Returns the effective number of stacks based on groups and bar visibility.\n     * @private\n     */\n    getStackCount: function getStackCount() {\n      return this._getStacks().length;\n    },\n\n    /**\n     * Returns the stack index for the given dataset based on groups and bar visibility.\n     * @param {Number} [datasetIndex] - The dataset index\n     * @param {String} [name] - The stack name to find\n     * @returns {Number} The stack index\n     * @private\n     */\n    getStackIndex: function getStackIndex(datasetIndex, name) {\n      var stacks = this._getStacks(datasetIndex);\n\n      var index = name !== undefined ? stacks.indexOf(name) : -1; // indexOf returns -1 if element is not present\n\n      return index === -1 ? stacks.length - 1 : index;\n    },\n\n    /**\n     * @private\n     */\n    getRuler: function getRuler() {\n      var me = this;\n      var scale = me.getIndexScale();\n      var stackCount = me.getStackCount();\n      var datasetIndex = me.index;\n      var isHorizontal = scale.isHorizontal();\n      var start = isHorizontal ? scale.left : scale.top;\n      var end = start + (isHorizontal ? scale.width : scale.height);\n      var pixels = [];\n      var i, ilen, min;\n\n      for (i = 0, ilen = me.getMeta().data.length; i < ilen; ++i) {\n        pixels.push(scale.getPixelForValue(null, i, datasetIndex));\n      }\n\n      min = helpers.isNullOrUndef(scale.options.barThickness) ? computeMinSampleSize(scale, pixels) : -1;\n      return {\n        min: min,\n        pixels: pixels,\n        start: start,\n        end: end,\n        stackCount: stackCount,\n        scale: scale\n      };\n    },\n\n    /**\n     * Note: pixel values are not clamped to the scale area.\n     * @private\n     */\n    calculateBarValuePixels: function calculateBarValuePixels(datasetIndex, index) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var scale = me.getValueScale();\n      var datasets = chart.data.datasets;\n      var value = scale.getRightValue(datasets[datasetIndex].data[index]);\n      var stacked = scale.options.stacked;\n      var stack = meta.stack;\n      var start = 0;\n      var i, imeta, ivalue, base, head, size;\n\n      if (stacked || stacked === undefined && stack !== undefined) {\n        for (i = 0; i < datasetIndex; ++i) {\n          imeta = chart.getDatasetMeta(i);\n\n          if (imeta.bar && imeta.stack === stack && imeta.controller.getValueScaleId() === scale.id && chart.isDatasetVisible(i)) {\n            ivalue = scale.getRightValue(datasets[i].data[index]);\n\n            if (value < 0 && ivalue < 0 || value >= 0 && ivalue > 0) {\n              start += ivalue;\n            }\n          }\n        }\n      }\n\n      base = scale.getPixelForValue(start);\n      head = scale.getPixelForValue(start + value);\n      size = (head - base) / 2;\n      return {\n        size: size,\n        base: base,\n        head: head,\n        center: head + size / 2\n      };\n    },\n\n    /**\n     * @private\n     */\n    calculateBarIndexPixels: function calculateBarIndexPixels(datasetIndex, index, ruler) {\n      var me = this;\n      var options = ruler.scale.options;\n      var range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options) : computeFitCategoryTraits(index, ruler, options);\n      var stackIndex = me.getStackIndex(datasetIndex, me.getMeta().stack);\n      var center = range.start + range.chunk * stackIndex + range.chunk / 2;\n      var size = Math.min(helpers.valueOrDefault(options.maxBarThickness, Infinity), range.chunk * range.ratio);\n      return {\n        base: center - size / 2,\n        head: center + size / 2,\n        center: center,\n        size: size\n      };\n    },\n    draw: function draw() {\n      var me = this;\n      var chart = me.chart;\n      var scale = me.getValueScale();\n      var rects = me.getMeta().data;\n      var dataset = me.getDataset();\n      var ilen = rects.length;\n      var i = 0;\n      helpers.canvas.clipArea(chart.ctx, chart.chartArea);\n\n      for (; i < ilen; ++i) {\n        if (!isNaN(scale.getRightValue(dataset.data[i]))) {\n          rects[i].draw();\n        }\n      }\n\n      helpers.canvas.unclipArea(chart.ctx);\n    },\n    setHoverStyle: function setHoverStyle(rectangle) {\n      var dataset = this.chart.data.datasets[rectangle._datasetIndex];\n      var index = rectangle._index;\n      var custom = rectangle.custom || {};\n      var model = rectangle._model;\n      model.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : helpers.valueAtIndexOrDefault(dataset.hoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\n      model.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : helpers.valueAtIndexOrDefault(dataset.hoverBorderColor, index, helpers.getHoverColor(model.borderColor));\n      model.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : helpers.valueAtIndexOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);\n    },\n    removeHoverStyle: function removeHoverStyle(rectangle) {\n      var dataset = this.chart.data.datasets[rectangle._datasetIndex];\n      var index = rectangle._index;\n      var custom = rectangle.custom || {};\n      var model = rectangle._model;\n      var rectangleElementOptions = this.chart.options.elements.rectangle;\n      model.backgroundColor = custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.backgroundColor, index, rectangleElementOptions.backgroundColor);\n      model.borderColor = custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.borderColor, index, rectangleElementOptions.borderColor);\n      model.borderWidth = custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.borderWidth, index, rectangleElementOptions.borderWidth);\n    }\n  });\n  Chart.controllers.horizontalBar = Chart.controllers.bar.extend({\n    /**\n     * @private\n     */\n    getValueScaleId: function getValueScaleId() {\n      return this.getMeta().xAxisID;\n    },\n\n    /**\n     * @private\n     */\n    getIndexScaleId: function getIndexScaleId() {\n      return this.getMeta().yAxisID;\n    }\n  });\n};","'use strict';\n\nvar _typeof = require(\"/Users/tarex/redq/DASHBOARD/newdashapp/node_modules/@babel/runtime/helpers/typeof\");\n\nvar defaults = require('../core/core.defaults');\n\nvar elements = require('../elements/index');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('bubble', {\n  hover: {\n    mode: 'single'\n  },\n  scales: {\n    xAxes: [{\n      type: 'linear',\n      // bubble should probably use a linear scale by default\n      position: 'bottom',\n      id: 'x-axis-0' // need an ID so datasets can reference the scale\n\n    }],\n    yAxes: [{\n      type: 'linear',\n      position: 'left',\n      id: 'y-axis-0'\n    }]\n  },\n  tooltips: {\n    callbacks: {\n      title: function title() {\n        // Title doesn't make sense for scatter since we format the data as a point\n        return '';\n      },\n      label: function label(item, data) {\n        var datasetLabel = data.datasets[item.datasetIndex].label || '';\n        var dataPoint = data.datasets[item.datasetIndex].data[item.index];\n        return datasetLabel + ': (' + item.xLabel + ', ' + item.yLabel + ', ' + dataPoint.r + ')';\n      }\n    }\n  }\n});\n\nmodule.exports = function (Chart) {\n  Chart.controllers.bubble = Chart.DatasetController.extend({\n    /**\n     * @protected\n     */\n    dataElementType: elements.Point,\n\n    /**\n     * @protected\n     */\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var points = meta.data; // Update Points\n\n      helpers.each(points, function (point, index) {\n        me.updateElement(point, index, reset);\n      });\n    },\n\n    /**\n     * @protected\n     */\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var custom = point.custom || {};\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var yScale = me.getScaleForId(meta.yAxisID);\n\n      var options = me._resolveElementOptions(point, index);\n\n      var data = me.getDataset().data[index];\n      var dsIndex = me.index;\n      var x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(_typeof(data) === 'object' ? data : NaN, index, dsIndex);\n      var y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(data, index, dsIndex);\n      point._xScale = xScale;\n      point._yScale = yScale;\n      point._options = options;\n      point._datasetIndex = dsIndex;\n      point._index = index;\n      point._model = {\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        hitRadius: options.hitRadius,\n        pointStyle: options.pointStyle,\n        radius: reset ? 0 : options.radius,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        x: x,\n        y: y\n      };\n      point.pivot();\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      model.backgroundColor = helpers.valueOrDefault(options.hoverBackgroundColor, helpers.getHoverColor(options.backgroundColor));\n      model.borderColor = helpers.valueOrDefault(options.hoverBorderColor, helpers.getHoverColor(options.borderColor));\n      model.borderWidth = helpers.valueOrDefault(options.hoverBorderWidth, options.borderWidth);\n      model.radius = options.radius + options.hoverRadius;\n    },\n\n    /**\n     * @protected\n     */\n    removeHoverStyle: function removeHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      model.backgroundColor = options.backgroundColor;\n      model.borderColor = options.borderColor;\n      model.borderWidth = options.borderWidth;\n      model.radius = options.radius;\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(point, index) {\n      var me = this;\n      var chart = me.chart;\n      var datasets = chart.data.datasets;\n      var dataset = datasets[me.index];\n      var custom = point.custom || {};\n      var options = chart.options.elements.point;\n      var resolve = helpers.options.resolve;\n      var data = dataset.data[index];\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth', 'hoverRadius', 'hitRadius', 'pointStyle'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve([custom[key], dataset[key], options[key]], context, index);\n      } // Custom radius resolution\n\n\n      values.radius = resolve([custom.radius, data ? data.r : undefined, dataset.radius, options.radius], context, index);\n      return values;\n    }\n  });\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar elements = require('../elements/index');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('doughnut', {\n  animation: {\n    // Boolean - Whether we animate the rotation of the Doughnut\n    animateRotate: true,\n    // Boolean - Whether we animate scaling the Doughnut from the centre\n    animateScale: false\n  },\n  hover: {\n    mode: 'single'\n  },\n  legendCallback: function legendCallback(chart) {\n    var text = [];\n    text.push('<ul class=\"' + chart.id + '-legend\">');\n    var data = chart.data;\n    var datasets = data.datasets;\n    var labels = data.labels;\n\n    if (datasets.length) {\n      for (var i = 0; i < datasets[0].data.length; ++i) {\n        text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\n        if (labels[i]) {\n          text.push(labels[i]);\n        }\n\n        text.push('</li>');\n      }\n    }\n\n    text.push('</ul>');\n    return text.join('');\n  },\n  legend: {\n    labels: {\n      generateLabels: function generateLabels(chart) {\n        var data = chart.data;\n\n        if (data.labels.length && data.datasets.length) {\n          return data.labels.map(function (label, i) {\n            var meta = chart.getDatasetMeta(0);\n            var ds = data.datasets[0];\n            var arc = meta.data[i];\n            var custom = arc && arc.custom || {};\n            var valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n            var arcOpts = chart.options.elements.arc;\n            var fill = custom.backgroundColor ? custom.backgroundColor : valueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);\n            var stroke = custom.borderColor ? custom.borderColor : valueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);\n            var bw = custom.borderWidth ? custom.borderWidth : valueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);\n            return {\n              text: label,\n              fillStyle: fill,\n              strokeStyle: stroke,\n              lineWidth: bw,\n              hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n              // Extra data used for toggling the correct item\n              index: i\n            };\n          });\n        }\n\n        return [];\n      }\n    },\n    onClick: function onClick(e, legendItem) {\n      var index = legendItem.index;\n      var chart = this.chart;\n      var i, ilen, meta;\n\n      for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n        meta = chart.getDatasetMeta(i); // toggle visibility of index if exists\n\n        if (meta.data[index]) {\n          meta.data[index].hidden = !meta.data[index].hidden;\n        }\n      }\n\n      chart.update();\n    }\n  },\n  // The percentage of the chart that we cut out of the middle.\n  cutoutPercentage: 50,\n  // The rotation of the chart, where the first data arc begins.\n  rotation: Math.PI * -0.5,\n  // The total circumference of the chart.\n  circumference: Math.PI * 2.0,\n  // Need to override these to give a nice default\n  tooltips: {\n    callbacks: {\n      title: function title() {\n        return '';\n      },\n      label: function label(tooltipItem, data) {\n        var dataLabel = data.labels[tooltipItem.index];\n        var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n\n        if (helpers.isArray(dataLabel)) {\n          // show value on first line of multiline label\n          // need to clone because we are changing the value\n          dataLabel = dataLabel.slice();\n          dataLabel[0] += value;\n        } else {\n          dataLabel += value;\n        }\n\n        return dataLabel;\n      }\n    }\n  }\n});\n\ndefaults._set('pie', helpers.clone(defaults.doughnut));\n\ndefaults._set('pie', {\n  cutoutPercentage: 0\n});\n\nmodule.exports = function (Chart) {\n  Chart.controllers.doughnut = Chart.controllers.pie = Chart.DatasetController.extend({\n    dataElementType: elements.Arc,\n    linkScales: helpers.noop,\n    // Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\n    getRingIndex: function getRingIndex(datasetIndex) {\n      var ringIndex = 0;\n\n      for (var j = 0; j < datasetIndex; ++j) {\n        if (this.chart.isDatasetVisible(j)) {\n          ++ringIndex;\n        }\n      }\n\n      return ringIndex;\n    },\n    update: function update(reset) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var arcOpts = opts.elements.arc;\n      var availableWidth = chartArea.right - chartArea.left - arcOpts.borderWidth;\n      var availableHeight = chartArea.bottom - chartArea.top - arcOpts.borderWidth;\n      var minSize = Math.min(availableWidth, availableHeight);\n      var offset = {\n        x: 0,\n        y: 0\n      };\n      var meta = me.getMeta();\n      var cutoutPercentage = opts.cutoutPercentage;\n      var circumference = opts.circumference; // If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\n\n      if (circumference < Math.PI * 2.0) {\n        var startAngle = opts.rotation % (Math.PI * 2.0);\n        startAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\n        var endAngle = startAngle + circumference;\n        var start = {\n          x: Math.cos(startAngle),\n          y: Math.sin(startAngle)\n        };\n        var end = {\n          x: Math.cos(endAngle),\n          y: Math.sin(endAngle)\n        };\n        var contains0 = startAngle <= 0 && endAngle >= 0 || startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle;\n        var contains90 = startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle;\n        var contains180 = startAngle <= -Math.PI && -Math.PI <= endAngle || startAngle <= Math.PI && Math.PI <= endAngle;\n        var contains270 = startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle;\n        var cutout = cutoutPercentage / 100.0;\n        var min = {\n          x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)),\n          y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))\n        };\n        var max = {\n          x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)),\n          y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))\n        };\n        var size = {\n          width: (max.x - min.x) * 0.5,\n          height: (max.y - min.y) * 0.5\n        };\n        minSize = Math.min(availableWidth / size.width, availableHeight / size.height);\n        offset = {\n          x: (max.x + min.x) * -0.5,\n          y: (max.y + min.y) * -0.5\n        };\n      }\n\n      chart.borderWidth = me.getMaxBorderWidth(meta.data);\n      chart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);\n      chart.innerRadius = Math.max(cutoutPercentage ? chart.outerRadius / 100 * cutoutPercentage : 0, 0);\n      chart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n      chart.offsetX = offset.x * chart.outerRadius;\n      chart.offsetY = offset.y * chart.outerRadius;\n      meta.total = me.calculateTotal();\n      me.outerRadius = chart.outerRadius - chart.radiusLength * me.getRingIndex(me.index);\n      me.innerRadius = Math.max(me.outerRadius - chart.radiusLength, 0);\n      helpers.each(meta.data, function (arc, index) {\n        me.updateElement(arc, index, reset);\n      });\n    },\n    updateElement: function updateElement(arc, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var centerX = (chartArea.left + chartArea.right) / 2;\n      var centerY = (chartArea.top + chartArea.bottom) / 2;\n      var startAngle = opts.rotation; // non reset case handled later\n\n      var endAngle = opts.rotation; // non reset case handled later\n\n      var dataset = me.getDataset();\n      var circumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI));\n      var innerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius;\n      var outerRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius;\n      var valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n      helpers.extend(arc, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        // Desired view properties\n        _model: {\n          x: centerX + chart.offsetX,\n          y: centerY + chart.offsetY,\n          startAngle: startAngle,\n          endAngle: endAngle,\n          circumference: circumference,\n          outerRadius: outerRadius,\n          innerRadius: innerRadius,\n          label: valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\n        }\n      });\n      var model = arc._model; // Resets the visual styles\n\n      this.removeHoverStyle(arc); // Set correct angles if not resetting\n\n      if (!reset || !animationOpts.animateRotate) {\n        if (index === 0) {\n          model.startAngle = opts.rotation;\n        } else {\n          model.startAngle = me.getMeta().data[index - 1]._model.endAngle;\n        }\n\n        model.endAngle = model.startAngle + model.circumference;\n      }\n\n      arc.pivot();\n    },\n    removeHoverStyle: function removeHoverStyle(arc) {\n      Chart.DatasetController.prototype.removeHoverStyle.call(this, arc, this.chart.options.elements.arc);\n    },\n    calculateTotal: function calculateTotal() {\n      var dataset = this.getDataset();\n      var meta = this.getMeta();\n      var total = 0;\n      var value;\n      helpers.each(meta.data, function (element, index) {\n        value = dataset.data[index];\n\n        if (!isNaN(value) && !element.hidden) {\n          total += Math.abs(value);\n        }\n      });\n      /* if (total === 0) {\n      \ttotal = NaN;\n      }*/\n\n      return total;\n    },\n    calculateCircumference: function calculateCircumference(value) {\n      var total = this.getMeta().total;\n\n      if (total > 0 && !isNaN(value)) {\n        return Math.PI * 2.0 * (Math.abs(value) / total);\n      }\n\n      return 0;\n    },\n    // gets the max border or hover width to properly scale pie charts\n    getMaxBorderWidth: function getMaxBorderWidth(arcs) {\n      var max = 0;\n      var index = this.index;\n      var length = arcs.length;\n      var borderWidth;\n      var hoverWidth;\n\n      for (var i = 0; i < length; i++) {\n        borderWidth = arcs[i]._model ? arcs[i]._model.borderWidth : 0;\n        hoverWidth = arcs[i]._chart ? arcs[i]._chart.config.data.datasets[index].hoverBorderWidth : 0;\n        max = borderWidth > max ? borderWidth : max;\n        max = hoverWidth > max ? hoverWidth : max;\n      }\n\n      return max;\n    }\n  });\n};","'use strict';\n\nvar _typeof = require(\"/Users/tarex/redq/DASHBOARD/newdashapp/node_modules/@babel/runtime/helpers/typeof\");\n\nvar defaults = require('../core/core.defaults');\n\nvar elements = require('../elements/index');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('line', {\n  showLines: true,\n  spanGaps: false,\n  hover: {\n    mode: 'label'\n  },\n  scales: {\n    xAxes: [{\n      type: 'category',\n      id: 'x-axis-0'\n    }],\n    yAxes: [{\n      type: 'linear',\n      id: 'y-axis-0'\n    }]\n  }\n});\n\nmodule.exports = function (Chart) {\n  function lineEnabled(dataset, options) {\n    return helpers.valueOrDefault(dataset.showLine, options.showLines);\n  }\n\n  Chart.controllers.line = Chart.DatasetController.extend({\n    datasetElementType: elements.Line,\n    dataElementType: elements.Point,\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var options = me.chart.options;\n      var lineElementOptions = options.elements.line;\n      var scale = me.getScaleForId(meta.yAxisID);\n      var i, ilen, custom;\n      var dataset = me.getDataset();\n      var showLine = lineEnabled(dataset, options); // Update Line\n\n      if (showLine) {\n        custom = line.custom || {}; // Compatibility: If the properties are defined with only the old name, use those values\n\n        if (dataset.tension !== undefined && dataset.lineTension === undefined) {\n          dataset.lineTension = dataset.tension;\n        } // Utility\n\n\n        line._scale = scale;\n        line._datasetIndex = me.index; // Data\n\n        line._children = points; // Model\n\n        line._model = {\n          // Appearance\n          // The default behavior of lines is to break at null values, according\n          // to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158\n          // This option gives lines the ability to span gaps\n          spanGaps: dataset.spanGaps ? dataset.spanGaps : options.spanGaps,\n          tension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, lineElementOptions.tension),\n          backgroundColor: custom.backgroundColor ? custom.backgroundColor : dataset.backgroundColor || lineElementOptions.backgroundColor,\n          borderWidth: custom.borderWidth ? custom.borderWidth : dataset.borderWidth || lineElementOptions.borderWidth,\n          borderColor: custom.borderColor ? custom.borderColor : dataset.borderColor || lineElementOptions.borderColor,\n          borderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : dataset.borderCapStyle || lineElementOptions.borderCapStyle,\n          borderDash: custom.borderDash ? custom.borderDash : dataset.borderDash || lineElementOptions.borderDash,\n          borderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : dataset.borderDashOffset || lineElementOptions.borderDashOffset,\n          borderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : dataset.borderJoinStyle || lineElementOptions.borderJoinStyle,\n          fill: custom.fill ? custom.fill : dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill,\n          steppedLine: custom.steppedLine ? custom.steppedLine : helpers.valueOrDefault(dataset.steppedLine, lineElementOptions.stepped),\n          cubicInterpolationMode: custom.cubicInterpolationMode ? custom.cubicInterpolationMode : helpers.valueOrDefault(dataset.cubicInterpolationMode, lineElementOptions.cubicInterpolationMode)\n        };\n        line.pivot();\n      } // Update Points\n\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        me.updateElement(points[i], i, reset);\n      }\n\n      if (showLine && line._model.tension !== 0) {\n        me.updateBezierControlPoints();\n      } // Now pivot the point for animation\n\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        points[i].pivot();\n      }\n    },\n    getPointBackgroundColor: function getPointBackgroundColor(point, index) {\n      var backgroundColor = this.chart.options.elements.point.backgroundColor;\n      var dataset = this.getDataset();\n      var custom = point.custom || {};\n\n      if (custom.backgroundColor) {\n        backgroundColor = custom.backgroundColor;\n      } else if (dataset.pointBackgroundColor) {\n        backgroundColor = helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, backgroundColor);\n      } else if (dataset.backgroundColor) {\n        backgroundColor = dataset.backgroundColor;\n      }\n\n      return backgroundColor;\n    },\n    getPointBorderColor: function getPointBorderColor(point, index) {\n      var borderColor = this.chart.options.elements.point.borderColor;\n      var dataset = this.getDataset();\n      var custom = point.custom || {};\n\n      if (custom.borderColor) {\n        borderColor = custom.borderColor;\n      } else if (dataset.pointBorderColor) {\n        borderColor = helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, borderColor);\n      } else if (dataset.borderColor) {\n        borderColor = dataset.borderColor;\n      }\n\n      return borderColor;\n    },\n    getPointBorderWidth: function getPointBorderWidth(point, index) {\n      var borderWidth = this.chart.options.elements.point.borderWidth;\n      var dataset = this.getDataset();\n      var custom = point.custom || {};\n\n      if (!isNaN(custom.borderWidth)) {\n        borderWidth = custom.borderWidth;\n      } else if (!isNaN(dataset.pointBorderWidth) || helpers.isArray(dataset.pointBorderWidth)) {\n        borderWidth = helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, borderWidth);\n      } else if (!isNaN(dataset.borderWidth)) {\n        borderWidth = dataset.borderWidth;\n      }\n\n      return borderWidth;\n    },\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var custom = point.custom || {};\n      var dataset = me.getDataset();\n      var datasetIndex = me.index;\n      var value = dataset.data[index];\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var pointOptions = me.chart.options.elements.point;\n      var x, y; // Compatibility: If the properties are defined with only the old name, use those values\n\n      if (dataset.radius !== undefined && dataset.pointRadius === undefined) {\n        dataset.pointRadius = dataset.radius;\n      }\n\n      if (dataset.hitRadius !== undefined && dataset.pointHitRadius === undefined) {\n        dataset.pointHitRadius = dataset.hitRadius;\n      }\n\n      x = xScale.getPixelForValue(_typeof(value) === 'object' ? value : NaN, index, datasetIndex);\n      y = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex); // Utility\n\n      point._xScale = xScale;\n      point._yScale = yScale;\n      point._datasetIndex = datasetIndex;\n      point._index = index; // Desired view properties\n\n      point._model = {\n        x: x,\n        y: y,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        // Appearance\n        radius: custom.radius || helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointOptions.radius),\n        pointStyle: custom.pointStyle || helpers.valueAtIndexOrDefault(dataset.pointStyle, index, pointOptions.pointStyle),\n        backgroundColor: me.getPointBackgroundColor(point, index),\n        borderColor: me.getPointBorderColor(point, index),\n        borderWidth: me.getPointBorderWidth(point, index),\n        tension: meta.dataset._model ? meta.dataset._model.tension : 0,\n        steppedLine: meta.dataset._model ? meta.dataset._model.steppedLine : false,\n        // Tooltip\n        hitRadius: custom.hitRadius || helpers.valueAtIndexOrDefault(dataset.pointHitRadius, index, pointOptions.hitRadius)\n      };\n    },\n    calculatePointY: function calculatePointY(value, index, datasetIndex) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var sumPos = 0;\n      var sumNeg = 0;\n      var i, ds, dsMeta;\n\n      if (yScale.options.stacked) {\n        for (i = 0; i < datasetIndex; i++) {\n          ds = chart.data.datasets[i];\n          dsMeta = chart.getDatasetMeta(i);\n\n          if (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\n            var stackedRightValue = Number(yScale.getRightValue(ds.data[index]));\n\n            if (stackedRightValue < 0) {\n              sumNeg += stackedRightValue || 0;\n            } else {\n              sumPos += stackedRightValue || 0;\n            }\n          }\n        }\n\n        var rightValue = Number(yScale.getRightValue(value));\n\n        if (rightValue < 0) {\n          return yScale.getPixelForValue(sumNeg + rightValue);\n        }\n\n        return yScale.getPixelForValue(sumPos + rightValue);\n      }\n\n      return yScale.getPixelForValue(value);\n    },\n    updateBezierControlPoints: function updateBezierControlPoints() {\n      var me = this;\n      var meta = me.getMeta();\n      var area = me.chart.chartArea;\n      var points = meta.data || [];\n      var i, ilen, point, model, controlPoints; // Only consider points that are drawn in case the spanGaps option is used\n\n      if (meta.dataset._model.spanGaps) {\n        points = points.filter(function (pt) {\n          return !pt._model.skip;\n        });\n      }\n\n      function capControlPoint(pt, min, max) {\n        return Math.max(Math.min(pt, max), min);\n      }\n\n      if (meta.dataset._model.cubicInterpolationMode === 'monotone') {\n        helpers.splineCurveMonotone(points);\n      } else {\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\n          point = points[i];\n          model = point._model;\n          controlPoints = helpers.splineCurve(helpers.previousItem(points, i)._model, model, helpers.nextItem(points, i)._model, meta.dataset._model.tension);\n          model.controlPointPreviousX = controlPoints.previous.x;\n          model.controlPointPreviousY = controlPoints.previous.y;\n          model.controlPointNextX = controlPoints.next.x;\n          model.controlPointNextY = controlPoints.next.y;\n        }\n      }\n\n      if (me.chart.options.elements.line.capBezierPoints) {\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\n          model = points[i]._model;\n          model.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);\n          model.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);\n          model.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);\n          model.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);\n        }\n      }\n    },\n    draw: function draw() {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var points = meta.data || [];\n      var area = chart.chartArea;\n      var ilen = points.length;\n      var i = 0;\n      helpers.canvas.clipArea(chart.ctx, area);\n\n      if (lineEnabled(me.getDataset(), chart.options)) {\n        meta.dataset.draw();\n      }\n\n      helpers.canvas.unclipArea(chart.ctx); // Draw the points\n\n      for (; i < ilen; ++i) {\n        points[i].draw(area);\n      }\n    },\n    setHoverStyle: function setHoverStyle(point) {\n      // Point\n      var dataset = this.chart.data.datasets[point._datasetIndex];\n      var index = point._index;\n      var custom = point.custom || {};\n      var model = point._model;\n      model.radius = custom.hoverRadius || helpers.valueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\n      model.backgroundColor = custom.hoverBackgroundColor || helpers.valueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\n      model.borderColor = custom.hoverBorderColor || helpers.valueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));\n      model.borderWidth = custom.hoverBorderWidth || helpers.valueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);\n    },\n    removeHoverStyle: function removeHoverStyle(point) {\n      var me = this;\n      var dataset = me.chart.data.datasets[point._datasetIndex];\n      var index = point._index;\n      var custom = point.custom || {};\n      var model = point._model; // Compatibility: If the properties are defined with only the old name, use those values\n\n      if (dataset.radius !== undefined && dataset.pointRadius === undefined) {\n        dataset.pointRadius = dataset.radius;\n      }\n\n      model.radius = custom.radius || helpers.valueAtIndexOrDefault(dataset.pointRadius, index, me.chart.options.elements.point.radius);\n      model.backgroundColor = me.getPointBackgroundColor(point, index);\n      model.borderColor = me.getPointBorderColor(point, index);\n      model.borderWidth = me.getPointBorderWidth(point, index);\n    }\n  });\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar elements = require('../elements/index');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('polarArea', {\n  scale: {\n    type: 'radialLinear',\n    angleLines: {\n      display: false\n    },\n    gridLines: {\n      circular: true\n    },\n    pointLabels: {\n      display: false\n    },\n    ticks: {\n      beginAtZero: true\n    }\n  },\n  // Boolean - Whether to animate the rotation of the chart\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  startAngle: -0.5 * Math.PI,\n  legendCallback: function legendCallback(chart) {\n    var text = [];\n    text.push('<ul class=\"' + chart.id + '-legend\">');\n    var data = chart.data;\n    var datasets = data.datasets;\n    var labels = data.labels;\n\n    if (datasets.length) {\n      for (var i = 0; i < datasets[0].data.length; ++i) {\n        text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\n        if (labels[i]) {\n          text.push(labels[i]);\n        }\n\n        text.push('</li>');\n      }\n    }\n\n    text.push('</ul>');\n    return text.join('');\n  },\n  legend: {\n    labels: {\n      generateLabels: function generateLabels(chart) {\n        var data = chart.data;\n\n        if (data.labels.length && data.datasets.length) {\n          return data.labels.map(function (label, i) {\n            var meta = chart.getDatasetMeta(0);\n            var ds = data.datasets[0];\n            var arc = meta.data[i];\n            var custom = arc.custom || {};\n            var valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n            var arcOpts = chart.options.elements.arc;\n            var fill = custom.backgroundColor ? custom.backgroundColor : valueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);\n            var stroke = custom.borderColor ? custom.borderColor : valueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);\n            var bw = custom.borderWidth ? custom.borderWidth : valueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);\n            return {\n              text: label,\n              fillStyle: fill,\n              strokeStyle: stroke,\n              lineWidth: bw,\n              hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n              // Extra data used for toggling the correct item\n              index: i\n            };\n          });\n        }\n\n        return [];\n      }\n    },\n    onClick: function onClick(e, legendItem) {\n      var index = legendItem.index;\n      var chart = this.chart;\n      var i, ilen, meta;\n\n      for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n        meta = chart.getDatasetMeta(i);\n        meta.data[index].hidden = !meta.data[index].hidden;\n      }\n\n      chart.update();\n    }\n  },\n  // Need to override these to give a nice default\n  tooltips: {\n    callbacks: {\n      title: function title() {\n        return '';\n      },\n      label: function label(item, data) {\n        return data.labels[item.index] + ': ' + item.yLabel;\n      }\n    }\n  }\n});\n\nmodule.exports = function (Chart) {\n  Chart.controllers.polarArea = Chart.DatasetController.extend({\n    dataElementType: elements.Arc,\n    linkScales: helpers.noop,\n    update: function update(reset) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var meta = me.getMeta();\n      var opts = chart.options;\n      var arcOpts = opts.elements.arc;\n      var minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n      chart.outerRadius = Math.max((minSize - arcOpts.borderWidth / 2) / 2, 0);\n      chart.innerRadius = Math.max(opts.cutoutPercentage ? chart.outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n      chart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n      me.outerRadius = chart.outerRadius - chart.radiusLength * me.index;\n      me.innerRadius = me.outerRadius - chart.radiusLength;\n      meta.count = me.countVisibleElements();\n      helpers.each(meta.data, function (arc, index) {\n        me.updateElement(arc, index, reset);\n      });\n    },\n    updateElement: function updateElement(arc, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var scale = chart.scale;\n      var labels = chart.data.labels;\n      var circumference = me.calculateCircumference(dataset.data[index]);\n      var centerX = scale.xCenter;\n      var centerY = scale.yCenter; // If there is NaN data before us, we need to calculate the starting angle correctly.\n      // We could be way more efficient here, but its unlikely that the polar area chart will have a lot of data\n\n      var visibleCount = 0;\n      var meta = me.getMeta();\n\n      for (var i = 0; i < index; ++i) {\n        if (!isNaN(dataset.data[i]) && !meta.data[i].hidden) {\n          ++visibleCount;\n        }\n      } // var negHalfPI = -0.5 * Math.PI;\n\n\n      var datasetStartAngle = opts.startAngle;\n      var distance = arc.hidden ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n      var startAngle = datasetStartAngle + circumference * visibleCount;\n      var endAngle = startAngle + (arc.hidden ? 0 : circumference);\n      var resetRadius = animationOpts.animateScale ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n      helpers.extend(arc, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        _scale: scale,\n        // Desired view properties\n        _model: {\n          x: centerX,\n          y: centerY,\n          innerRadius: 0,\n          outerRadius: reset ? resetRadius : distance,\n          startAngle: reset && animationOpts.animateRotate ? datasetStartAngle : startAngle,\n          endAngle: reset && animationOpts.animateRotate ? datasetStartAngle : endAngle,\n          label: helpers.valueAtIndexOrDefault(labels, index, labels[index])\n        }\n      }); // Apply border and fill style\n\n      me.removeHoverStyle(arc);\n      arc.pivot();\n    },\n    removeHoverStyle: function removeHoverStyle(arc) {\n      Chart.DatasetController.prototype.removeHoverStyle.call(this, arc, this.chart.options.elements.arc);\n    },\n    countVisibleElements: function countVisibleElements() {\n      var dataset = this.getDataset();\n      var meta = this.getMeta();\n      var count = 0;\n      helpers.each(meta.data, function (element, index) {\n        if (!isNaN(dataset.data[index]) && !element.hidden) {\n          count++;\n        }\n      });\n      return count;\n    },\n    calculateCircumference: function calculateCircumference(value) {\n      var count = this.getMeta().count;\n\n      if (count > 0 && !isNaN(value)) {\n        return 2 * Math.PI / count;\n      }\n\n      return 0;\n    }\n  });\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar elements = require('../elements/index');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('radar', {\n  scale: {\n    type: 'radialLinear'\n  },\n  elements: {\n    line: {\n      tension: 0 // no bezier in radar\n\n    }\n  }\n});\n\nmodule.exports = function (Chart) {\n  Chart.controllers.radar = Chart.DatasetController.extend({\n    datasetElementType: elements.Line,\n    dataElementType: elements.Point,\n    linkScales: helpers.noop,\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var line = meta.dataset;\n      var points = meta.data;\n      var custom = line.custom || {};\n      var dataset = me.getDataset();\n      var lineElementOptions = me.chart.options.elements.line;\n      var scale = me.chart.scale; // Compatibility: If the properties are defined with only the old name, use those values\n\n      if (dataset.tension !== undefined && dataset.lineTension === undefined) {\n        dataset.lineTension = dataset.tension;\n      }\n\n      helpers.extend(meta.dataset, {\n        // Utility\n        _datasetIndex: me.index,\n        _scale: scale,\n        // Data\n        _children: points,\n        _loop: true,\n        // Model\n        _model: {\n          // Appearance\n          tension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, lineElementOptions.tension),\n          backgroundColor: custom.backgroundColor ? custom.backgroundColor : dataset.backgroundColor || lineElementOptions.backgroundColor,\n          borderWidth: custom.borderWidth ? custom.borderWidth : dataset.borderWidth || lineElementOptions.borderWidth,\n          borderColor: custom.borderColor ? custom.borderColor : dataset.borderColor || lineElementOptions.borderColor,\n          fill: custom.fill ? custom.fill : dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill,\n          borderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : dataset.borderCapStyle || lineElementOptions.borderCapStyle,\n          borderDash: custom.borderDash ? custom.borderDash : dataset.borderDash || lineElementOptions.borderDash,\n          borderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : dataset.borderDashOffset || lineElementOptions.borderDashOffset,\n          borderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : dataset.borderJoinStyle || lineElementOptions.borderJoinStyle\n        }\n      });\n      meta.dataset.pivot(); // Update Points\n\n      helpers.each(points, function (point, index) {\n        me.updateElement(point, index, reset);\n      }, me); // Update bezier control points\n\n      me.updateBezierControlPoints();\n    },\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var custom = point.custom || {};\n      var dataset = me.getDataset();\n      var scale = me.chart.scale;\n      var pointElementOptions = me.chart.options.elements.point;\n      var pointPosition = scale.getPointPositionForValue(index, dataset.data[index]); // Compatibility: If the properties are defined with only the old name, use those values\n\n      if (dataset.radius !== undefined && dataset.pointRadius === undefined) {\n        dataset.pointRadius = dataset.radius;\n      }\n\n      if (dataset.hitRadius !== undefined && dataset.pointHitRadius === undefined) {\n        dataset.pointHitRadius = dataset.hitRadius;\n      }\n\n      helpers.extend(point, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        _scale: scale,\n        // Desired view properties\n        _model: {\n          x: reset ? scale.xCenter : pointPosition.x,\n          // value not used in dataset scale, but we want a consistent API between scales\n          y: reset ? scale.yCenter : pointPosition.y,\n          // Appearance\n          tension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, me.chart.options.elements.line.tension),\n          radius: custom.radius ? custom.radius : helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointElementOptions.radius),\n          backgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, pointElementOptions.backgroundColor),\n          borderColor: custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, pointElementOptions.borderColor),\n          borderWidth: custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, pointElementOptions.borderWidth),\n          pointStyle: custom.pointStyle ? custom.pointStyle : helpers.valueAtIndexOrDefault(dataset.pointStyle, index, pointElementOptions.pointStyle),\n          // Tooltip\n          hitRadius: custom.hitRadius ? custom.hitRadius : helpers.valueAtIndexOrDefault(dataset.pointHitRadius, index, pointElementOptions.hitRadius)\n        }\n      });\n      point._model.skip = custom.skip ? custom.skip : isNaN(point._model.x) || isNaN(point._model.y);\n    },\n    updateBezierControlPoints: function updateBezierControlPoints() {\n      var chartArea = this.chart.chartArea;\n      var meta = this.getMeta();\n      helpers.each(meta.data, function (point, index) {\n        var model = point._model;\n        var controlPoints = helpers.splineCurve(helpers.previousItem(meta.data, index, true)._model, model, helpers.nextItem(meta.data, index, true)._model, model.tension); // Prevent the bezier going outside of the bounds of the graph\n\n        model.controlPointPreviousX = Math.max(Math.min(controlPoints.previous.x, chartArea.right), chartArea.left);\n        model.controlPointPreviousY = Math.max(Math.min(controlPoints.previous.y, chartArea.bottom), chartArea.top);\n        model.controlPointNextX = Math.max(Math.min(controlPoints.next.x, chartArea.right), chartArea.left);\n        model.controlPointNextY = Math.max(Math.min(controlPoints.next.y, chartArea.bottom), chartArea.top); // Now pivot the point for animation\n\n        point.pivot();\n      });\n    },\n    setHoverStyle: function setHoverStyle(point) {\n      // Point\n      var dataset = this.chart.data.datasets[point._datasetIndex];\n      var custom = point.custom || {};\n      var index = point._index;\n      var model = point._model;\n      model.radius = custom.hoverRadius ? custom.hoverRadius : helpers.valueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\n      model.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : helpers.valueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\n      model.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : helpers.valueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));\n      model.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : helpers.valueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);\n    },\n    removeHoverStyle: function removeHoverStyle(point) {\n      var dataset = this.chart.data.datasets[point._datasetIndex];\n      var custom = point.custom || {};\n      var index = point._index;\n      var model = point._model;\n      var pointElementOptions = this.chart.options.elements.point;\n      model.radius = custom.radius ? custom.radius : helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointElementOptions.radius);\n      model.backgroundColor = custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, pointElementOptions.backgroundColor);\n      model.borderColor = custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, pointElementOptions.borderColor);\n      model.borderWidth = custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, pointElementOptions.borderWidth);\n    }\n  });\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\ndefaults._set('scatter', {\n  hover: {\n    mode: 'single'\n  },\n  scales: {\n    xAxes: [{\n      id: 'x-axis-1',\n      // need an ID so datasets can reference the scale\n      type: 'linear',\n      // scatter should not use a category axis\n      position: 'bottom'\n    }],\n    yAxes: [{\n      id: 'y-axis-1',\n      type: 'linear',\n      position: 'left'\n    }]\n  },\n  showLines: false,\n  tooltips: {\n    callbacks: {\n      title: function title() {\n        return ''; // doesn't make sense for scatter since data are formatted as a point\n      },\n      label: function label(item) {\n        return '(' + item.xLabel + ', ' + item.yLabel + ')';\n      }\n    }\n  }\n});\n\nmodule.exports = function (Chart) {\n  // Scatter charts use line controllers\n  Chart.controllers.scatter = Chart.controllers.line;\n};","'use strict';\n\nmodule.exports = function (Chart) {\n  Chart.Bar = function (context, config) {\n    config.type = 'bar';\n    return new Chart(context, config);\n  };\n};","'use strict';\n\nmodule.exports = function (Chart) {\n  Chart.Bubble = function (context, config) {\n    config.type = 'bubble';\n    return new Chart(context, config);\n  };\n};","'use strict';\n\nmodule.exports = function (Chart) {\n  Chart.Doughnut = function (context, config) {\n    config.type = 'doughnut';\n    return new Chart(context, config);\n  };\n};","'use strict';\n\nmodule.exports = function (Chart) {\n  Chart.Line = function (context, config) {\n    config.type = 'line';\n    return new Chart(context, config);\n  };\n};","'use strict';\n\nmodule.exports = function (Chart) {\n  Chart.PolarArea = function (context, config) {\n    config.type = 'polarArea';\n    return new Chart(context, config);\n  };\n};","'use strict';\n\nmodule.exports = function (Chart) {\n  Chart.Radar = function (context, config) {\n    config.type = 'radar';\n    return new Chart(context, config);\n  };\n};","'use strict';\n\nmodule.exports = function (Chart) {\n  Chart.Scatter = function (context, config) {\n    config.type = 'scatter';\n    return new Chart(context, config);\n  };\n};","'use strict';\n\nmodule.exports = {};\nmodule.exports.filler = require('./plugin.filler');\nmodule.exports.legend = require('./plugin.legend');\nmodule.exports.title = require('./plugin.title');","/**\n * Plugin based on discussion from the following Chart.js issues:\n * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\n * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\n */\n'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar elements = require('../elements/index');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n  plugins: {\n    filler: {\n      propagate: true\n    }\n  }\n});\n\nvar mappers = {\n  dataset: function dataset(source) {\n    var index = source.fill;\n    var chart = source.chart;\n    var meta = chart.getDatasetMeta(index);\n    var visible = meta && chart.isDatasetVisible(index);\n    var points = visible && meta.dataset._children || [];\n    var length = points.length || 0;\n    return !length ? null : function (point, i) {\n      return i < length && points[i]._view || null;\n    };\n  },\n  boundary: function boundary(source) {\n    var boundary = source.boundary;\n    var x = boundary ? boundary.x : null;\n    var y = boundary ? boundary.y : null;\n    return function (point) {\n      return {\n        x: x === null ? point.x : x,\n        y: y === null ? point.y : y\n      };\n    };\n  }\n}; // @todo if (fill[0] === '#')\n\nfunction decodeFill(el, index, count) {\n  var model = el._model || {};\n  var fill = model.fill;\n  var target;\n\n  if (fill === undefined) {\n    fill = !!model.backgroundColor;\n  }\n\n  if (fill === false || fill === null) {\n    return false;\n  }\n\n  if (fill === true) {\n    return 'origin';\n  }\n\n  target = parseFloat(fill, 10);\n\n  if (isFinite(target) && Math.floor(target) === target) {\n    if (fill[0] === '-' || fill[0] === '+') {\n      target = index + target;\n    }\n\n    if (target === index || target < 0 || target >= count) {\n      return false;\n    }\n\n    return target;\n  }\n\n  switch (fill) {\n    // compatibility\n    case 'bottom':\n      return 'start';\n\n    case 'top':\n      return 'end';\n\n    case 'zero':\n      return 'origin';\n    // supported boundaries\n\n    case 'origin':\n    case 'start':\n    case 'end':\n      return fill;\n    // invalid fill values\n\n    default:\n      return false;\n  }\n}\n\nfunction computeBoundary(source) {\n  var model = source.el._model || {};\n  var scale = source.el._scale || {};\n  var fill = source.fill;\n  var target = null;\n  var horizontal;\n\n  if (isFinite(fill)) {\n    return null;\n  } // Backward compatibility: until v3, we still need to support boundary values set on\n  // the model (scaleTop, scaleBottom and scaleZero) because some external plugins and\n  // controllers might still use it (e.g. the Smith chart).\n\n\n  if (fill === 'start') {\n    target = model.scaleBottom === undefined ? scale.bottom : model.scaleBottom;\n  } else if (fill === 'end') {\n    target = model.scaleTop === undefined ? scale.top : model.scaleTop;\n  } else if (model.scaleZero !== undefined) {\n    target = model.scaleZero;\n  } else if (scale.getBasePosition) {\n    target = scale.getBasePosition();\n  } else if (scale.getBasePixel) {\n    target = scale.getBasePixel();\n  }\n\n  if (target !== undefined && target !== null) {\n    if (target.x !== undefined && target.y !== undefined) {\n      return target;\n    }\n\n    if (typeof target === 'number' && isFinite(target)) {\n      horizontal = scale.isHorizontal();\n      return {\n        x: horizontal ? target : null,\n        y: horizontal ? null : target\n      };\n    }\n  }\n\n  return null;\n}\n\nfunction resolveTarget(sources, index, propagate) {\n  var source = sources[index];\n  var fill = source.fill;\n  var visited = [index];\n  var target;\n\n  if (!propagate) {\n    return fill;\n  }\n\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isFinite(fill)) {\n      return fill;\n    }\n\n    target = sources[fill];\n\n    if (!target) {\n      return false;\n    }\n\n    if (target.visible) {\n      return fill;\n    }\n\n    visited.push(fill);\n    fill = target.fill;\n  }\n\n  return false;\n}\n\nfunction createMapper(source) {\n  var fill = source.fill;\n  var type = 'dataset';\n\n  if (fill === false) {\n    return null;\n  }\n\n  if (!isFinite(fill)) {\n    type = 'boundary';\n  }\n\n  return mappers[type](source);\n}\n\nfunction isDrawable(point) {\n  return point && !point.skip;\n}\n\nfunction drawArea(ctx, curve0, curve1, len0, len1) {\n  var i;\n\n  if (!len0 || !len1) {\n    return;\n  } // building first area curve (normal)\n\n\n  ctx.moveTo(curve0[0].x, curve0[0].y);\n\n  for (i = 1; i < len0; ++i) {\n    helpers.canvas.lineTo(ctx, curve0[i - 1], curve0[i]);\n  } // joining the two area curves\n\n\n  ctx.lineTo(curve1[len1 - 1].x, curve1[len1 - 1].y); // building opposite area curve (reverse)\n\n  for (i = len1 - 1; i > 0; --i) {\n    helpers.canvas.lineTo(ctx, curve1[i], curve1[i - 1], true);\n  }\n}\n\nfunction doFill(ctx, points, mapper, view, color, loop) {\n  var count = points.length;\n  var span = view.spanGaps;\n  var curve0 = [];\n  var curve1 = [];\n  var len0 = 0;\n  var len1 = 0;\n  var i, ilen, index, p0, p1, d0, d1;\n  ctx.beginPath();\n\n  for (i = 0, ilen = count + !!loop; i < ilen; ++i) {\n    index = i % count;\n    p0 = points[index]._view;\n    p1 = mapper(p0, index, view);\n    d0 = isDrawable(p0);\n    d1 = isDrawable(p1);\n\n    if (d0 && d1) {\n      len0 = curve0.push(p0);\n      len1 = curve1.push(p1);\n    } else if (len0 && len1) {\n      if (!span) {\n        drawArea(ctx, curve0, curve1, len0, len1);\n        len0 = len1 = 0;\n        curve0 = [];\n        curve1 = [];\n      } else {\n        if (d0) {\n          curve0.push(p0);\n        }\n\n        if (d1) {\n          curve1.push(p1);\n        }\n      }\n    }\n  }\n\n  drawArea(ctx, curve0, curve1, len0, len1);\n  ctx.closePath();\n  ctx.fillStyle = color;\n  ctx.fill();\n}\n\nmodule.exports = {\n  id: 'filler',\n  afterDatasetsUpdate: function afterDatasetsUpdate(chart, options) {\n    var count = (chart.data.datasets || []).length;\n    var propagate = options.propagate;\n    var sources = [];\n    var meta, i, el, source;\n\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      el = meta.dataset;\n      source = null;\n\n      if (el && el._model && el instanceof elements.Line) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          fill: decodeFill(el, i, count),\n          chart: chart,\n          el: el\n        };\n      }\n\n      meta.$filler = source;\n      sources.push(source);\n    }\n\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n\n      if (!source) {\n        continue;\n      }\n\n      source.fill = resolveTarget(sources, i, propagate);\n      source.boundary = computeBoundary(source);\n      source.mapper = createMapper(source);\n    }\n  },\n  beforeDatasetDraw: function beforeDatasetDraw(chart, args) {\n    var meta = args.meta.$filler;\n\n    if (!meta) {\n      return;\n    }\n\n    var ctx = chart.ctx;\n    var el = meta.el;\n    var view = el._view;\n    var points = el._children || [];\n    var mapper = meta.mapper;\n    var color = view.backgroundColor || defaults.global.defaultColor;\n\n    if (mapper && color && points.length) {\n      helpers.canvas.clipArea(ctx, chart.chartArea);\n      doFill(ctx, points, mapper, view, color, el._loop);\n      helpers.canvas.unclipArea(ctx);\n    }\n  }\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar Element = require('../core/core.element');\n\nvar helpers = require('../helpers/index');\n\nvar layouts = require('../core/core.layouts');\n\nvar noop = helpers.noop;\n\ndefaults._set('global', {\n  legend: {\n    display: true,\n    position: 'top',\n    fullWidth: true,\n    reverse: false,\n    weight: 1000,\n    // a callback that will handle\n    onClick: function onClick(e, legendItem) {\n      var index = legendItem.datasetIndex;\n      var ci = this.chart;\n      var meta = ci.getDatasetMeta(index); // See controller.isDatasetVisible comment\n\n      meta.hidden = meta.hidden === null ? !ci.data.datasets[index].hidden : null; // We hid a dataset ... rerender the chart\n\n      ci.update();\n    },\n    onHover: null,\n    labels: {\n      boxWidth: 40,\n      padding: 10,\n      // Generates labels shown in the legend\n      // Valid properties to return:\n      // text : text to display\n      // fillStyle : fill of coloured box\n      // strokeStyle: stroke of coloured box\n      // hidden : if this legend item refers to a hidden item\n      // lineCap : cap style for line\n      // lineDash\n      // lineDashOffset :\n      // lineJoin :\n      // lineWidth :\n      generateLabels: function generateLabels(chart) {\n        var data = chart.data;\n        return helpers.isArray(data.datasets) ? data.datasets.map(function (dataset, i) {\n          return {\n            text: dataset.label,\n            fillStyle: !helpers.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0],\n            hidden: !chart.isDatasetVisible(i),\n            lineCap: dataset.borderCapStyle,\n            lineDash: dataset.borderDash,\n            lineDashOffset: dataset.borderDashOffset,\n            lineJoin: dataset.borderJoinStyle,\n            lineWidth: dataset.borderWidth,\n            strokeStyle: dataset.borderColor,\n            pointStyle: dataset.pointStyle,\n            // Below is extra data used for toggling the datasets\n            datasetIndex: i\n          };\n        }, this) : [];\n      }\n    }\n  },\n  legendCallback: function legendCallback(chart) {\n    var text = [];\n    text.push('<ul class=\"' + chart.id + '-legend\">');\n\n    for (var i = 0; i < chart.data.datasets.length; i++) {\n      text.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\n\n      if (chart.data.datasets[i].label) {\n        text.push(chart.data.datasets[i].label);\n      }\n\n      text.push('</li>');\n    }\n\n    text.push('</ul>');\n    return text.join('');\n  }\n});\n/**\n * Helper function to get the box width based on the usePointStyle option\n * @param labelopts {Object} the label options on the legend\n * @param fontSize {Number} the label font size\n * @return {Number} width of the color box area\n */\n\n\nfunction getBoxWidth(labelOpts, fontSize) {\n  return labelOpts.usePointStyle ? fontSize * Math.SQRT2 : labelOpts.boxWidth;\n}\n/**\n * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n */\n\n\nvar Legend = Element.extend({\n  initialize: function initialize(config) {\n    helpers.extend(this, config); // Contains hit boxes for each dataset (in dataset order)\n\n    this.legendHitBoxes = []; // Are we in doughnut mode which has a different data type\n\n    this.doughnutMode = false;\n  },\n  // These methods are ordered by lifecycle. Utilities then follow.\n  // Any function defined here is inherited by all legend types.\n  // Any function can be extended by the legend type\n  beforeUpdate: noop,\n  update: function update(maxWidth, maxHeight, margins) {\n    var me = this; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n    me.beforeUpdate(); // Absorb the master measurements\n\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me.margins = margins; // Dimensions\n\n    me.beforeSetDimensions();\n    me.setDimensions();\n    me.afterSetDimensions(); // Labels\n\n    me.beforeBuildLabels();\n    me.buildLabels();\n    me.afterBuildLabels(); // Fit\n\n    me.beforeFit();\n    me.fit();\n    me.afterFit(); //\n\n    me.afterUpdate();\n    return me.minSize;\n  },\n  afterUpdate: noop,\n  //\n  beforeSetDimensions: noop,\n  setDimensions: function setDimensions() {\n    var me = this; // Set the unconstrained dimension before label rotation\n\n    if (me.isHorizontal()) {\n      // Reset position before calculating rotation\n      me.width = me.maxWidth;\n      me.left = 0;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight; // Reset position before calculating rotation\n\n      me.top = 0;\n      me.bottom = me.height;\n    } // Reset padding\n\n\n    me.paddingLeft = 0;\n    me.paddingTop = 0;\n    me.paddingRight = 0;\n    me.paddingBottom = 0; // Reset minSize\n\n    me.minSize = {\n      width: 0,\n      height: 0\n    };\n  },\n  afterSetDimensions: noop,\n  //\n  beforeBuildLabels: noop,\n  buildLabels: function buildLabels() {\n    var me = this;\n    var labelOpts = me.options.labels || {};\n    var legendItems = helpers.callback(labelOpts.generateLabels, [me.chart], me) || [];\n\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter(function (item) {\n        return labelOpts.filter(item, me.chart.data);\n      });\n    }\n\n    if (me.options.reverse) {\n      legendItems.reverse();\n    }\n\n    me.legendItems = legendItems;\n  },\n  afterBuildLabels: noop,\n  //\n  beforeFit: noop,\n  fit: function fit() {\n    var me = this;\n    var opts = me.options;\n    var labelOpts = opts.labels;\n    var display = opts.display;\n    var ctx = me.ctx;\n    var globalDefault = defaults.global;\n    var valueOrDefault = helpers.valueOrDefault;\n    var fontSize = valueOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize);\n    var fontStyle = valueOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle);\n    var fontFamily = valueOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily);\n    var labelFont = helpers.fontString(fontSize, fontStyle, fontFamily); // Reset hit boxes\n\n    var hitboxes = me.legendHitBoxes = [];\n    var minSize = me.minSize;\n    var isHorizontal = me.isHorizontal();\n\n    if (isHorizontal) {\n      minSize.width = me.maxWidth; // fill all the width\n\n      minSize.height = display ? 10 : 0;\n    } else {\n      minSize.width = display ? 10 : 0;\n      minSize.height = me.maxHeight; // fill all the height\n    } // Increase sizes here\n\n\n    if (display) {\n      ctx.font = labelFont;\n\n      if (isHorizontal) {\n        // Labels\n        // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n        var lineWidths = me.lineWidths = [0];\n        var totalHeight = me.legendItems.length ? fontSize + labelOpts.padding : 0;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'top';\n        helpers.each(me.legendItems, function (legendItem, i) {\n          var boxWidth = getBoxWidth(labelOpts, fontSize);\n          var width = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n\n          if (lineWidths[lineWidths.length - 1] + width + labelOpts.padding >= me.width) {\n            totalHeight += fontSize + labelOpts.padding;\n            lineWidths[lineWidths.length] = me.left;\n          } // Store the hitbox width and height here. Final position will be updated in `draw`\n\n\n          hitboxes[i] = {\n            left: 0,\n            top: 0,\n            width: width,\n            height: fontSize\n          };\n          lineWidths[lineWidths.length - 1] += width + labelOpts.padding;\n        });\n        minSize.height += totalHeight;\n      } else {\n        var vPadding = labelOpts.padding;\n        var columnWidths = me.columnWidths = [];\n        var totalWidth = labelOpts.padding;\n        var currentColWidth = 0;\n        var currentColHeight = 0;\n        var itemHeight = fontSize + vPadding;\n        helpers.each(me.legendItems, function (legendItem, i) {\n          var boxWidth = getBoxWidth(labelOpts, fontSize);\n          var itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width; // If too tall, go to new column\n\n          if (currentColHeight + itemHeight > minSize.height) {\n            totalWidth += currentColWidth + labelOpts.padding;\n            columnWidths.push(currentColWidth); // previous column width\n\n            currentColWidth = 0;\n            currentColHeight = 0;\n          } // Get max width\n\n\n          currentColWidth = Math.max(currentColWidth, itemWidth);\n          currentColHeight += itemHeight; // Store the hitbox width and height here. Final position will be updated in `draw`\n\n          hitboxes[i] = {\n            left: 0,\n            top: 0,\n            width: itemWidth,\n            height: fontSize\n          };\n        });\n        totalWidth += currentColWidth;\n        columnWidths.push(currentColWidth);\n        minSize.width += totalWidth;\n      }\n    }\n\n    me.width = minSize.width;\n    me.height = minSize.height;\n  },\n  afterFit: noop,\n  // Shared Methods\n  isHorizontal: function isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  },\n  // Actually draw the legend on the canvas\n  draw: function draw() {\n    var me = this;\n    var opts = me.options;\n    var labelOpts = opts.labels;\n    var globalDefault = defaults.global;\n    var lineDefault = globalDefault.elements.line;\n    var legendWidth = me.width;\n    var lineWidths = me.lineWidths;\n\n    if (opts.display) {\n      var ctx = me.ctx;\n      var valueOrDefault = helpers.valueOrDefault;\n      var fontColor = valueOrDefault(labelOpts.fontColor, globalDefault.defaultFontColor);\n      var fontSize = valueOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize);\n      var fontStyle = valueOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle);\n      var fontFamily = valueOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily);\n      var labelFont = helpers.fontString(fontSize, fontStyle, fontFamily);\n      var cursor; // Canvas setup\n\n      ctx.textAlign = 'left';\n      ctx.textBaseline = 'middle';\n      ctx.lineWidth = 0.5;\n      ctx.strokeStyle = fontColor; // for strikethrough effect\n\n      ctx.fillStyle = fontColor; // render in correct colour\n\n      ctx.font = labelFont;\n      var boxWidth = getBoxWidth(labelOpts, fontSize);\n      var hitboxes = me.legendHitBoxes; // current position\n\n      var drawLegendBox = function drawLegendBox(x, y, legendItem) {\n        if (isNaN(boxWidth) || boxWidth <= 0) {\n          return;\n        } // Set the ctx for the box\n\n\n        ctx.save();\n        ctx.fillStyle = valueOrDefault(legendItem.fillStyle, globalDefault.defaultColor);\n        ctx.lineCap = valueOrDefault(legendItem.lineCap, lineDefault.borderCapStyle);\n        ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, lineDefault.borderDashOffset);\n        ctx.lineJoin = valueOrDefault(legendItem.lineJoin, lineDefault.borderJoinStyle);\n        ctx.lineWidth = valueOrDefault(legendItem.lineWidth, lineDefault.borderWidth);\n        ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, globalDefault.defaultColor);\n        var isLineWidthZero = valueOrDefault(legendItem.lineWidth, lineDefault.borderWidth) === 0;\n\n        if (ctx.setLineDash) {\n          // IE 9 and 10 do not support line dash\n          ctx.setLineDash(valueOrDefault(legendItem.lineDash, lineDefault.borderDash));\n        }\n\n        if (opts.labels && opts.labels.usePointStyle) {\n          // Recalculate x and y for drawPoint() because its expecting\n          // x and y to be center of figure (instead of top left)\n          var radius = fontSize * Math.SQRT2 / 2;\n          var offSet = radius / Math.SQRT2;\n          var centerX = x + offSet;\n          var centerY = y + offSet; // Draw pointStyle as legend symbol\n\n          helpers.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\n        } else {\n          // Draw box as legend symbol\n          if (!isLineWidthZero) {\n            ctx.strokeRect(x, y, boxWidth, fontSize);\n          }\n\n          ctx.fillRect(x, y, boxWidth, fontSize);\n        }\n\n        ctx.restore();\n      };\n\n      var fillText = function fillText(x, y, legendItem, textWidth) {\n        var halfFontSize = fontSize / 2;\n        var xLeft = boxWidth + halfFontSize + x;\n        var yMiddle = y + halfFontSize;\n        ctx.fillText(legendItem.text, xLeft, yMiddle);\n\n        if (legendItem.hidden) {\n          // Strikethrough the text if hidden\n          ctx.beginPath();\n          ctx.lineWidth = 2;\n          ctx.moveTo(xLeft, yMiddle);\n          ctx.lineTo(xLeft + textWidth, yMiddle);\n          ctx.stroke();\n        }\n      }; // Horizontal\n\n\n      var isHorizontal = me.isHorizontal();\n\n      if (isHorizontal) {\n        cursor = {\n          x: me.left + (legendWidth - lineWidths[0]) / 2,\n          y: me.top + labelOpts.padding,\n          line: 0\n        };\n      } else {\n        cursor = {\n          x: me.left + labelOpts.padding,\n          y: me.top + labelOpts.padding,\n          line: 0\n        };\n      }\n\n      var itemHeight = fontSize + labelOpts.padding;\n      helpers.each(me.legendItems, function (legendItem, i) {\n        var textWidth = ctx.measureText(legendItem.text).width;\n        var width = boxWidth + fontSize / 2 + textWidth;\n        var x = cursor.x;\n        var y = cursor.y;\n\n        if (isHorizontal) {\n          if (x + width >= legendWidth) {\n            y = cursor.y += itemHeight;\n            cursor.line++;\n            x = cursor.x = me.left + (legendWidth - lineWidths[cursor.line]) / 2;\n          }\n        } else if (y + itemHeight > me.bottom) {\n          x = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;\n          y = cursor.y = me.top + labelOpts.padding;\n          cursor.line++;\n        }\n\n        drawLegendBox(x, y, legendItem);\n        hitboxes[i].left = x;\n        hitboxes[i].top = y; // Fill the actual label\n\n        fillText(x, y, legendItem, textWidth);\n\n        if (isHorizontal) {\n          cursor.x += width + labelOpts.padding;\n        } else {\n          cursor.y += itemHeight;\n        }\n      });\n    }\n  },\n\n  /**\n   * Handle an event\n   * @private\n   * @param {IEvent} event - The event to handle\n   * @return {Boolean} true if a change occured\n   */\n  handleEvent: function handleEvent(e) {\n    var me = this;\n    var opts = me.options;\n    var type = e.type === 'mouseup' ? 'click' : e.type;\n    var changed = false;\n\n    if (type === 'mousemove') {\n      if (!opts.onHover) {\n        return;\n      }\n    } else if (type === 'click') {\n      if (!opts.onClick) {\n        return;\n      }\n    } else {\n      return;\n    } // Chart event already has relative position in it\n\n\n    var x = e.x;\n    var y = e.y;\n\n    if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n      // See if we are touching one of the dataset boxes\n      var lh = me.legendHitBoxes;\n\n      for (var i = 0; i < lh.length; ++i) {\n        var hitBox = lh[i];\n\n        if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n          // Touching an element\n          if (type === 'click') {\n            // use e.native for backwards compatibility\n            opts.onClick.call(me, e.native, me.legendItems[i]);\n            changed = true;\n            break;\n          } else if (type === 'mousemove') {\n            // use e.native for backwards compatibility\n            opts.onHover.call(me, e.native, me.legendItems[i]);\n            changed = true;\n            break;\n          }\n        }\n      }\n    }\n\n    return changed;\n  }\n});\n\nfunction createNewLegendAndAttach(chart, legendOpts) {\n  var legend = new Legend({\n    ctx: chart.ctx,\n    options: legendOpts,\n    chart: chart\n  });\n  layouts.configure(chart, legend, legendOpts);\n  layouts.addBox(chart, legend);\n  chart.legend = legend;\n}\n\nmodule.exports = {\n  id: 'legend',\n\n  /**\n   * Backward compatibility: since 2.1.5, the legend is registered as a plugin, making\n   * Chart.Legend obsolete. To avoid a breaking change, we export the Legend as part of\n   * the plugin, which one will be re-exposed in the chart.js file.\n   * https://github.com/chartjs/Chart.js/pull/2640\n   * @private\n   */\n  _element: Legend,\n  beforeInit: function beforeInit(chart) {\n    var legendOpts = chart.options.legend;\n\n    if (legendOpts) {\n      createNewLegendAndAttach(chart, legendOpts);\n    }\n  },\n  beforeUpdate: function beforeUpdate(chart) {\n    var legendOpts = chart.options.legend;\n    var legend = chart.legend;\n\n    if (legendOpts) {\n      helpers.mergeIf(legendOpts, defaults.global.legend);\n\n      if (legend) {\n        layouts.configure(chart, legend, legendOpts);\n        legend.options = legendOpts;\n      } else {\n        createNewLegendAndAttach(chart, legendOpts);\n      }\n    } else if (legend) {\n      layouts.removeBox(chart, legend);\n      delete chart.legend;\n    }\n  },\n  afterEvent: function afterEvent(chart, e) {\n    var legend = chart.legend;\n\n    if (legend) {\n      legend.handleEvent(e);\n    }\n  }\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar Element = require('../core/core.element');\n\nvar helpers = require('../helpers/index');\n\nvar layouts = require('../core/core.layouts');\n\nvar noop = helpers.noop;\n\ndefaults._set('global', {\n  title: {\n    display: false,\n    fontStyle: 'bold',\n    fullWidth: true,\n    lineHeight: 1.2,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000 // by default greater than legend (1000) to be above\n\n  }\n});\n/**\n * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n */\n\n\nvar Title = Element.extend({\n  initialize: function initialize(config) {\n    var me = this;\n    helpers.extend(me, config); // Contains hit boxes for each dataset (in dataset order)\n\n    me.legendHitBoxes = [];\n  },\n  // These methods are ordered by lifecycle. Utilities then follow.\n  beforeUpdate: noop,\n  update: function update(maxWidth, maxHeight, margins) {\n    var me = this; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n    me.beforeUpdate(); // Absorb the master measurements\n\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me.margins = margins; // Dimensions\n\n    me.beforeSetDimensions();\n    me.setDimensions();\n    me.afterSetDimensions(); // Labels\n\n    me.beforeBuildLabels();\n    me.buildLabels();\n    me.afterBuildLabels(); // Fit\n\n    me.beforeFit();\n    me.fit();\n    me.afterFit(); //\n\n    me.afterUpdate();\n    return me.minSize;\n  },\n  afterUpdate: noop,\n  //\n  beforeSetDimensions: noop,\n  setDimensions: function setDimensions() {\n    var me = this; // Set the unconstrained dimension before label rotation\n\n    if (me.isHorizontal()) {\n      // Reset position before calculating rotation\n      me.width = me.maxWidth;\n      me.left = 0;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight; // Reset position before calculating rotation\n\n      me.top = 0;\n      me.bottom = me.height;\n    } // Reset padding\n\n\n    me.paddingLeft = 0;\n    me.paddingTop = 0;\n    me.paddingRight = 0;\n    me.paddingBottom = 0; // Reset minSize\n\n    me.minSize = {\n      width: 0,\n      height: 0\n    };\n  },\n  afterSetDimensions: noop,\n  //\n  beforeBuildLabels: noop,\n  buildLabels: noop,\n  afterBuildLabels: noop,\n  //\n  beforeFit: noop,\n  fit: function fit() {\n    var me = this;\n    var valueOrDefault = helpers.valueOrDefault;\n    var opts = me.options;\n    var display = opts.display;\n    var fontSize = valueOrDefault(opts.fontSize, defaults.global.defaultFontSize);\n    var minSize = me.minSize;\n    var lineCount = helpers.isArray(opts.text) ? opts.text.length : 1;\n    var lineHeight = helpers.options.toLineHeight(opts.lineHeight, fontSize);\n    var textSize = display ? lineCount * lineHeight + opts.padding * 2 : 0;\n\n    if (me.isHorizontal()) {\n      minSize.width = me.maxWidth; // fill all the width\n\n      minSize.height = textSize;\n    } else {\n      minSize.width = textSize;\n      minSize.height = me.maxHeight; // fill all the height\n    }\n\n    me.width = minSize.width;\n    me.height = minSize.height;\n  },\n  afterFit: noop,\n  // Shared Methods\n  isHorizontal: function isHorizontal() {\n    var pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  },\n  // Actually draw the title block on the canvas\n  draw: function draw() {\n    var me = this;\n    var ctx = me.ctx;\n    var valueOrDefault = helpers.valueOrDefault;\n    var opts = me.options;\n    var globalDefaults = defaults.global;\n\n    if (opts.display) {\n      var fontSize = valueOrDefault(opts.fontSize, globalDefaults.defaultFontSize);\n      var fontStyle = valueOrDefault(opts.fontStyle, globalDefaults.defaultFontStyle);\n      var fontFamily = valueOrDefault(opts.fontFamily, globalDefaults.defaultFontFamily);\n      var titleFont = helpers.fontString(fontSize, fontStyle, fontFamily);\n      var lineHeight = helpers.options.toLineHeight(opts.lineHeight, fontSize);\n      var offset = lineHeight / 2 + opts.padding;\n      var rotation = 0;\n      var top = me.top;\n      var left = me.left;\n      var bottom = me.bottom;\n      var right = me.right;\n      var maxWidth, titleX, titleY;\n      ctx.fillStyle = valueOrDefault(opts.fontColor, globalDefaults.defaultFontColor); // render in correct colour\n\n      ctx.font = titleFont; // Horizontal\n\n      if (me.isHorizontal()) {\n        titleX = left + (right - left) / 2; // midpoint of the width\n\n        titleY = top + offset;\n        maxWidth = right - left;\n      } else {\n        titleX = opts.position === 'left' ? left + offset : right - offset;\n        titleY = top + (bottom - top) / 2;\n        maxWidth = bottom - top;\n        rotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\n      }\n\n      ctx.save();\n      ctx.translate(titleX, titleY);\n      ctx.rotate(rotation);\n      ctx.textAlign = 'center';\n      ctx.textBaseline = 'middle';\n      var text = opts.text;\n\n      if (helpers.isArray(text)) {\n        var y = 0;\n\n        for (var i = 0; i < text.length; ++i) {\n          ctx.fillText(text[i], 0, y, maxWidth);\n          y += lineHeight;\n        }\n      } else {\n        ctx.fillText(text, 0, 0, maxWidth);\n      }\n\n      ctx.restore();\n    }\n  }\n});\n\nfunction createNewTitleBlockAndAttach(chart, titleOpts) {\n  var title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart: chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nmodule.exports = {\n  id: 'title',\n\n  /**\n   * Backward compatibility: since 2.1.5, the title is registered as a plugin, making\n   * Chart.Title obsolete. To avoid a breaking change, we export the Title as part of\n   * the plugin, which one will be re-exposed in the chart.js file.\n   * https://github.com/chartjs/Chart.js/pull/2640\n   * @private\n   */\n  _element: Title,\n  beforeInit: function beforeInit(chart) {\n    var titleOpts = chart.options.title;\n\n    if (titleOpts) {\n      createNewTitleBlockAndAttach(chart, titleOpts);\n    }\n  },\n  beforeUpdate: function beforeUpdate(chart) {\n    var titleOpts = chart.options.title;\n    var titleBlock = chart.titleBlock;\n\n    if (titleOpts) {\n      helpers.mergeIf(titleOpts, defaults.global.title);\n\n      if (titleBlock) {\n        layouts.configure(chart, titleBlock, titleOpts);\n        titleBlock.options = titleOpts;\n      } else {\n        createNewTitleBlockAndAttach(chart, titleOpts);\n      }\n    } else if (titleBlock) {\n      layouts.removeBox(chart, titleBlock);\n      delete chart.titleBlock;\n    }\n  }\n};","var baseAssignValue = require('./_baseAssignValue'),\n    createAggregator = require('./_createAggregator');\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The corresponding value of\n * each key is the last element responsible for generating the key. The\n * iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * var array = [\n *   { 'dir': 'left', 'code': 97 },\n *   { 'dir': 'right', 'code': 100 }\n * ];\n *\n * _.keyBy(array, function(o) {\n *   return String.fromCharCode(o.code);\n * });\n * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n *\n * _.keyBy(array, 'dir');\n * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n */\n\n\nvar keyBy = createAggregator(function (result, value, key) {\n  baseAssignValue(result, key, value);\n});\nmodule.exports = keyBy;","var arrayAggregator = require('./_arrayAggregator'),\n    baseAggregator = require('./_baseAggregator'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray');\n/**\n * Creates a function like `_.groupBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} [initializer] The accumulator object initializer.\n * @returns {Function} Returns the new aggregator function.\n */\n\n\nfunction createAggregator(setter, initializer) {\n  return function (collection, iteratee) {\n    var func = isArray(collection) ? arrayAggregator : baseAggregator,\n        accumulator = initializer ? initializer() : {};\n    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);\n  };\n}\n\nmodule.exports = createAggregator;","/**\n * A specialized version of `baseAggregator` for arrays.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction arrayAggregator(array, setter, iteratee, accumulator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    var value = array[index];\n    setter(accumulator, value, iteratee(value), array);\n  }\n\n  return accumulator;\n}\n\nmodule.exports = arrayAggregator;","var baseEach = require('./_baseEach');\n/**\n * Aggregates elements of `collection` on `accumulator` with keys transformed\n * by `iteratee` and values set by `setter`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\n\n\nfunction baseAggregator(collection, setter, iteratee, accumulator) {\n  baseEach(collection, function (value, key, collection) {\n    setter(accumulator, value, iteratee(value), collection);\n  });\n  return accumulator;\n}\n\nmodule.exports = baseAggregator;"],"sourceRoot":""}