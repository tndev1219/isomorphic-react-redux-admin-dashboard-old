{"version":3,"sources":["components/utility/layoutWrapper.style.js","components/utility/layoutWrapper.js","components/uielements/styles/inputNumber.style.js","components/uielements/InputNumber.js","components/cart/singleCart.js","containers/Ecommerce/cart/cartTable.style.js","containers/Ecommerce/cart/cart-table.js","containers/Ecommerce/cart/index.js"],"names":["LayoutContentWrapper","styled","div","_templateObject","__webpack_exports__","props","react_default","a","createElement","Object","assign","className","concat","children","AntInputNumber","ComponentName","palette","WDInputnumber","InputNumber","Inputnumber","WithDirection","onChange","value","isNaN","notification","_this","quantity","changeQuantity","objectID","_this$props","this","price","image","cancelQuantity","_highlightResult","totalPrice","toFixed","onClick","href","alt","src","name","description","min","max","step","Component","ProductsTable","transition","boxShadow","borderRadius","changeProductQuantity","ecommerceActions","CartTable","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","bind","assertThisInitialized","_this2","productQuantity","products","length","map","product","singleCart_default","key","newProductQuantity","forEach","push","style","classname","cartTable_style","renderItems","width","paddingRight","rtl","paddingLeft","input","size","placeholder","uielements_button","type","Link","to","connect","state","_state$Ecommerce","Ecommerce","layoutWrapper","cart_table"],"mappings":"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","file":"static/js/80.c4cfe086.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nconst LayoutContentWrapper = styled.div`\n  padding: 40px 20px;\n  display: flex;\n  flex-flow: row wrap;\n  overflow: hidden;\n\n  @media only screen and (max-width: 767px) {\n    padding: 50px 20px;\n  }\n\n  @media (max-width: 580px) {\n    padding: 15px;\n  }\n`;\n\nexport { LayoutContentWrapper };\n","import React from \"react\";\nimport { LayoutContentWrapper } from \"./layoutWrapper.style\";\n\nexport default props => (\n  <LayoutContentWrapper\n    className={\n      props.className != null\n        ? `${props.className} isoLayoutContentWrapper`\n        : \"isoLayoutContentWrapper\"\n    }\n    {...props}\n  >\n    {props.children}\n  </LayoutContentWrapper>\n);\n","import styled from 'styled-components';\nimport { palette } from 'styled-theme';\n\nconst AntInputNumber = ComponentName => styled(ComponentName)`\n  &.ant-input-number {\n    color: ${palette('texy', 1)};\n    padding: 0;\n    font-size: 13px;\n    height: 35px !important;\n    border: 1px solid ${palette('border', 0)};\n    width: 100%;\n    max-width: 80px;\n\n    .ant-input-number-input {\n      height: 33px;\n      color: ${palette('text', 1)};\n      padding: 0 10px;\n      text-align: ${props => (props['data-rtl'] === 'rtl' ? 'right' : 'left')};\n    }\n\n    &.ant-input-number-focused {\n      border-color: ${palette('primary', 0)};\n    }\n\n    .ant-input-number-handler-wrap {\n      left: ${props => (props['data-rtl'] === 'rtl' ? '0' : 'inherit')};\n      right: ${props => (props['data-rtl'] === 'rtl' ? 'inherit' : '0')};\n      border-radius: ${props =>\n        props['data-rtl'] === 'rtl' ? '4px 0 0 4px' : '0 4px 4px 0'};\n      border-left: ${props => (props['data-rtl'] === 'rtl' ? 0 : 1)}px solid\n        ${palette('border', 1)};\n      border-right: ${props => (props['data-rtl'] === 'rtl' ? 1 : 0)}px solid\n        ${palette('border', 1)};\n    }\n\n    .ant-input-number-handler-up-inner,\n    .ant-input-number-handler-down-inner {\n      font-size: 23px;\n      color: ${palette('text', 2)};\n\n      &:before {\n        display: block;\n        font-family: 'ionicons' !important;\n      }\n    }\n\n    .ant-input-number-handler-up-inner {\n      &:before {\n        content: '\\f365';\n      }\n    }\n\n    .ant-input-number-handler-down-inner {\n      &:before {\n        content: '\\f35f';\n      }\n    }\n  }\n`;\n\nexport default AntInputNumber;\n","import { InputNumber } from 'antd';\nimport AntInputNumber from './styles/inputNumber.style';\nimport WithDirection from '../../settings/withDirection';\n\nconst WDInputnumber = AntInputNumber(InputNumber);\nconst Inputnumber = WithDirection(WDInputnumber);\n\nexport default Inputnumber;\n","import React, { Component } from 'react';\nimport InputNumber from '../uielements/InputNumber';\nimport { notification } from '../index';\n\nexport default class extends Component {\n  onChange = value => {\n    if (!isNaN(value)) {\n      if (value !== this.props.quantity) {\n        this.props.changeQuantity(this.props.objectID, value);\n      }\n    } else {\n      notification('error', 'Please give valid number');\n    }\n  };\n\n  render() {\n    const {\n      price,\n      quantity,\n      image,\n      objectID,\n      cancelQuantity,\n      _highlightResult,\n    } = this.props;\n    const totalPrice = (price * quantity).toFixed(2);\n    return (\n      <tr>\n        <td\n          className=\"isoItemRemove\"\n          onClick={() => {\n            cancelQuantity(objectID);\n          }}\n        >\n          <a href=\"# \">\n            <i className=\"ion-android-close\" />\n          </a>\n        </td>\n        <td className=\"isoItemImage\">\n          <img alt=\"#\" src={image} />\n        </td>\n        <td className=\"isoItemName\">\n          <h3>{_highlightResult.name.value}</h3>\n          <p>{_highlightResult.description.value}</p>\n        </td>\n        <td className=\"isoItemPrice\">\n          <span className=\"itemPricePrefix\">$</span>\n          {price.toFixed(2)}\n        </td>\n        <td className=\"isoItemQuantity\">\n          <InputNumber\n            min={1}\n            max={1000}\n            value={quantity}\n            step={1}\n            onChange={this.onChange}\n          />\n        </td>\n        <td className=\"isoItemPriceTotal\">${totalPrice}</td>\n      </tr>\n    );\n  }\n}\n","import styled from 'styled-components';\nimport { palette } from 'styled-theme';\nimport {\n  transition,\n  borderRadius,\n  boxShadow,\n} from '../../../settings/style-util';\nimport WithDirection from '../../../settings/withDirection';\n\nconst ProductsTable = styled.div`\n  width: 100%;\n  background-color: #ffffff;\n  margin: 0 15px;\n\n  @media only screen and (max-width: 767px) {\n    overflow-x: auto;\n    margin: 0;\n  }\n\n  &.bordered {\n    table {\n      tbody {\n        tr {\n          border-bottom: 1px solid ${palette('border', 0)};\n\n          &:last-child {\n            border-bottom: 0;\n          }\n\n          &.isoTotalBill {\n            border-top: 0;\n          }\n        }\n      }\n    }\n  }\n\n  table {\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    border: 1px solid ${palette('border', 0)};\n\n    @media only screen and (max-width: 767px) {\n      width: 767px;\n      overflow: hidden;\n    }\n\n    /* TABLE HEAD */\n    thead {\n      width: 100%;\n      min-height: 50px;\n      border-bottom: 1px solid ${palette('border', 0)};\n\n      tr {\n        width: 100%;\n        display: flex;\n        align-items: center;\n        justify-content: flex-start;\n\n        th {\n          font-size: 14px;\n          font-weight: 500;\n          color: ${palette('text', 0)};\n          line-height: 1.2;\n          white-space: nowrap;\n          padding: 15px 0;\n          margin: 0 20px;\n          width: 15%;\n          text-align: center;\n\n          &:last-child {\n            margin-right: 0;\n          }\n\n          @media only screen and (max-width: 991px) {\n            margin: 0 10px;\n            flex-shrink: 0;\n          }\n\n          &.isoItemRemove {\n            width: 50px;\n            margin: 0;\n            flex-shrink: 0;\n            margin-left: 15px;\n\n            @media only screen and (max-width: 991px) {\n              width: 30px;\n              margin-left: 10px;\n            }\n          }\n\n          &.isoItemImage {\n            width: 80px;\n            flex-shrink: 0;\n\n            @media only screen and (max-width: 991px) {\n              width: 60px;\n            }\n          }\n\n          &.isoItemName {\n            max-width: none;\n            text-align: ${props => (props['data-rtl'] === 'rtl' ? 'right' : 'left')};\n            width: 45%;\n\n            @media only screen and (max-width: 991px) {\n              margin: 0 10px;\n              flex-shrink: 1;\n            }\n          }\n        }\n      }\n    }\n\n    /* TABLE BODY */\n    tbody {\n      width: 100%;\n\n      tr {\n        width: 100%;\n        display: flex;\n        align-items: center;\n        justify-content: flex-start;\n        min-height: 140px;\n        .isoTransition;\n\n        &.isoNoItemMsg {\n          min-height: 300px;\n          justify-content: center;\n          font-size: 30px;\n          font-weight: 300;\n          color: ${palette('grayscale', 1)};\n          line-height: 1.2;\n        }\n\n        td {\n          font-size: 14px;\n          font-weight: 500;\n          color: ${palette('text', 0)};\n          line-height: 1.2;\n          overflow: hidden;\n          padding: 15px 0;\n          margin: 0 20px;\n          width: 15%;\n          text-align: center;\n\n          &:last-child {\n            margin-right: 0;\n          }\n\n          @media only screen and (max-width: 991px) {\n            margin: 0 10px;\n            flex-shrink: 0;\n          }\n\n          h3 {\n            font-size: 14px;\n            font-weight: 500;\n            color: ${palette('text', 0)};\n            line-height: 1.2;\n            margin-bottom: 10px;\n          }\n\n          p {\n            font-size: 12px;\n            font-weight: 400;\n            color: ${palette('text', 2)};\n            line-height: 1.5;\n          }\n\n          span {\n            font-size: 14px;\n            font-weight: 500;\n            color: ${palette('text', 0)};\n          }\n\n          &.isoItemRemove {\n            text-align: center;\n            width: 50px;\n            margin: 0;\n            flex-shrink: 0;\n            margin-left: 15px;\n\n            a {\n              color: ${palette('text', 0)};\n              ${transition()};\n\n              &:hover {\n                color: ${palette('primary', 0)};\n              }\n            }\n\n            @media only screen and (max-width: 991px) {\n              width: 30px;\n              margin-left: 10px;\n            }\n          }\n\n          &.isoItemImage {\n            width: 80px;\n            flex-shrink: 0;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n\n            img {\n              width: 100%;\n              height: 100%;\n              object-fit: cover;\n            }\n\n            @media only screen and (max-width: 991px) {\n              width: 60px;\n            }\n          }\n\n          &.isoItemName {\n            text-align: ${props => (props['data-rtl'] === 'rtl' ? 'right' : 'left')};\n            max-width: none;\n            width: 45%;\n\n            @media only screen and (max-width: 991px) {\n              margin: 0 10px;\n              flex-shrink: 1;\n            }\n          }\n\n          .ant-input-number {\n            background-color: transparent;\n\n            &.ant-input-number-focused {\n              .isoBoxShadow(none);\n              ${boxShadow()};\n            }\n\n            .ant-input-number-handler-wrap {\n              background-color: transparent;\n            }\n\n            .ant-input-number-input {\n              background-color: transparent;\n            }\n          }\n        }\n\n        &.isoTotalBill {\n          border-top: 1px solid ${palette('border', 0)};\n          padding-top: 10px;\n          min-height: 100px;\n\n          &:hover {\n            background-color: #fff;\n          }\n        }\n      }\n    }\n\n    /* TABLE FOOTER */\n    tfoot {\n      width: 100%;\n      padding: 25px;\n      padding-top: 10px;\n\n      tr {\n        width: 100%;\n        display: flex;\n        align-items: center;\n\n        &.isoTotalBill {\n          justify-content: flex-end;\n\n          td {\n            width: 15%;\n          }\n        }\n\n        td {\n          .ant-input {\n            ${borderRadius('2px')};\n          }\n\n          .ant-btn {\n            height: 42px;\n            min-width: 125px;\n            ${borderRadius('2px')};\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default WithDirection(ProductsTable);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport Input from \"../../../components/uielements/input\";\nimport Button from \"../../../components/uielements/button\";\nimport ecommerceActions from \"../../../redux/ecommerce/actions\";\nimport SingleCart from \"../../../components/cart/singleCart\";\nimport ProductsTable from \"./cartTable.style\";\nimport { rtl } from \"../../../settings/withDirection\";\n\nconst { changeProductQuantity } = ecommerceActions;\n\nlet totalPrice = 0;\nclass CartTable extends Component {\n  constructor(props) {\n    super(props);\n    this.changeQuantity = this.changeQuantity.bind(this);\n    this.cancelQuantity = this.cancelQuantity.bind(this);\n  }\n  renderItems() {\n    const { productQuantity, products } = this.props;\n    totalPrice = 0;\n    if (!productQuantity || productQuantity.length === 0) {\n      return <tr className=\"isoNoItemMsg\">No item found</tr>;\n    }\n    return productQuantity.map(product => {\n      totalPrice += product.quantity * products[product.objectID].price;\n      return (\n        <SingleCart\n          key={product.objectID}\n          quantity={product.quantity}\n          changeQuantity={this.changeQuantity}\n          cancelQuantity={this.cancelQuantity}\n          {...products[product.objectID]}\n        />\n      );\n    });\n  }\n  changeQuantity(objectID, quantity) {\n    const { productQuantity } = this.props;\n    const newProductQuantity = [];\n    productQuantity.forEach(product => {\n      if (product.objectID !== objectID) {\n        newProductQuantity.push(product);\n      } else {\n        newProductQuantity.push({\n          objectID,\n          quantity\n        });\n      }\n    });\n    this.props.changeProductQuantity(newProductQuantity);\n  }\n  cancelQuantity(objectID) {\n    const { productQuantity } = this.props;\n    const newProductQuantity = [];\n    productQuantity.forEach(product => {\n      if (product.objectID !== objectID) {\n        newProductQuantity.push(product);\n      }\n    });\n    this.props.changeProductQuantity(newProductQuantity);\n  }\n  render() {\n    const { style } = this.props;\n    const classname = style != null ? style : \"\";\n    return (\n      <ProductsTable className={`isoCartTable ${classname}`}>\n        <table>\n          <thead>\n            <tr>\n              <th className=\"isoItemRemove\" />\n              <th className=\"isoItemImage\" />\n              <th className=\"isoItemName\">Name</th>\n              <th className=\"isoItemPrice\">Price</th>\n              <th className=\"isoItemQuantity\">Quantity</th>\n              <th className=\"isoItemPriceTotal\">Total</th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {this.renderItems()}\n            <tr className=\"isoTotalBill\">\n              <td className=\"isoItemRemove\" />\n              <td className=\"isoItemImage\" />\n              <td className=\"isoItemName\" />\n              <td className=\"isoItemPrice\" />\n              <td className=\"isoItemQuantity\">Total</td>\n              <td className=\"isoItemPriceTotal\">${totalPrice.toFixed(2)}</td>\n            </tr>\n          </tbody>\n\n          <tfoot>\n            <tr>\n              <td\n                style={{\n                  width: \"100%\",\n                  paddingRight: `${rtl === \"rtl\" ? \"0\" : \"25px\"}`,\n                  paddingLeft: `${rtl === \"rtl\" ? \"25px\" : \"0\"}`\n                }}\n              >\n                <Input size=\"large\" placeholder=\"Discount Coupon\" />\n              </td>\n              <td\n                style={{\n                  paddingRight: `${rtl === \"rtl\" ? \"0\" : \"25px\"}`,\n                  paddingLeft: `${rtl === \"rtl\" ? \"25px\" : \"0\"}`\n                }}\n              >\n                <Button>Apply</Button>\n              </td>\n              <td>\n                <Button type=\"primary\">\n                  <Link to={\"/dashboard/checkout\"}>Checkout</Link>\n                </Button>\n              </td>\n            </tr>\n          </tfoot>\n        </table>\n      </ProductsTable>\n    );\n  }\n}\nfunction mapStateToProps(state) {\n  const { productQuantity, products } = state.Ecommerce;\n  return { productQuantity, products };\n}\nexport default connect(mapStateToProps, { changeProductQuantity })(CartTable);\n","import React, { Component } from \"react\";\nimport LayoutWrapper from \"../../../components/utility/layoutWrapper\";\nimport CartTable from \"./cart-table\";\n\nexport default class extends Component {\n  render() {\n    return (\n      <LayoutWrapper>\n        <CartTable className=\"bordered\" />\n      </LayoutWrapper>\n    );\n  }\n}\n"],"sourceRoot":""}