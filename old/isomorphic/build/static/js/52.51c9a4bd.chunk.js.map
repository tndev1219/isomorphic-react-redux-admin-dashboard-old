{"version":3,"sources":["components/uielements/upload.js","components/contacts/deleteButton.js","components/contacts/contactList.style.js","components/contacts/contactList.js","components/contacts/contactCard.style.js","components/contacts/singleView.js","components/contacts/editView.js","containers/Contacts/contacts.style.js","containers/Contacts/index.js"],"names":["antd__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","Upload","_this$props","this","props","contact","deleteContact","name","firstName","concat","lastName","react_default","a","createElement","popconfirm","title","okText","cancelText","onConfirm","notification","id","uielements_button","icon","type","className","Component","WDContactListWrapper","styled","div","_templateObject","palette","boxShadow","borderRadius","transition","ContactListWrapper","WithDirection","ContactList","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","singleContact","bind","assertThisInitialized","onChange","state","search","seectedId","changeContact","activeClass","key","onClick","avatar","alt","src","deleteButton_default","event","setState","target","value","_this2","contacts","toUpperCase","filter","includes","filterContacts","input","placeholder","context","intl","formatMessage","length","customScrollBar","map","intlMessages","contextTypes","PropTypes","object","isRequired","WDContactCardWrapper","contactCard_style_templateObject","ContactCardWrapper","otherAttributes","extraInfos","forEach","attribute","push","beforeUpload","file","size","toConsumableArray","editContact","rows","upload","showUploadList","action","WDContactsWrapper","contacts_style_templateObject","ContactsWrapper","contactAction","addContact","viewChange","Content","Layout","Contacts","editView","selectedContact","style","background","contactList_ContactList","layout","editView_default","singleView_default","connect","_state$Contacts"],"mappings":"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","file":"static/js/52.51c9a4bd.chunk.js","sourcesContent":["import { Upload } from 'antd';\n\nexport default Upload;","import React, { Component } from 'react';\nimport Popconfirm from '../feedback/popconfirm';\nimport Button from '../uielements/button';\nimport notification from '../notification';\n\nexport default class extends Component {\n  render() {\n    const { contact, deleteContact } = this.props;\n    let name = '';\n    if (contact.firstName) {\n      name = `${contact.firstName} `;\n    }\n    if (contact.lastName) {\n      name = `${name}${contact.lastName}`;\n    }\n    if (!name) {\n      name = 'No Name';\n    }\n    return (\n      <Popconfirm\n        title={`Sure to delete ${name}?`}\n        okText=\"DELETE\"\n        cancelText=\"No\"\n        onConfirm={() => {\n          notification('error', `${name} Deleted`, '');\n          deleteContact(contact.id);\n        }}\n      >\n        <Button icon=\"close\" type=\"button\" className=\"isoDeleteBtn\" />\n      </Popconfirm>\n    );\n  }\n}\n","import styled from 'styled-components';\nimport { palette } from 'styled-theme';\nimport { transition, borderRadius, boxShadow } from '../../settings/style-util';\nimport WithDirection from '../../settings/withDirection';\n\nconst WDContactListWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n\n  .isoNoResultMsg {\n    padding: 15px 20px;\n    text-align: center;\n    color: ${palette('secondary', 2)};\n    font-weight: 500;\n    font-size: 14px;\n  }\n\n  .isoSearchBar {\n    .ant-input {\n      width: 100%;\n      font-size: 14px;\n      font-weight: 400;\n      color: ${palette('text', 0)};\n      line-height: inherit;\n      height: 69px;\n      padding: 0 20px;\n      padding-left: ${props =>\n        props['data-rtl'] === 'rtl' ? 'inherit' : '35px'};\n      padding-right: ${props =>\n        props['data-rtl'] === 'rtl' ? '35px' : 'inherit'};\n      border: 0;\n      border-bottom: 1px solid ${palette('border', 0)};\n      outline: 0 !important;\n      overflow: hidden;\n      background-color: #ffffff;\n      ${boxShadow('none')};\n      ${borderRadius()};\n      ${transition()};\n\n      @media only screen and (max-width: 767px) {\n        height: 50px;\n      }\n\n      &:hover,\n      &:focus {\n        border-color: ${palette('border', 0)} !important;\n      }\n\n      &::-webkit-input-placeholder {\n        color: ${palette('grayscale', 0)};\n      }\n\n      &:-moz-placeholder {\n        color: ${palette('grayscale', 0)};\n      }\n\n      &::-moz-placeholder {\n        color: ${palette('grayscale', 0)};\n      }\n      &:-ms-input-placeholder {\n        color: ${palette('grayscale', 0)};\n      }\n    }\n  }\n\n  .ant-input-suffix {\n    left: 10px;\n    right: auto;\n    color: ${palette('grayscale', 0)};\n  }\n\n  .isoContactList {\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    max-height: 100%;\n    overflow: hidden;\n    overflow-y: auto;\n\n    .contactListScrollbar {\n      height: calc(100vh - 200px);\n\n      @media only screen and (max-width: 767px) {\n        max-height: 60vh;\n      }\n    }\n\n    .isoSingleContact {\n      width: 100%;\n      margin: 0;\n      display: flex;\n      align-items: center;\n      justify-content: flex-start;\n      flex-shrink: 0;\n      padding: 15px 20px;\n      padding-right: ${props =>\n        props['data-rtl'] === 'rtl' ? '20px' : '35px'};\n      padding-left: ${props => (props['data-rtl'] === 'rtl' ? '35px' : '20px')};\n      border-bottom: 1px solid ${palette('border', 0)};\n      text-align: ${props => (props['data-rtl'] === 'rtl' ? 'right' : 'left')};\n      position: relative;\n      cursor: pointer;\n\n      &.active {\n        background-color: ${palette('secondary', 1)};\n      }\n\n      &:last-child {\n        border-bottom: 0;\n      }\n\n      .isoAvatar {\n        width: 35px;\n        height: 35px;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        margin-right: ${props =>\n          props['data-rtl'] === 'rtl' ? 'inherit' : '15px'};\n        margin-left: ${props =>\n          props['data-rtl'] === 'rtl' ? '15px' : 'inherit'};\n        flex-shrink: 0;\n        overflow: hidden;\n        ${borderRadius('50%')};\n\n        img {\n          width: 100%;\n          height: 100%;\n          object-fit: cover;\n        }\n      }\n\n      .isoContactName {\n        h3 {\n          font-size: 15px;\n        }\n      }\n\n      .isoNoteText {\n        width: calc(100% - 60px);\n        margin-right: ${props =>\n          props['data-rtl'] === 'rtl' ? 'inherit' : '20px'};\n        margin-left: ${props =>\n          props['data-rtl'] === 'rtl' ? '20px' : 'inherit'};\n        padding: 20px 0;\n        cursor: pointer;\n\n        h3 {\n          width: 100%;\n          white-space: nowrap;\n          text-overflow: ellipsis;\n          overflow: hidden;\n          color: ${palette('secondary', 2)};\n          font-weight: 500;\n        }\n\n        .isoNoteCreatedDate {\n          font-size: 13px;\n          color: ${palette('grayscale', 0)};\n        }\n      }\n\n      .isoDeleteBtn {\n        width: 24px;\n        height: 24px;\n        background-color: transparent;\n        flex-shrink: 0;\n        position: absolute;\n        top: 20px;\n        right: ${props => (props['data-rtl'] === 'rtl' ? 'inherit' : '5px')};\n        left: ${props => (props['data-rtl'] === 'rtl' ? '5px' : 'inherit')};\n        padding: 0;\n        border: 0;\n        font-size: 14px;\n        color: ${palette('grayscale', 0)};\n        ${transition()};\n\n        &:hover {\n          color: ${palette('primary', 0)};\n        }\n      }\n    }\n\n    .isoNotlistNotice {\n      font-size: 14px;\n      font-weight: 400;\n      color: ${palette('grayscale', 0)};\n      line-height: inherit;\n      padding: 30px 0;\n    }\n  }\n`;\n\nconst ContactListWrapper = WithDirection(WDContactListWrapper);\n\nexport { ContactListWrapper };\n","import React, { Component } from 'react';\nimport IntlMessages from '../utility/intlMessages';\nimport { InputSearch } from '../uielements/input';\nimport DeleteButton from './deleteButton';\nimport { PropTypes } from 'prop-types';\nimport { ContactListWrapper } from './contactList.style';\nimport Scrollbar from '../utility/customScrollBar';\n\nfunction filterContacts(contacts, search) {\n  search = search.toUpperCase();\n  return search\n    ? contacts.filter(contact => contact.name.toUpperCase().includes(search))\n    : contacts;\n}\n\nexport default class ContactList extends Component {\n  constructor(props) {\n    super(props);\n    this.singleContact = this.singleContact.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.state = {\n      search: '',\n    };\n  }\n  singleContact(contact) {\n    const { seectedId, deleteContact, changeContact } = this.props;\n    const activeClass = seectedId === contact.id ? 'active' : '';\n    const onChange = () => changeContact(contact.id);\n    return (\n      <div\n        key={contact.id}\n        className={`${activeClass} isoSingleContact`}\n        onClick={onChange}\n      >\n        <div className=\"isoAvatar\">\n          {contact.avatar ? <img alt=\"#\" src={contact.avatar} /> : ''}\n        </div>\n        <div className=\"isoContactName\">\n          <h3>{contact.name ? contact.name : 'No Name'}</h3>\n        </div>\n        <DeleteButton deleteContact={deleteContact} contact={contact} />\n      </div>\n    );\n  }\n  onChange(event) {\n    this.setState({ search: event.target.value });\n  }\n  render() {\n    const { search } = this.state;\n    const contacts = filterContacts(this.props.contacts, search);\n    return (\n      <ContactListWrapper className=\"isoContactListWrapper\">\n        <InputSearch\n          placeholder={this.context.intl.formatMessage({\n            id: 'contactlist.searchContacts',\n          })}\n          value={search}\n          onChange={this.onChange}\n          className=\"isoSearchBar\"\n        />\n        {contacts && contacts.length > 0 ? (\n          <div className=\"isoContactList\">\n            <Scrollbar className=\"contactListScrollbar\">\n              {contacts.map(contact => this.singleContact(contact))}\n            </Scrollbar>\n          </div>\n        ) : (\n          <span className=\"isoNoResultMsg\">\n            {<IntlMessages id=\"Component.contacts.noOption\" />}\n          </span>\n        )}\n      </ContactListWrapper>\n    );\n  }\n}\n\nContactList.contextTypes = {\n  intl: PropTypes.object.isRequired,\n};\n","import styled from 'styled-components';\nimport { palette } from 'styled-theme';\nimport { transition, borderRadius, boxShadow } from '../../settings/style-util';\nimport WithDirection from '../../settings/withDirection';\n\nconst WDContactCardWrapper = styled.div`\n  width: 100%;\n  height: calc(100% - 145px);\n  padding: 0 35px;\n  display: -webkit-flex;\n  display: -ms-flex;\n  display: flex;\n\n  @media only screen and (max-width: 600px) {\n    flex-direction: column;\n  }\n\n  @media only screen and (max-width: 767px) {\n    padding: 0 20px;\n  }\n\n  @media only screen and (min-width: 767px) and (max-width: 990px) {\n    flex-direction: column;\n  }\n\n  .isoContactCardHead {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    width: 120px;\n    flex-shrink: 0;\n    margin-right: ${props =>\n      props['data-rtl'] === 'rtl' ? 'inherit' : '50px'};\n    margin-left: ${props => (props['data-rtl'] === 'rtl' ? '50px' : 'inherit')};\n    flex-shrink: 0;\n\n    @media only screen and (max-width: 600px) {\n      margin-bottom: 20px;\n    }\n\n    @media only screen and (min-width: 767px) and (max-width: 990px) {\n      margin-bottom: 20px;\n    }\n\n    .isoPersonImage {\n      width: 120px;\n      height: 120px;\n      display: flex;\n      flex-shrink: 0;\n      align-items: center;\n      justify-content: center;\n      margin-bottom: 10px;\n      overflow: hidden;\n      ${borderRadius('5px')};\n\n      .avatar-uploader {\n        width: 100%;\n        height: 100%;\n      }\n\n      img {\n        width: 100%;\n        height: 100%;\n        object-fit: cover;\n      }\n    }\n\n    .isoPersonName {\n      font-size: 15px;\n      font-weight: 500;\n      color: ${palette('text', 0)};\n      line-height: 1.5;\n      margin: 0;\n    }\n  }\n\n  .isoContactInfoWrapper {\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n\n    @media only screen and (max-width: 767px) {\n      padding: 20px 0;\n    }\n\n    .isoContactCardInfos {\n      width: 100%;\n      display: flex;\n      flex-shrink: 0;\n      align-items: baseline;\n      flex-direction: row;\n      margin-bottom: 15px;\n\n      @media only screen and (max-width: 430px) {\n        flex-direction: column;\n        margin-bottom: 20px;\n      }\n\n      .isoInfoLabel {\n        font-size: 14px;\n        font-weight: 500;\n        color: ${palette('text', 0)};\n        line-height: 1.5;\n        margin: 0;\n        margin-right: ${props =>\n          props['data-rtl'] === 'rtl' ? 'inherit' : '15px'};\n        margin-left: ${props =>\n          props['data-rtl'] === 'rtl' ? '15px' : 'inherit'};\n        text-align: ${props =>\n          props['data-rtl'] === 'rtl' ? 'right' : 'left'};\n        min-width: 80px;\n        position: relative;\n\n        @media only screen and (max-width: 430px) {\n          margin-bottom: 5px;\n          margin-right: ${props =>\n            props['data-rtl'] === 'rtl' ? 'inherit' : '0'};\n          margin-left: ${props =>\n            props['data-rtl'] === 'rtl' ? '0' : 'inherit'};\n          padding-right: ${props =>\n            props['data-rtl'] === 'rtl' ? 'inherit' : '10px'};\n          padding-left: ${props =>\n            props['data-rtl'] === 'rtl' ? '10px' : 'inherit'};\n          min-width: 0;\n        }\n\n        &::after {\n          content: ':';\n          position: absolute;\n          right: ${props => (props['data-rtl'] === 'rtl' ? 'inherit' : '0')};\n          left: ${props => (props['data-rtl'] === 'rtl' ? '0' : 'inherit')};\n        }\n      }\n\n      .isoInfoDetails {\n        font-size: 14px;\n        font-weight: 400;\n        color: ${palette('text', 2)};\n        line-height: 1.5;\n        margin: 0;\n        text-align: ${props =>\n          props['data-rtl'] === 'rtl' ? 'right' : 'left'};\n      }\n\n      input {\n        font-size: 14px;\n        font-weight: 400;\n        color: ${palette('text', 2)};\n        line-height: inherit;\n        height: 36px;\n        padding: 0 15px;\n        margin: 0;\n        border: 1px solid ${palette('border', 0)};\n        outline: 0 !important;\n        overflow: hidden;\n        background-color: #ffffff;\n        ${boxShadow('none')};\n        ${borderRadius('3px')};\n        ${transition()};\n\n        &:focus {\n          border-color: ${palette('primary', 0)};\n          ${boxShadow('0 0 0 2px rgba(68, 130, 255, 0.2)')};\n          outline: 0;\n        }\n\n        &:hover {\n          border-color: ${palette('primary', 0)};\n        }\n\n        &::-webkit-input-placeholder {\n          color: ${palette('grayscale', 0)};\n        }\n\n        &:-moz-placeholder {\n          color: ${palette('grayscale', 0)};\n        }\n\n        &::-moz-placeholder {\n          color: ${palette('grayscale', 0)};\n        }\n        &:-ms-input-placeholder {\n          color: ${palette('grayscale', 0)};\n        }\n      }\n\n      textarea {\n        font-size: 14px;\n        font-weight: 400;\n        color: ${palette('text', 2)};\n        line-height: 24px;\n        height: 210px;\n        padding: 10px 15px;\n        margin: 0;\n        border: 1px solid ${palette('border', 0)};\n        outline: 0 !important;\n        background-color: #ffffff;\n        ${boxShadow('none')};\n        ${borderRadius('3px')};\n        ${transition()};\n\n        &:focus {\n          border-color: ${palette('primary', 0)};\n          ${boxShadow('0 0 0 2px rgba(68, 130, 255, 0.2)')};\n          outline: 0;\n        }\n\n        &:hover {\n          border-color: ${palette('primary', 0)};\n        }\n\n        &::-webkit-input-placeholder {\n          color: ${palette('grayscale', 0)};\n        }\n\n        &:-moz-placeholder {\n          color: ${palette('grayscale', 0)};\n        }\n\n        &::-moz-placeholder {\n          color: ${palette('grayscale', 0)};\n        }\n        &:-ms-input-placeholder {\n          color: ${palette('grayscale', 0)};\n        }\n      }\n    }\n  }\n`;\n\nconst ContactCardWrapper = WithDirection(WDContactCardWrapper);\n\nexport { ContactCardWrapper };\n","import React, { Component } from 'react';\nimport { ContactCardWrapper } from './contactCard.style';\n\nexport default class extends Component {\n  render() {\n    const { contact, otherAttributes } = this.props;\n    const name = contact.name ? contact.name : 'No Name';\n    const extraInfos = [];\n    otherAttributes.forEach(attribute => {\n      const value = contact[attribute.value];\n      if (value) {\n        extraInfos.push(\n          <div className=\"isoContactCardInfos\" key={attribute.value}>\n            <p className=\"isoInfoLabel\">{`${attribute.title}`}</p>\n            <p className=\"isoInfoDetails\">{value}</p>\n          </div>\n        );\n      }\n    });\n    return (\n      <ContactCardWrapper className=\"isoContactCard\">\n        <div className=\"isoContactCardHead\">\n          <div className=\"isoPersonImage\">\n            {contact.avatar ? <img alt=\"#\" src={contact.avatar} /> : ''}\n          </div>\n          <h1 className=\"isoPersonName\">{name}</h1>\n        </div>\n        <div className=\"isoContactInfoWrapper\">{extraInfos}</div>\n      </ContactCardWrapper>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Icon } from 'antd';\nimport Input, { Textarea } from '../uielements/input';\nimport Upload from '../uielements/upload';\nimport notification from '../notification';\nimport { ContactCardWrapper } from './contactCard.style';\nimport './upload.css';\n\nfunction beforeUpload(file) {\n  const isJPG = file.type === 'image/jpeg';\n  if (!isJPG) {\n    notification('error', 'You can only upload JPG file!', '');\n    return false;\n  }\n  const isLt2M = file.size / 1024 / 1024 < 2;\n  if (!isLt2M) {\n    notification('error', 'Image must smaller than 2MB!', '');\n    return false;\n  }\n  notification('success', 'Image uploaded successfully!', '');\n  return true;\n}\nexport default class extends Component {\n  render() {\n    const { contact, otherAttributes } = this.props;\n    const name = contact.name ? contact.name : 'No Name';\n    const extraInfos = [];\n    const names = [\n      { value: 'firstName', title: 'First Name' },\n      { value: 'lastName', title: 'Last Name' }\n    ];\n    [...names, ...otherAttributes].forEach(attribute => {\n      const value = contact[attribute.value];\n      const editContact = event => {\n        contact[attribute.value] = event.target.value;\n        let name = '';\n        if (contact.firstName) {\n          name = `${contact.firstName} `;\n        }\n        if (contact.lastName) {\n          name = `${name}${contact.lastName}`;\n        }\n        contact.name = name;\n        this.props.editContact(contact);\n      };\n      if (attribute.value === 'note') {\n        extraInfos.push(\n          <div className=\"isoContactCardInfos\" key={attribute.value}>\n            <p className=\"isoInfoLabel\">{`${attribute.title}`}</p>\n            <Textarea\n              placeholder={`${attribute.title}`}\n              value={value}\n              type=\"textarea\"\n              rows={5}\n              onChange={event => editContact(event)}\n            />\n          </div>\n        );\n      } else {\n        extraInfos.push(\n          <div className=\"isoContactCardInfos\" key={attribute.value}>\n            <p className=\"isoInfoLabel\">{`${attribute.title}`}</p>\n            <Input\n              placeholder={`${attribute.title}`}\n              value={value}\n              onChange={event => editContact(event)}\n            />\n          </div>\n        );\n      }\n    });\n    return (\n      <ContactCardWrapper className=\"isoContactCard\">\n        <div className=\"isoContactCardHead\">\n          <div className=\"isoPersonImage\">\n            <Upload\n              className=\"avatar-uploader\"\n              name=\"avatar\"\n              showUploadList={false}\n              beforeUpload={beforeUpload}\n              action=\"\"\n            >\n              {contact.avatar ? (\n                <img src={contact.avatar} alt=\"\" className=\"avatar\" />\n              ) : (\n                ''\n              )}\n              <Icon type=\"plus\" className=\"avatar-uploader-trigger\" />\n            </Upload>\n          </div>\n          <h1 className=\"isoPersonName\">{name}</h1>\n        </div>\n        <div className=\"isoContactInfoWrapper\">{extraInfos}</div>\n      </ContactCardWrapper>\n    );\n  }\n}\n","import styled from \"styled-components\";\nimport { palette } from \"styled-theme\";\nimport { transition, borderRadius } from \"../../settings/style-util\";\nimport WithDirection from \"../../settings/withDirection\";\n\nconst WDContactsWrapper = styled.div`\n  padding: 50px 35px;\n  display: flex;\n  ${\"\" /* max-height: calc(100vh - 130px); */} @media only screen and (max-width: 767px) {\n    padding: 50px 20px;\n    flex-direction: column;\n    height: auto;\n  }\n\n  @media only screen and (min-width: 767px) and (max-width: 990px) {\n    padding: 40px 30px;\n  }\n\n  .isoContactListBar {\n    display: flex;\n    flex-direction: column;\n    flex-shrink: 0;\n    background: #ffffff;\n    border: 1px solid ${palette(\"border\", 0)};\n    width: 320px;\n    overflow: hidden;\n    overflow-y: auto;\n\n    @media only screen and (max-width: 767px) {\n      width: auto !important;\n      margin-bottom: 20px;\n      min-width: 0 !important;\n      max-width: 100% !important;\n      flex: 0 !important;\n    }\n\n    @media only screen and (min-width: 767px) and (max-width: 990px) {\n      width: 270px !important;\n      flex: 0 0 270px !important;\n    }\n  }\n\n  .isoContactBoxWrapper {\n    width: 100%;\n    display: flex;\n    justify-content: flex-start;\n    background-color: #ffffff;\n    border: 1px solid ${palette(\"border\", 0)};\n    border-left: ${props => (props[\"data-rtl\"] === \"rtl\" ? \"inherit\" : \"0\")};\n    border-right: ${props => (props[\"data-rtl\"] === \"rtl\" ? \"0\" : \"inherit\")};\n    position: relative;\n\n    .isoContactBox {\n      width: 100%;\n      height: 100%;\n    }\n\n    .contactBoxScrollbar {\n      height: calc(100vh - 225px);\n    }\n\n    .isoContactControl {\n      width: 100%;\n      display: flex;\n      align-items: center;\n      justify-content: flex-start;\n      flex-shrink: 0;\n      padding: 30px;\n      background-color: #ffffff;\n\n      @media only screen and (max-width: 767px) {\n        padding: 30px 20px;\n      }\n\n      button:not(.isoAddContactBtn) {\n        font-size: 16px;\n        color: ${palette(\"secondary\", 0)};\n        width: 35px;\n        height: 35px;\n        display: flex;\n        align-items: center;\n        text-align: center;\n        justify-content: center;\n        background-color: #ffffff;\n        outline: 0;\n        padding: 0;\n        border: 1px solid ${palette(\"border\", 0)};\n        margin-left: ${props =>\n          props[\"data-rtl\"] === \"rtl\" ? \"inherit\" : \"-1px\"};\n        margin-right: ${props =>\n          props[\"data-rtl\"] === \"rtl\" ? \"-1px\" : \"inherit\"};\n        cursor: pointer;\n        ${borderRadius()};\n        ${transition()};\n\n        i {\n          width: 100%;\n        }\n\n        span {\n          display: none;\n        }\n\n        &:first-child {\n          margin-left: ${props =>\n            props[\"data-rtl\"] === \"rtl\" ? \"inherit\" : \"0\"};\n          margin-right: ${props =>\n            props[\"data-rtl\"] === \"rtl\" ? \"0\" : \"inherit\"};\n        }\n\n        &:hover {\n          color: ${palette(\"primary\", 0)};\n          background-color: ${palette(\"grayscale\", 7)};\n        }\n      }\n\n      .isoAddContactBtn {\n        background-color: ${palette(\"primary\", 0)};\n        border: 0;\n        height: 30px;\n        padding: 0 15px;\n        margin-left: ${props =>\n          props[\"data-rtl\"] === \"rtl\" ? \"inherit\" : \"auto\"};\n        margin-right: ${props =>\n          props[\"data-rtl\"] === \"rtl\" ? \"auto\" : \"inherit\"};\n        ${borderRadius(\"3px\")};\n        ${transition()};\n\n        span {\n          font-size: 12px;\n          font-weight: 400;\n          padding: 0;\n          text-transform: uppercase;\n          color: #ffffff;\n        }\n\n        &:hover {\n          background-color: ${palette(\"primary\", 1)};\n        }\n      }\n    }\n  }\n`;\n\nconst ContactsWrapper = WithDirection(WDContactsWrapper);\n\nexport { ContactsWrapper };\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport contactAction from \"../../redux/contacts/actions\";\nimport { Layout, Icon } from \"antd\";\nimport Button from \"../../components/uielements/button\";\nimport ContactList from \"../../components/contacts/contactList\";\nimport SingleContactView from \"../../components/contacts/singleView\";\nimport EditContactView from \"../../components/contacts/editView\";\nimport DeleteButton from \"../../components/contacts/deleteButton\";\nimport { otherAttributes } from \"./fakeData\";\nimport IntlMessages from \"../../components/utility/intlMessages\";\nimport { ContactsWrapper } from \"./contacts.style\";\nimport Scrollbar from \"../../components/utility/customScrollBar.js\";\n\nconst {\n  changeContact,\n  addContact,\n  editContact,\n  deleteContact,\n  viewChange\n} = contactAction;\n\nconst { Content } = Layout;\nclass Contacts extends Component {\n  render() {\n    const {\n      contacts,\n      seectedId,\n      editView,\n      changeContact,\n      addContact,\n      editContact,\n      deleteContact,\n      viewChange\n    } = this.props;\n    const selectedContact = seectedId\n      ? contacts.filter(contact => contact.id === seectedId)[0]\n      : null;\n    const onVIewChange = () => viewChange(!editView);\n    return (\n      <ContactsWrapper\n        className=\"isomorphicContacts\"\n        style={{ background: \"none\" }}\n      >\n        <div className=\"isoContactListBar\">\n          <ContactList\n            contacts={contacts}\n            seectedId={seectedId}\n            changeContact={changeContact}\n            deleteContact={deleteContact}\n          />\n        </div>\n        <Layout className=\"isoContactBoxWrapper\">\n          {selectedContact ? (\n            <Content className=\"isoContactBox\">\n              <div className=\"isoContactControl\">\n                <Button type=\"button\" onClick={onVIewChange}>\n                  {editView ? <Icon type=\"check\" /> : <Icon type=\"edit\" />}{\" \"}\n                </Button>\n                <DeleteButton\n                  deleteContact={deleteContact}\n                  contact={selectedContact}\n                />\n                <Button\n                  type=\"primary\"\n                  onClick={addContact}\n                  className=\"isoAddContactBtn\"\n                >\n                  <IntlMessages id=\"contactlist.addNewContact\" />\n                </Button>\n              </div>\n\n              <Scrollbar className=\"contactBoxScrollbar\">\n                {editView ? (\n                  <EditContactView\n                    contact={selectedContact}\n                    editContact={editContact}\n                    otherAttributes={otherAttributes}\n                  />\n                ) : (\n                  <SingleContactView\n                    contact={selectedContact}\n                    otherAttributes={otherAttributes}\n                  />\n                )}\n              </Scrollbar>\n            </Content>\n          ) : (\n            <div className=\"isoContactControl\">\n              <Button\n                type=\"primary\"\n                onClick={addContact}\n                className=\"isoAddContactBtn\"\n              >\n                <IntlMessages id=\"contactlist.addNewContact\" />\n              </Button>\n            </div>\n          )}\n        </Layout>\n      </ContactsWrapper>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  const { contacts, seectedId, editView } = state.Contacts;\n  return {\n    contacts,\n    seectedId,\n    editView\n  };\n}\nexport default connect(mapStateToProps, {\n  changeContact,\n  addContact,\n  editContact,\n  deleteContact,\n  viewChange\n})(Contacts);\n"],"sourceRoot":""}