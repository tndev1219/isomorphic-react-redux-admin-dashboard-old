{"version":3,"sources":["components/utility/loader.style.js","components/utility/loader.js","components/utility/helper-text.js","customApp/components/githubResult.style.js","customApp/components/githubResult.js","customApp/containers/GithubSearch/index.js"],"names":["LoaderComponent","styled","div","_templateObject","palette","__webpack_exports__","Loader","react_default","a","createElement","loader_style","className","viewBox","cx","cy","r","fill","strokeWidth","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_ref","_ref$text","text","style","display","alignItems","justifyContent","width","padding","WDGithubResultListStyleWrapper","transition","props","borderRadius","GithubResultStyleWrapper","_templateObject2","GithubResultListStyleWrapper","WithDirection","GitResult","GitSearch","onPageChange","searcText","result","loading","error","page","total_count","loader","helper_text","length","visibleItem","pageCount","Math","floor","per_page","concat","map","item","updateDate","Date","updated_at","toDateString","key","id","onClick","window","open","html_url","href","full_name","language","stargazers_count","description","SearchList","pagination","defaultCurrent","total","onChange","gitSearch","actions","onSearch","value","_this","notification","this","rowStyle","basicStyle","colStyle","gutter","_this$props","layoutWrapper","pageHeader","intlMessages","row","justify","col","md","sm","xs","box","minHeight","input","placeholder","defaultValue","githubResult","Component","connect","state","githubSearch"],"mappings":"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","file":"static/js/92.ce4b6d6d.chunk.js","sourcesContent":["import styled from 'styled-components';\nimport { palette } from 'styled-theme';\n\nconst LoaderComponent = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: absolute;\n  z-index: 10000000000;\n  top: 0;\n  right: 0;\n\n  @media only screen and (min-width: 768px) and (max-width: 1220px) {\n    width: calc(100% - 80px);\n  }\n\n  @media only screen and (max-width: 767px) {\n    width: 100%;\n  }\n\n  .isoContentLoader {\n    width: 50px;\n    height: 50px;\n    animation: svgSpinner 1.4s linear infinite;\n  }\n\n  .isoContentLoaderCircle {\n    animation: svgSpinnerCircle 1.4s ease-in-out infinite;\n    stroke-dasharray: 80px, 200px;\n    stroke-dashoffset: 0px;\n    stroke: ${palette('primary', 0)};\n    stroke-linecap: round;\n  }\n\n  @keyframes svgSpinner {\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n  @keyframes svgSpinnerCircle {\n    0% {\n      stroke-dasharray: 1px, 200px;\n      stroke-dashoffset: 0px;\n    }\n    50% {\n      stroke-dasharray: 100px, 200px;\n      stroke-dashoffset: -15px;\n    }\n    100% {\n      stroke-dasharray: 100px, 200px;\n      stroke-dashoffset: -120px;\n    }\n  }\n`;\n\nexport default LoaderComponent;\n","import React from \"react\";\nimport LoaderComponent from \"./loader.style\";\n\nexport default Loader => (\n  <LoaderComponent>\n    <svg className=\"isoContentLoader\" viewBox=\"0 0 50 50\">\n      <circle\n        className=\"isoContentLoaderCircle\"\n        cx=\"25\"\n        cy=\"25\"\n        r=\"20\"\n        fill=\"none\"\n        strokeWidth=\"3.6\"\n      />\n    </svg>\n  </LoaderComponent>\n);\n","import React from 'react';\n\nexport default ({ text = '' }) => (\n  <div\n    className=\"isoHelperText\"\n    style={{\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      width: '100%',\n      padding: '20px'\n    }}\n  >\n    <h3>{text}</h3>\n  </div>\n);\n","import styled from 'styled-components';\nimport { palette } from 'styled-theme';\nimport { borderRadius, transition } from '../../settings/style-util';\nimport WithDirection from '../../settings/withDirection';\n\nconst WDGithubResultListStyleWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n\n  .isoSingleRepository {\n    padding: 20px 0;\n    border-bottom: 1px solid ${palette('border', 2)};\n\n    &:last-of-type {\n      border-bottom: 0;\n    }\n\n    .titleAndLanguage {\n      display: flex;\n      width: 100%;\n      align-items: center;\n\n      @media only screen and (max-width: 767px) {\n        flex-wrap: wrap;\n      }\n\n      h3 {\n        width: 70%;\n        flex-shrink: 0;\n\n        @media only screen and (max-width: 767px) {\n          width: 100%;\n        }\n\n        @media only screen and (min-width: 768px) and (max-width: 1199px) {\n          flex-shrink: 1;\n        }\n\n        a {\n          font-size: 17px;\n          font-weight: 700;\n          color: ${palette('primary', 0)};\n          line-height: 1.3;\n          word-break: break-word;\n          display: inline-block;\n          ${transition()};\n\n          &:hover {\n            color: ${palette('primary', 11)};\n          }\n        }\n      }\n\n      span {\n        width: 120px;\n        flex-shrink: 0;\n        display: flex;\n        align-items: center;\n        font-size: 14px;\n        font-weight: 400;\n        color: ${palette('text', 1)};\n        line-height: 1.3;\n\n        &.language {\n          margin: ${props =>\n            props['data-rtl'] === 'rtl' ? '0 0 0 70px' : '0 70px 0 0'};\n          &:before {\n            content: '';\n            width: 10px;\n            height: 10px;\n            margin: ${props =>\n              props['data-rtl'] === 'rtl' ? '0 0 0 5px' : '0 5px 0 0'};\n            display: inline-block;\n            background-color: ${palette('text', 1)};\n            ${borderRadius('50%')};\n          }\n\n          @media only screen and (max-width: 767px) {\n            margin: ${props => (props['data-rtl'] === 'rtl' ? '0' : '0')};\n          }\n\n          @media only screen and (min-width: 768px) and (max-width: 1199px) {\n            margin: ${props =>\n              props['data-rtl'] === 'rtl' ? '0 0 0 40px' : '0 40px 0 0'};\n          }\n        }\n\n        &.totalStars {\n          width: 100px;\n          &:before {\n            content: '\\f4b3';\n            font-family: 'ionicons';\n            font-size: 16px;\n            color: ${palette('text', 1)};\n            margin: ${props =>\n              props['data-rtl'] === 'rtl' ? '0 0 0 5px' : '0 5px 0 0'};\n          }\n        }\n      }\n    }\n\n    p {\n      font-size: 14px;\n      font-weight: 400;\n      color: ${palette('text', 1)};\n      line-height: 1.3;\n      margin-bottom: 0;\n      margin-top: 10px;\n      display: block;\n    }\n\n    .updateDate {\n      font-size: 13px;\n      font-weight: 400;\n      color: ${palette('text', 3)};\n      line-height: 1.3;\n      display: inline-block;\n      margin-top: 25px;\n    }\n  }\n`;\nconst GithubResultStyleWrapper = styled.div`\n  margin-top: 30px;\n\n  .isoTotalRepository {\n    font-size: 18px;\n    font-weight: 700;\n    color: ${palette('text', 0)};\n    line-height: 1.3;\n    padding-bottom: 15px;\n    border-bottom: 1px solid ${palette('border', 2)};\n  }\n\n  .githubSearchPagination {\n    display: -webkit-flex;\n    display: -ms-flex;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    margin: 25px 0 10px;\n\n    .ant-pagination {\n      display: -webkit-inline-flex;\n      display: -ms-inline-flex;\n      display: inline-flex;\n    }\n  }\n`;\nconst GithubResultListStyleWrapper = WithDirection(\n  WDGithubResultListStyleWrapper\n);\n\nexport { GithubResultListStyleWrapper, GithubResultStyleWrapper };\n","import React from 'react';\nimport Loader from '../../components/utility/loader';\nimport HelperText from '../../components/utility/helper-text';\nimport Pagination from '../../components/uielements/pagination';\nimport { per_page } from '../redux/githubSearch/sagas';\nimport {\n  GithubResultListStyleWrapper,\n  GithubResultStyleWrapper,\n} from './githubResult.style';\n\nfunction SearchList(result) {\n  return (\n    <GithubResultListStyleWrapper className=\"isoGithubResultList\">\n      {result.map(item => {\n        const onClick = () => {\n          window.open(item.html_url, '_blank');\n        };\n        const updateDate = new Date(item.updated_at).toDateString();\n        return (\n          <div key={item.id} className=\"isoSingleRepository\">\n            <div className=\"titleAndLanguage\">\n              <h3>\n                <a onClick={onClick} href=\"# \">\n                  {`${item.full_name} `}\n                </a>\n              </h3>\n\n              {item.language ? (\n                <span className=\"language\">{item.language}</span>\n              ) : (\n                ''\n              )}\n              {item.stargazers_count ? (\n                <span className=\"totalStars\">{item.stargazers_count}</span>\n              ) : (\n                ''\n              )}\n            </div>\n            {item.description ? <p>{item.description}</p> : ''}\n            <span className=\"updateDate\">Updated on {updateDate}</span>\n          </div>\n        );\n      })}\n    </GithubResultListStyleWrapper>\n  );\n}\nconst GitResult = ({ GitSearch, onPageChange }) => {\n  const { searcText, result, loading, error, page, total_count } = GitSearch;\n  if (!searcText) {\n    return <div />;\n  }\n  if (loading) {\n    return <Loader />;\n  }\n  if (error || !total_count) {\n    return <HelperText text=\"THERE ARE SOME ERRORS\" />;\n  }\n  if (result.length === 0) {\n    return <HelperText text=\"No Result Found\" />;\n  }\n  const visibleItem = total_count > 1000 ? 1000 : total_count;\n  const pageCount = Math.floor(visibleItem / per_page);\n  return (\n    <GithubResultStyleWrapper className=\"isoGithubSearchResult\">\n      <p className=\"isoTotalRepository\">\n        <span>{`${total_count}`} repository results</span>\n      </p>\n      {SearchList(result)}\n      <div className=\"githubSearchPagination\">\n        <Pagination\n          defaultCurrent={page}\n          total={pageCount}\n          onChange={page => {\n            onPageChange(searcText, page);\n          }}\n        />\n      </div>\n    </GithubResultStyleWrapper>\n  );\n};\n\nexport default GitResult;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Row, Col } from 'antd';\nimport PageHeader from '../../../components/utility/pageHeader';\nimport Box from '../../../components/utility/box';\nimport LayoutWrapper from '../../../components/utility/layoutWrapper';\nimport { InputSearch } from '../../../components/uielements/input';\nimport IntlMessages from '../../../components/utility/intlMessages';\nimport notification from '../../../components/notification';\nimport GitResult from '../../components/githubResult';\nimport basicStyle from '../../../settings/basicStyle';\nimport actions from '../../redux/githubSearch/actions';\n\nconst { gitSearch, onPageChange } = actions;\n\nclass GitSearch extends Component {\n  onSearch = value => {\n    if (value && value.length > 0) {\n      this.props.gitSearch(value);\n    } else {\n      notification('error', 'Please type something');\n    }\n  };\n  componentDidMount() {\n    this.onSearch(this.props.GitSearch.searcText);\n  }\n  render() {\n    const { rowStyle, colStyle, gutter } = basicStyle;\n    const { onPageChange, GitSearch } = this.props;\n    return (\n      <LayoutWrapper>\n        <PageHeader>\n          <IntlMessages id=\"sidebar.githubSearch\" />\n        </PageHeader>\n        <Row style={rowStyle} gutter={gutter} justify=\"start\">\n          <Col md={24} sm={24} xs={24} style={colStyle}>\n            <Box style={{ minHeight: 220 }}>\n              <InputSearch\n                placeholder=\"Github Search\"\n                defaultValue={GitSearch.searcText}\n                onSearch={this.onSearch}\n              />\n              <GitResult\n                GitSearch={GitSearch}\n                defaultValue={GitSearch.searcText}\n                onPageChange={onPageChange}\n              />\n            </Box>\n          </Col>\n        </Row>\n      </LayoutWrapper>\n    );\n  }\n}\nfunction mapStateToProps(state) {\n  return { GitSearch: state.githubSearch };\n}\nexport default connect(\n  mapStateToProps,\n  { gitSearch, onPageChange }\n)(GitSearch);\n"],"sourceRoot":""}